local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("X2hub V3", "BloodTheme")

local Tab = Window:NewTab("Fe scripts")

local Section = Tab:NewSection("Fe scripts")

Section:NewButton("Fe sniper", "ButtonInfo", function()
--[[
    fe sniper
    made by MyWorld
    discord.gg/pYVHtSJmEY
    required hat: https://www.roblox.com/catalog/5063578607
]]

--reanimate by MyWorld#4430 discord.gg/pYVHtSJmEY
local Vector3_101 = Vector3.new(1, 0, 1)
local netless_Y = Vector3.new(0, 25.1, 0)
local function getNetlessVelocity(realPartVelocity) --change this if you have a better method
    local mag = realPartVelocity.Magnitude
    if (mag > 1) and (mag < 100) then
        local unit = realPartVelocity.Unit
        if (unit.Y > 0.25) or (unit.Y < -0.75) then
            return realPartVelocity * (25.1 / realPartVelocity.Y)
        end
        realPartVelocity = unit * 100
    end
    return (realPartVelocity * Vector3_101) + netless_Y
end
local simradius = "shp" --simulation radius (net bypass) method
--"shp" - sethiddenproperty
--"ssr" - setsimulationradius
--false - disable
local noclipAllParts = false --set it to true if you want noclip
local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
local newanimate = false --disables the animate script and enables after reanimation
local discharscripts = true --disables all localScripts parented to your character before reanimation
local R15toR6 = true --tries to convert your character to r6 if its r15
local hatcollide = false --makes hats cancollide (credit to ShownApe) (works only with reanimate method 0)
local humState16 = true --enables collisions for limbs before the humanoid dies (using hum:ChangeState)
local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
local hedafterneck = false --disable aligns for head and enable after neck or torso is removed
local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
local method = 3 --reanimation method
--methods:
--0 - breakJoints (takes [loadtime] seconds to laod)
--1 - limbs
--2 - limbs + anti respawn
--3 - limbs + breakJoints after [loadtime] seconds
--4 - remove humanoid + breakJoints
--5 - remove humanoid + limbs
local alignmode = 2 --AlignPosition mode
--modes:
--1 - AlignPosition rigidity enabled true
--2 - 2 AlignPositions rigidity enabled both true and false
--3 - AlignPosition rigidity enabled false
local flingpart = "HumanoidRootPart" --name of the part or the hat used for flinging
--the fling function
--usage: fling(target, duration, velocity)
--target can be set to: basePart, CFrame, Vector3, character model or humanoid (flings at mouse.Hit if argument not provided))
--duration (fling time in seconds) can be set to: a number or a string convertable to the number (0.5s if not provided),
--velocity (fling part rotation velocity) can be set to a vector3 value (Vector3.new(20000, 20000, 20000) if not provided)

local lp = game:GetService("Players").LocalPlayer
local rs = game:GetService("RunService")
local stepped = rs.Stepped
local heartbeat = rs.Heartbeat
local renderstepped = rs.RenderStepped
local sg = game:GetService("StarterGui")
local ws = game:GetService("Workspace")
local cf = CFrame.new
local v3 = Vector3.new
local v3_0 = Vector3.zero
local inf = math.huge

local c = lp.Character

if not (c and c.Parent) then
	return
end

c:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (c and c.Parent) then
	    c = nil
	end
end)

local function gp(parent, name, className)
	if typeof(parent) == "Instance" then
		for i, v in pairs(parent:GetChildren()) do
			if (v.Name == name) and v:IsA(className) then
				return v
			end
		end
	end
	return nil
end

if type(getNetlessVelocity) ~= "function" then
    getNetlessVelocity = nil
end

local function align(Part0, Part1)
	Part0.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)

	local att0 = Instance.new("Attachment")
	att0.Orientation = v3_0
	att0.Position = v3_0
	att0.Name = "att0_" .. Part0.Name
	local att1 = Instance.new("Attachment")
	att1.Orientation = v3_0
	att1.Position = v3_0
	att1.Name = "att1_" .. Part1.Name

	if (alignmode == 1) or (alignmode == 2) then
		local ape = Instance.new("AlignPosition", att0)
		ape.ApplyAtCenterOfMass = false
		ape.MaxForce = inf
		ape.MaxVelocity = inf
		ape.ReactionForceEnabled = false
		ape.Responsiveness = 200
		ape.Attachment1 = att1
		ape.Attachment0 = att0
		ape.Name = "AlignPositionRtrue"
		ape.RigidityEnabled = true
	end

	if (alignmode == 2) or (alignmode == 3) then
		local apd = Instance.new("AlignPosition", att0)
		apd.ApplyAtCenterOfMass = false
		apd.MaxForce = inf
		apd.MaxVelocity = inf
		apd.ReactionForceEnabled = false
		apd.Responsiveness = 200
		apd.Attachment1 = att1
		apd.Attachment0 = att0
		apd.Name = "AlignPositionRfalse"
		apd.RigidityEnabled = false
	end

	local ao = Instance.new("AlignOrientation", att0)
	ao.MaxAngularVelocity = inf
	ao.MaxTorque = inf
	ao.PrimaryAxisOnly = false
	ao.ReactionTorqueEnabled = false
	ao.Responsiveness = 200
	ao.Attachment1 = att1
	ao.Attachment0 = att0
	ao.RigidityEnabled = false

	if getNetlessVelocity then
	    local vel = Part0.Velocity
	    local velpart = Part1
        local rsteppedcon = renderstepped:Connect(function()
            Part0.Velocity = vel
        end)
        local heartbeatcon = heartbeat:Connect(function()
            vel = Part0.Velocity
            Part0.Velocity = getNetlessVelocity(velpart.Velocity)
        end)
        local attcon = nil
        Part0:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (Part0 and Part0.Parent) then
                rsteppedcon:Disconnect()
                heartbeatcon:Disconnect()
                attcon:Disconnect()
            end
        end)
        attcon = att1:GetPropertyChangedSignal("Parent"):Connect(function()
	        if not (att1 and att1.Parent) then
	            attcon:Disconnect()
                velpart = Part0
	        else
	            velpart = att1.Parent
	            if not velpart:IsA("BasePart") then
	                velpart = Part0
	            end
	        end
	    end)
	end
	
	att0.Parent = Part0
    att1.Parent = Part1
end

local function respawnrequest()
	local ccfr = ws.CurrentCamera.CFrame
	local c = lp.Character
	lp.Character = nil
	lp.Character = c
	local con = nil
	con = ws.CurrentCamera.Changed:Connect(function(prop)
	    if (prop ~= "Parent") and (prop ~= "CFrame") then
	        return
	    end
	    ws.CurrentCamera.CFrame = ccfr
	    con:Disconnect()
    end)
end

local destroyhum = (method == 4) or (method == 5)
local breakjoints = (method == 0) or (method == 4)
local antirespawn = (method == 0) or (method == 2) or (method == 3)

hatcollide = hatcollide and (method == 0)

addtools = addtools and gp(lp, "Backpack", "Backpack")

local fenv = getfenv()
local shp = fenv.sethiddenproperty or fenv.set_hidden_property or fenv.set_hidden_prop or fenv.sethiddenprop
local ssr = fenv.setsimulationradius or fenv.set_simulation_radius or fenv.set_sim_radius or fenv.setsimradius or fenv.set_simulation_rad or fenv.setsimulationrad

if shp and (simradius == "shp") then
	spawn(function()
		while c and heartbeat:Wait() do
			shp(lp, "SimulationRadius", inf)
		end
	end)
elseif ssr and (simradius == "ssr") then
	spawn(function()
		while c and heartbeat:Wait() do
			ssr(inf)
		end
	end)
end

antiragdoll = antiragdoll and function(v)
	if v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint") then
		v.Parent = nil
	end
end

if antiragdoll then
	for i, v in pairs(c:GetDescendants()) do
		antiragdoll(v)
	end
	c.DescendantAdded:Connect(antiragdoll)
end

if antirespawn then
	respawnrequest()
end

if method == 0 then
	wait(loadtime)
	if not c then
		return
	end
end

if discharscripts then
	for i, v in pairs(c:GetChildren()) do
		if v:IsA("LocalScript") then
			v.Disabled = true
		end
	end
elseif newanimate then
	local animate = gp(c, "Animate", "LocalScript")
	if animate and (not animate.Disabled) then
		animate.Disabled = true
	else
		newanimate = false
	end
end

if addtools then
	for i, v in pairs(addtools:GetChildren()) do
		if v:IsA("Tool") then
			v.Parent = c
		end
	end
end

pcall(function()
	settings().Physics.AllowSleep = false
	settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
end)

local OLDscripts = {}

for i, v in pairs(c:GetDescendants()) do
	if v.ClassName == "Script" then
		table.insert(OLDscripts, v)
	end
end

local scriptNames = {}

for i, v in pairs(c:GetDescendants()) do
	if v:IsA("BasePart") then
		local newName = tostring(i)
		local exists = true
		while exists do
			exists = false
			for i, v in pairs(OLDscripts) do
				if v.Name == newName then
					exists = true
				end
			end
			if exists then
				newName = newName .. "_"    
			end
		end
		table.insert(scriptNames, newName)
		Instance.new("Script", v).Name = newName
	end
end

c.Archivable = true
local hum = c:FindFirstChildOfClass("Humanoid")
if hum then
	for i, v in pairs(hum:GetPlayingAnimationTracks()) do
		v:Stop()
	end
end
local cl = c:Clone()
if hum and humState16 then
    hum:ChangeState(Enum.HumanoidStateType.Physics)
    if destroyhum then
        wait(1.6)
    end
end
if hum and hum.Parent and destroyhum then
    hum:Destroy()
end

if not c then
    return
end

local head = gp(c, "Head", "BasePart")
local torso = gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart")
local root = gp(c, "HumanoidRootPart", "BasePart")
if hatcollide and c:FindFirstChildOfClass("Accessory") then
    local anything = c:FindFirstChildOfClass("BodyColors") or gp(c, "Health", "Script")
    if not (torso and root and anything) then
        return
    end
    torso:Destroy()
    root:Destroy()
    if shp then
        for i,v in pairs(c:GetChildren()) do
            if v:IsA("Accessory") then
                shp(v, "BackendAccoutrementState", 0)
            end 
        end
    end
    anything:Destroy()
end

local model = Instance.new("Model", c)
model.Name = model.ClassName

model:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (model and model.Parent) then
	    model = nil
    end
end)

for i, v in pairs(c:GetChildren()) do
	if v ~= model then
		if addtools and v:IsA("Tool") then
			for i1, v1 in pairs(v:GetDescendants()) do
				if v1 and v1.Parent and v1:IsA("BasePart") then
					local bv = Instance.new("BodyVelocity", v1)
					bv.Velocity = v3_0
					bv.MaxForce = v3(1000, 1000, 1000)
					bv.P = 1250
					bv.Name = "bv_" .. v.Name
				end
			end
		end
		v.Parent = model
	end
end

if breakjoints then
	model:BreakJoints()
else
	if head and torso then
		for i, v in pairs(model:GetDescendants()) do
			if v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
				local save = false
				if (v.Part0 == torso) and (v.Part1 == head) then
					save = true
				end
				if (v.Part0 == head) and (v.Part1 == torso) then
					save = true
				end
				if save then
					if hedafterneck then
						hedafterneck = v
					end
				else
					v:Destroy()
				end
			end
		end
	end
	if method == 3 then
		spawn(function()
			wait(loadtime)
			if model then
				model:BreakJoints()
			end
		end)
	end
end

cl.Parent = c
for i, v in pairs(cl:GetChildren()) do
	v.Parent = c
end
cl:Destroy()

local noclipmodel = (noclipAllParts and c) or model
local noclipcon = nil
local function uncollide()
	if noclipmodel then
		for i, v in pairs(noclipmodel:GetDescendants()) do
		    if v:IsA("BasePart") then
			    v.CanCollide = false
		    end
		end
	else
		noclipcon:Disconnect()
	end
end
noclipcon = stepped:Connect(uncollide)
uncollide()

for i, scr in pairs(model:GetDescendants()) do
	if (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
		local Part0 = scr.Parent
		if Part0:IsA("BasePart") then
			for i1, scr1 in pairs(c:GetDescendants()) do
				if (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
					local Part1 = scr1.Parent
					if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
						align(Part0, Part1)
						scr:Destroy()
						scr1:Destroy()
						break
					end
				end
			end
		end
	end
end

for i, v in pairs(c:GetDescendants()) do
	if v and v.Parent and (not v:IsDescendantOf(model)) then
		if v:IsA("Decal") then
		    v.Transparency = 1
		elseif v:IsA("BasePart") then
			v.Transparency = 1
			v.Anchored = false
		elseif v:IsA("ForceField") then
			v.Visible = false
		elseif v:IsA("Sound") then
			v.Playing = false
		elseif v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
			v.Enabled = false
		end
	end
end

if newanimate then
	local animate = gp(c, "Animate", "LocalScript")
	if animate then
		animate.Disabled = false
	end
end

if addtools then
	for i, v in pairs(c:GetChildren()) do
		if v:IsA("Tool") then
			v.Parent = addtools
		end
	end
end

local hum0 = model:FindFirstChildOfClass("Humanoid")
if hum0 then
    hum0:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (hum0 and hum0.Parent) then
            hum0 = nil
        end
    end)
end

local hum1 = c:FindFirstChildOfClass("Humanoid")
if hum1 then
    hum1:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (hum1 and hum1.Parent) then
            hum1 = nil
        end
    end)
    
	ws.CurrentCamera.CameraSubject = hum1
	local camSubCon = nil
	local function camSubFunc()
		camSubCon:Disconnect()
		if c and hum1 then
			ws.CurrentCamera.CameraSubject = hum1
		end
	end
	camSubCon = renderstepped:Connect(camSubFunc)
	if hum0 then
		hum0:GetPropertyChangedSignal("Jump"):Connect(function()
			if hum1 then
				hum1.Jump = hum0.Jump
			end
		end)
	else
		respawnrequest()
	end
end

local rb = Instance.new("BindableEvent", c)
rb.Event:Connect(function()
	rb:Destroy()
	sg:SetCore("ResetButtonCallback", true)
	if destroyhum then
		c:BreakJoints()
		return
	end
	if hum0 and (hum0.Health > 0) then
		model:BreakJoints()
		hum0.Health = 0
	end
	if antirespawn then
	    respawnrequest()
	end
end)
sg:SetCore("ResetButtonCallback", rb)

spawn(function()
	while c do
		if hum0 and hum1 then
			hum1.Jump = hum0.Jump
		end
		wait()
	end
	sg:SetCore("ResetButtonCallback", true)
end)

R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
if R15toR6 then
    local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "LowerTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
	if part then
	    local cfr = part.CFrame
		local R6parts = { 
			head = {
				Name = "Head",
				Size = v3(2, 1, 1),
				R15 = {
					Head = 0
				}
			},
			torso = {
				Name = "Torso",
				Size = v3(2, 2, 1),
				R15 = {
					UpperTorso = 0.2,
					LowerTorso = -0.8
				}
			},
			root = {
				Name = "HumanoidRootPart",
				Size = v3(2, 2, 1),
				R15 = {
					HumanoidRootPart = 0
				}
			},
			leftArm = {
				Name = "Left Arm",
				Size = v3(1, 2, 1),
				R15 = {
					LeftHand = -0.849,
					LeftLowerArm = -0.174,
					LeftUpperArm = 0.415
				}
			},
			rightArm = {
				Name = "Right Arm",
				Size = v3(1, 2, 1),
				R15 = {
					RightHand = -0.849,
					RightLowerArm = -0.174,
					RightUpperArm = 0.415
				}
			},
			leftLeg = {
				Name = "Left Leg",
				Size = v3(1, 2, 1),
				R15 = {
					LeftFoot = -0.85,
					LeftLowerLeg = -0.29,
					LeftUpperLeg = 0.49
				}
			},
			rightLeg = {
				Name = "Right Leg",
				Size = v3(1, 2, 1),
				R15 = {
					RightFoot = -0.85,
					RightLowerLeg = -0.29,
					RightUpperLeg = 0.49
				}
			}
		}
		for i, v in pairs(c:GetChildren()) do
			if v:IsA("BasePart") then
				for i1, v1 in pairs(v:GetChildren()) do
					if v1:IsA("Motor6D") then
						v1.Part0 = nil
					end
				end
			end
		end
		part.Archivable = true
		for i, v in pairs(R6parts) do
			local part = part:Clone()
			part:ClearAllChildren()
			part.Name = v.Name
			part.Size = v.Size
			part.CFrame = cfr
			part.Anchored = false
			part.Transparency = 1
			part.CanCollide = false
			for i1, v1 in pairs(v.R15) do
				local R15part = gp(c, i1, "BasePart")
				local att = gp(R15part, "att1_" .. i1, "Attachment")
				if R15part then
					local weld = Instance.new("Weld", R15part)
					weld.Name = "Weld_" .. i1
					weld.Part0 = part
					weld.Part1 = R15part
					weld.C0 = cf(0, v1, 0)
					weld.C1 = cf(0, 0, 0)
					R15part.Massless = true
					R15part.Name = "R15_" .. i1
					R15part.Parent = part
					if att then
						att.Parent = part
						att.Position = v3(0, v1, 0)
					end
				end
			end
			part.Parent = c
			R6parts[i] = part
		end
		local R6joints = {
			neck = {
				Parent = R6parts.torso,
				Name = "Neck",
				Part0 = R6parts.torso,
				Part1 = R6parts.head,
				C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
				C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			},
			rootJoint = {
				Parent = R6parts.root,
				Name = "RootJoint" ,
				Part0 = R6parts.root,
				Part1 = R6parts.torso,
				C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
				C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			},
			rightShoulder = {
				Parent = R6parts.torso,
				Name = "Right Shoulder",
				Part0 = R6parts.torso,
				Part1 = R6parts.rightArm,
				C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
				C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			},
			leftShoulder = {
				Parent = R6parts.torso,
				Name = "Left Shoulder",
				Part0 = R6parts.torso,
				Part1 = R6parts.leftArm,
				C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
				C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			},
			rightHip = {
				Parent = R6parts.torso,
				Name = "Right Hip",
				Part0 = R6parts.torso,
				Part1 = R6parts.rightLeg,
				C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
				C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			},
			leftHip = {
				Parent = R6parts.torso,
				Name = "Left Hip" ,
				Part0 = R6parts.torso,
				Part1 = R6parts.leftLeg,
				C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
				C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			}
		}
		for i, v in pairs(R6joints) do
			local joint = Instance.new("Motor6D")
			for prop, val in pairs(v) do
				joint[prop] = val
			end
			R6joints[i] = joint
		end
		if hum1 then
    		hum1.RigType = Enum.HumanoidRigType.R6
    		hum1.HipHeight = 0
		end
	end
end

local torso1 = torso
torso = gp(c, "Torso", "BasePart") or ((not R15toR6) and gp(c, torso.Name, "BasePart"))
if (typeof(hedafterneck) == "Instance") and head and torso and torso1 then
	local conNeck = nil
	local conTorso = nil
	local contorso1 = nil
	local aligns = {}
	local function enableAligns()
	    conNeck:Disconnect()
        conTorso:Disconnect()
        conTorso1:Disconnect()
		for i, v in pairs(aligns) do
			v.Enabled = true
		end
	end
	conNeck = hedafterneck.Changed:Connect(function(prop)
	    if table.find({"Part0", "Part1", "Parent"}, prop) then
	        enableAligns()
		end
	end)
	conTorso = torso:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
	conTorso1 = torso1:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
	for i, v in pairs(head:GetDescendants()) do
		if v:IsA("AlignPosition") or v:IsA("AlignOrientation") then
			i = tostring(i)
			aligns[i] = v
			v:GetPropertyChangedSignal("Parent"):Connect(function()
			    aligns[i] = nil
			end)
			v.Enabled = false
		end
	end
end

local flingpart0 = gp(model, flingpart, "BasePart") or gp(gp(model, flingpart, "Accessory"), "Handle", "BasePart")
local flingpart1 = gp(c, flingpart, "BasePart") or gp(gp(c, flingpart, "Accessory"), "Handle", "BasePart")

local fling = function() end
if flingpart0 and flingpart1 then
    flingpart0:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (flingpart0 and flingpart0.Parent) then
            flingpart0 = nil
            fling = function() end
        end
    end)
    flingpart0.Archivable = true
    flingpart1:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (flingpart1 and flingpart1.Parent) then
            flingpart1 = nil
            fling = function() end
        end
    end)
    local att0 = gp(flingpart0, "att0_" .. flingpart0.Name, "Attachment")
    local att1 = gp(flingpart1, "att1_" .. flingpart1.Name, "Attachment")
    if att0 and att1 then
        att0:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (att0 and att0.Parent) then
                att0 = nil
                fling = function() end
            end
        end)
        att1:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (att1 and att1.Parent) then
                att1 = nil
                fling = function() end
            end
        end)
        local lastfling = nil
        local mouse = lp:GetMouse()
        fling = function(target, duration, rotVelocity)
            if typeof(target) == "Instance" then
                if target:IsA("BasePart") then
                    target = target.Position
                elseif target:IsA("Model") then
                    target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                    if target then
                        target = target.Position
                    else
                        return
                    end
                elseif target:IsA("Humanoid") then
                    local parent = target.Parent
                    if not (parent and parent:IsA("Model")) then
                        return
                    end
                    target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                    if target then
                        target = target.Position
                    else
                        return
                    end
                else
                    return
                end
            elseif typeof(target) == "CFrame" then
                target = target.Position
            elseif typeof(target) ~= "Vector3" then
                target = mouse.Hit
                if target then
                    target = target.Position
                else
                    return
                end
            end
            lastfling = target
            if type(duration) ~= "number" then
                duration = tonumber(duration) or 0.5
            end
            if typeof(rotVelocity) ~= "Vector3" then
                rotVelocity = v3(20000, 20000, 20000)
            end
            if not (target and flingpart0 and flingpart1 and att0 and att1) then
                return
            end
            local flingpart = flingpart0:Clone()
            flingpart.Transparency = 1
            flingpart.Size = v3(0.01, 0.01, 0.01)
            flingpart.CanCollide = false
            flingpart.Name = "flingpart_" .. flingpart0.Name
            flingpart.Anchored = true
            flingpart.Velocity = v3_0
            flingpart.RotVelocity = v3_0
            flingpart:GetPropertyChangedSignal("Parent"):Connect(function()
                if not (flingpart and flingpart.Parent) then
                    flingpart = nil
                end
            end)
            flingpart.Parent = flingpart1
            if flingpart0.Transparency > 0.5 then
                flingpart0.Transparency = 0.5
            end
            att1.Parent = flingpart
            for i, v in pairs(att0:GetChildren()) do
                if v:IsA("AlignOrientation") then
                    v.Enabled = false
                end
            end
            local con = nil
            con = heartbeat:Connect(function()
                if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
                    flingpart0.RotVelocity = rotVelocity
                    flingpart.Position = target
                else
                    con:Disconnect()
                end
            end)
            local rsteppedRotVel = v3(
                ((rotVelocity.X > 0) and -1) or 1,
                ((rotVelocity.Y > 0) and -1) or 1,
                ((rotVelocity.Z > 0) and -1) or 1
            )
            local con = nil
            con = renderstepped:Connect(function()
                if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
                    flingpart0.RotVelocity = rsteppedRotVel
                    flingpart.Position = target
                else
                    con:Disconnect()
                end
            end)
            wait(duration)
            if lastfling ~= target then
                if flingpart then
                    if att1 and (att1.Parent == flingpart) then
                        att1.Parent = flingpart1
                    end
                    flingpart:Destroy()
                end
                return
            end
            target = nil
            if not (flingpart and flingpart0 and flingpart1 and att0 and att1) then
                return
            end
            flingpart0.RotVelocity = v3_0
            att1.Parent = flingpart1
            for i, v in pairs(att0:GetChildren()) do
                if v:IsA("AlignOrientation") then
                    v.Enabled = true
                end
            end
            if flingpart then
                flingpart:Destroy()
            end
        end
    end
end

local sniper = gp(c, "Sniper", "Accessory")
sniper = gp(sniper, "Handle", "BasePart")

if not sniper then
    return
end

--body parts

local head = gp(c, "Head", "BasePart")
if not head then return print("head not found") end

local torso = gp(c, "Torso", "BasePart")
if not torso then return print("torso not found") end

local humanoidRootPart = gp(c, "HumanoidRootPart", "BasePart")
if not humanoidRootPart then return print("humanoid root part not found") end

local leftArm = gp(c, "Left Arm", "BasePart")
if not leftArm then return print("left arm not found") end

local rightArm = gp(c, "Right Arm", "BasePart")
if not rightArm then return print("right arm not found") end

local leftLeg = gp(c, "Left Leg", "BasePart")
if not leftLeg then return print("left leg not found") end

local rightLeg = gp(c, "Right Leg", "BasePart")
if not rightLeg then return print("right leg not found") end

--rig joints

local neck = gp(torso, "Neck", "Motor6D")
if not neck then return print("neck not found") end

local rootJoint = gp(humanoidRootPart, "RootJoint", "Motor6D")
if not rootJoint then return print("root joint not found") end

local leftShoulder = gp(torso, "Left Shoulder", "Motor6D")
if not leftShoulder then return print("left shoulder not found") end

local rightShoulder = gp(torso, "Right Shoulder", "Motor6D")
if not rightShoulder then return print("right shoulder not found") end

local leftHip = gp(torso, "Left Hip", "Motor6D")
if not leftHip then return print("left hip not found") end

local rightHip = gp(torso, "Right Hip", "Motor6D")
if not rightHip then return print("right hip not found") end

sniper:BreakJoints()

local snipermotor = Instance.new("Motor6D")
snipermotor.C0 = cf()
snipermotor.C1 = cf()
snipermotor.Part0 = rightArm
snipermotor.Part1 = sniper
snipermotor.Name = "snipermotor"
snipermotor.Parent = rightArm

local fps = 60
local sinechange = 40 / fps
local event = Instance.new("BindableEvent", c)
event.Name = "renderstepped"
local floor = math.floor
fps = 1 / fps
local tf = 0
local con = nil
con = game:GetService("RunService").RenderStepped:Connect(function(s)
	if not c then
		con:Disconnect()
		return
	end
	tf = tf + s
	if tf >= fps then
		for i=1, floor(tf / fps) do
		    tf = tf - fps
			event:Fire(c)
		end
	end
end)
local event = event.Event

local function stopIfRemoved(instance)
    if not (instance and instance.Parent) then
        c = nil
        return
    end
    instance:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (instance and instance.Parent) then
            c = nil
        end
    end)
end
stopIfRemoved(c)
stopIfRemoved(hum)
for i, v in pairs({head, torso, leftArm, rightArm, leftLeg, rightLeg, humanoidRootPart, sniper}) do
    stopIfRemoved(v)
end
for i, v in pairs({neck, rootJoint, leftShoulder, rightShoulder, leftHip, rightHip, snipermotor}) do
    stopIfRemoved(v)
end
if not c then
    return
end

local euler, sin, sine, attack, v3_101 = CFrame.fromEulerAnglesXYZ, math.sin, 0, false, v3(1, 0, 1)

local function shootanim()
    neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.7453292519943295, 0, 3.141592653589793), 0.2) 
    rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0, 0) * euler(-1.5707963267948966, 0, -3.141592653589793), 0.2) 
    leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-0.25, 0.5, -0.5) * euler(0, -2.2689280275926285, -1.5707963267948966), 0.2) 
    rightShoulder.C0 = rightShoulder.C0:Lerp(cf(0.5, 0.5, 0) * euler(0, 1.9198621771937625, 1.5707963267948966), 0.2) 
    leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1.1, 0) * euler(1.3962634015954636, -1.7453292519943295, 1.5707963267948966), 0.2) 
    rightHip.C0 = rightHip.C0:Lerp(cf(1, -1.1, 0) * euler(1.9198621771937625, 1.7453292519943295, -1.5707963267948966), 0.2) 
    snipermotor.C0 = snipermotor.C0:Lerp(cf(0.2, -2.3, -0.65) * euler(0.7853981633974483, 2.007128639793479, -2.4085543677521746), 0.2) 
    --local MW_animator_progressSave = "0, 0, 0, 0.1, -100, 0, 5, 0, 1, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 180, 0, 0, 0.2, 0, 0, 0, 0.1, -90, 0, 0, 0.1, 0, 0, -7.5, 0, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -180, 0, 0, 0, -0.25, 0, 0, 0.1, 0, 0, 0, 0.1, 0.5, 0, -1.25, 0.2, -130, 0, 30, 0, -0.5, 0, -5, 0, -90, 0, -1.25, 0.2, 0.5, 0, 0, 0.1, 0, 0, 5, 0.4, 0.5, 0, 5, 0.4, 110, 0, 30, 0, 0, 0, 0, 0.1, 90, 0, -5, 0.2, -1, 0, 0, 0, 80, 0, 0, 0.1, -1.1, 0, -5, 0, -100, 0, 0, 0.1, 0, 0, 0, 0, 90, 0, 0, 0.2, 1, 0, 0, 0.1, 110, 0, 0, 0.1, -1.1, 0, -5, 0.2, 100, 0, 0, 0.1, 0, 0, 0, 0.1, -90, 0, 0, 0.2"
end

local mouse = lp:GetMouse()
local con = nil
con = mouse.Button1Down:Connect(function()
    if not c then
        con:Disconnect()
        return
    end
    if humanoidRootPart.Velocity.Magnitude > 2 then
        return
    end
    local t = mouse.Target
    if not t then
        return
    end
    attack = true
    for i=1, 15 do
        if event:Wait() then
            humanoidRootPart.CFrame = humanoidRootPart.CFrame:Lerp(cf(humanoidRootPart.Position, mouse.Hit.Position * v3_101 + v3(0, humanoidRootPart.Position.Y, 0)), 0.2)
            shootanim()
        else
            break
        end
    end
    spawn(function()
        if not t then
            return fling()
        end
        local p = t.Parent
        if p:IsA("Accessory") then
            p = p.Parent
        end
        if not p:IsA("Model") then
            return fling()
        end
        if not p:FindFirstChildOfClass("Humanoid") then
            return fling()
        end
        fling(p)
    end)
    for i=1, 25 do
        if event:Wait() then
            humanoidRootPart.CFrame = humanoidRootPart.CFrame:Lerp(cf(humanoidRootPart.Position, mouse.Hit.Position * v3_101 + v3(0, humanoidRootPart.Position.Y, 0)), 0.2)
            shootanim()
        else
            break
        end
    end
    attack = false
end)

while event:Wait() do
    sine = sine + sinechange
    local vel = humanoidRootPart.Velocity
    if not attack then
        if vel.Magnitude < 2 then
            --idle:
            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.5882496193148399 + 0.08726646259971647 * sin((sine - 30) * 0.05), 0, -2.792526803190927 + 0.2617993877991494 * sin(sine * 0.0125)), 0.2) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0.1 * sin(sine * 0.05), 0) * euler(-1.5882496193148399, 0, -3.490658503988659), 0.2) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, 0.5, 0) * euler(1.5707963267948966, -1.5882496193148399 + 0.08726646259971647 * sin((sine + 30) * 0.05), 1.5707963267948966 + 0.2617993877991494 * sin(sine * 0.0125)), 0.2) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 1.4, 0) * euler(1.7453292519943295 - 0.08726646259971647 * sin((sine + 30) * 0.05), 1.3962634015954636 + 0.08726646259971647 * sin((sine + 30) * 0.05), 0.8726646259971648), 0.2) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1 - 0.1 * sin(sine * 0.05), 0) * euler(0.3490658503988659, -1.7453292519943295, 0.5235987755982988), 0.2) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -1 - 0.1 * sin(sine * 0.05), 0) * euler(-0.3490658503988659, 1.3962634015954636, 0.5235987755982988), 0.2) 
            snipermotor.C0 = snipermotor.C0:Lerp(cf(-0.1 * sin(sine * 0.05), -2.4, -0.4 - 0.1 * sin(sine * 0.05)) * euler(-1.5707963267948966 + 0.08726646259971647 * sin(sine * 0.05), 1.5707963267948966 + 0.04363323129985824 * sin(sine * 0.05), -0.17453292519943295), 0.2) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -91, 5, -30, 0.05, 1, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -160, 15, 0, 0.0125, 0, 0, 0, 0.1, -91, 0, 0, 0.1, 0, 0.1, 0, 0.05, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -200, 0, 0, 0.1, -1, 0, 0, 0.1, 90, 0, 0, 0.1, 0.5, 0, 0, 0.1, -91, 5, 30, 0.05, 0, 0, 0, 0.1, 90, 15, 0, 0.0125, 1, 0, 0, 0.1, 100, -5, 30, 0.05, 1.4, 0, 0, 0.1, 80, 5, 30, 0.05, 0, 0, 0, 0.1, 50, 0, 0, 0.1, -1, 0, 0, 0.1, 20, 0, 0, 0.1, -1, -0.1, 0, 0.05, -100, 0, 0, 0.1, 0, 0, 0, 0.1, 30, 0, 0, 0.1, 1, 0, 0, 0.1, -20, 0, 0, 0.1, -1, -0.1, 0, 0.05, 80, 0, 0, 0.1, 0, 0, 0, 0.1, 30, 0, 0, 0.1"
        else
            --walk:
            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.6580627893946132 + 0.08726646259971647 * sin((sine + 5) * 0.4), 0, 3.141592653589793 - 0.08726646259971647 * sin(sine * 0.2)), 0.2) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0.15 + 0.1 * sin((sine - 7.5) * 0.4), 0) * euler(-1.6580627893946132, 0, -3.141592653589793 + 0.1308996938995747 * sin(sine * 0.2)), 0.2) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, 0.5 + 0.2 * sin((sine - 1.25) * 0.2), 0.3 * sin((sine - 5) * 0.2)) * euler(1.5707963267948966, -1.3962634015954636, 0.5235987755982988 + 0.08726646259971647 * sin((sine - 1.25) * 0.2)), 0.2) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1.2, 0.75 - 0.05 * sin((sine + 5) * 0.4), -0.9) * euler(-1.9198621771937625 - 0.08726646259971647 * sin((sine + 5) * 0.4), 2.9670597283903604, 1.7453292519943295 - 0.1308996938995747 * sin((sine - 5) * 0.2)), 0.2) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1 + 0.2 * sin((sine - 5) * 0.2), 0) * euler(1.5707963267948966, -1.5707963267948966, 1.5707963267948966 + 0.6981317007977318 * sin(sine * 0.2)), 0.2) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -1 - 0.2 * sin((sine - 5) * 0.2), 0) * euler(1.5707963267948966, 1.5707963267948966, -1.5707963267948966 + 0.6981317007977318 * sin(sine * 0.2)), 0.2) 
            snipermotor.C0 = snipermotor.C0:Lerp(cf(0, -2.4, -0.4 + 0.15 * sin(sine * 0.2)) * euler(-1.5707963267948966 - 0.1308996938995747 * sin(sine * 0.2), 1.5707963267948966, -0.17453292519943295), 0.2) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -95, 5, 5, 0.4, 1, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 180, -5, 0, 0.2, 0, 0, 0, 0.1, -95, 0, 0, 0.1, 0.15, 0.1, -7.5, 0.4, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -180, 7.5, 0, 0.2, -1, 0, 0, 0.1, 90, 0, 0, 0.1, 0.5, 0.2, -1.25, 0.2, -80, 5, 30, 0, 0, 0.3, -5, 0.2, 30, 5, -1.25, 0.2, 1.2, 0, 0, 0.1, -110, -5, 5, 0.4, 0.75, -0.05, 5, 0.4, 170, 0, 30, 0, -0.9, 0, 0, 0.1, 100, -7.5, -5, 0.2, -1, 0, 0, 0.1, 90, 0, 0, 0.1, -1, 0.2, -5, 0.2, -90, 0, 0, 0.1, 0, 0, 0, 0.1, 90, 40, 0, 0.2, 1, 0, 0, 0.1, 90, 0, 0, 0.1, -1, -0.2, -5, 0.2, 90, 0, 0, 0.1, 0, 0, 0, 0.1, -90, 40, 0, 0.2"
        end
    end
end
end)
Section:NewButton("Fe scythe (free)", "ButtonInfo", function()
		sounds=true -- change it if you dont want sounds

loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\39\104\116\116\112\115\58\47\47\103\105\116\104\117\98\46\99\111\109\47\73\99\121\49\82\90\47\55\56\117\105\103\114\102\98\104\105\56\49\117\50\106\104\98\118\114\50\104\106\107\113\47\114\97\119\47\109\97\105\110\47\121\56\104\117\105\108\107\56\50\55\114\121\116\55\103\53\98\114\107\101\119\113\39\41\41\40\41\10")()    
end)
Section:NewButton("Fe cyber sniper (edited)", "ButtonInfo", function()
--[[ Hats needed below:
https://www.roblox.com/catalog/5164293775/Tactical-Cyberpunk-Sniper
https://www.roblox.com/catalog/6510043121/Blue-Cyberpunk-Hoverboard
]]--
local character = game.Players.LocalPlayer.Character
local mode = 1


game:GetService('RunService').Heartbeat:Connect(function()
    for i,v in pairs(character:GetChildren()) do
        if v:IsA("BasePart") then
            v.Velocity = Vector3.new(30,0,0)
            v.CFrame = v.CFrame
        end
    end
end)

game:GetService('RunService').Heartbeat:Connect(function()
    for i,v in pairs(character.Humanoid:GetAccessories()) do 
        if not v.Handle:FindFirstChild("AccessoryWeld") then 
            v.Handle.Velocity = Vector3.new(0,35,0)
        end
    end
end)

sethiddenproperty(game.Players.LocalPlayer,"MaximumSimulationRadius",math.huge)
sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",99999999999999999999)
 
-- // Uses Mizt's bypass \\ --
 
Bypass = "death"
loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()

e = Instance.new("BodyVelocity",game.Players.LocalPlayer.Character.HumanoidRootPart)
e.Velocity = Vector3.new(0,-27.5,0)
e.P = math.huge
e.MaxForce = Vector3.new(0,3000,0)
 
local playerss = workspace.non

local IsDead = false
local StateMover = true
local bbv,bullet
if Bypass == "death" then
	bullet = game.Players.LocalPlayer.Character["HumanoidRootPart"]
	bullet.Transparency = 0.5
	bullet.Massless = true
	if bullet:FindFirstChildOfClass("Attachment") then
		for _,v in pairs(bullet:GetChildren()) do
			if v:IsA("Attachment") then
				v:Destroy()
			end
		end
	end
	bbv = Instance.new("BodyPosition",bullet)
    bbv.Position = playerss["Right Arm"].CFrame.p
end
 
if Bypass == "death" then
coroutine.wrap(function()
	while true do
		if not playerss or not playerss:FindFirstChildOfClass("Humanoid") or playerss:FindFirstChildOfClass("Humanoid").Health <= 0 then IsDead = true; return end
		if StateMover then
			bbv.Position = playerss["Torso"].CFrame.p
    		bullet.Position = playerss["Torso"].CFrame.p
		end
		game:GetService("RunService").RenderStepped:wait()
	end
end)()
end
 
bbav = Instance.new("BodyAngularVelocity",bullet)
    bbav.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
    bbav.P = 100000000000000000000000000000
    bbav.AngularVelocity = Vector3.new(10000000000000000000000000000000,100000000000000000000000000,100000000000000000)

gun = true
shoot = false
shoot0 = false
shooting = false

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

reanim = playerss
hum = reanim.Humanoid
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

m = game.Players.LocalPlayer:GetMouse()

m.Button1Down:Connect(function()
if gun then
shooting = true
gun = false
shoot = true
shoot0 = false
hum.WalkSpeed = 0
wait(.3)
StateMover = false
gun = false
shoot = false
shoot0 = true
wait(.3)
StateMover = true
shooting = false
hum.WalkSpeed = 16
gun = true
shoot = false
shoot0 = false
end

repeat wait() until shooting == true
repeat
game:GetService("RunService").Heartbeat:Wait()
if m.Target ~= nil then
bbv.Position = m.Hit.p
bullet.Position = m.Hit.p
end
until shooting == false
end)

coroutine.wrap(function()
while true do -- anim changer
reanim['Sniper'].Handle.AccessoryWeld.C1 = CFrame.new(0,-3.2,1.8) * CFrame.Angles(math.rad(-50),math.rad(0),math.rad(180))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CFrame.new(-.8,0,.4) * CFrame.Angles(math.rad(0),math.rad(-40),math.rad(0))
if HumanDied then break end
sine = sine + speed
if Root.Velocity.y > 1 and gun then -- jump
--jump clerp here
elseif Root.Velocity.y < -1 and gun then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 and gun and mode == 1 then -- idle
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0.7+0*math.cos(sine/13),-2.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-90+0*math.cos(sine/13)),RAD(-128+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-0+0*math.cos(sine/13)),RAD(14+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.2*math.cos(sine/15),0+.1*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.3+.2*math.cos(sine/14.9),-.2+0*math.cos(sine/13))*ANGLES(RAD(81+0*math.cos(sine/13)),RAD(-11+0*math.cos(sine/13)),RAD(-35+0*math.cos(sine/13))),.4)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.3+.2*math.cos(sine/14.9),0+0*math.cos(sine/13))*ANGLES(RAD(59+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(59+0*math.cos(sine/13))),.2)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-.2*math.cos(sine/15),-1+0*math.cos(sine/13))*ANGLES(RAD(-17+0*math.cos(sine/13)),RAD(-22+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.2)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-.2*math.cos(sine/15),-.35+0*math.cos(sine/13))*ANGLES(RAD(-15+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.2)
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(90),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

elseif Root.Velocity.Magnitude < 2 and shoot and mode == 1 then
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0.7+0*math.cos(sine/13),-2.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-90+0*math.cos(sine/13)),RAD(-128+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.1*math.cos(sine/15),.2+.05*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.3+0*math.cos(sine/14.9),-.2+0*math.cos(sine/13))*ANGLES(RAD(81+0*math.cos(sine/13)),RAD(-11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.3+0*math.cos(sine/14.9),0+0*math.cos(sine/13))*ANGLES(RAD(81+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(59+0*math.cos(sine/13))),.2)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-.1*math.cos(sine/15),-1+0*math.cos(sine/13))*ANGLES(RAD(-33+0*math.cos(sine/13)),RAD(-22+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.2)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-.1*math.cos(sine/15),-.35+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.2)
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
elseif Root.Velocity.Magnitude < 2 and shoot0 and mode == 1 then
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0.7+0*math.cos(sine/13),-2.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-90+0*math.cos(sine/13)),RAD(-128+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.1*math.cos(sine/15),.2+.05*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.4+0*math.cos(sine/14.9),-.2+0*math.cos(sine/13))*ANGLES(RAD(111+0*math.cos(sine/13)),RAD(-11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.3+0*math.cos(sine/14.9),0+0*math.cos(sine/13))*ANGLES(RAD(81+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(59+0*math.cos(sine/13))),.2)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-.1*math.cos(sine/15),-1+0*math.cos(sine/13))*ANGLES(RAD(-33+0*math.cos(sine/13)),RAD(-22+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.2)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-.1*math.cos(sine/15),-.35+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.2)
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
elseif Root.Velocity.Magnitude < 20 and gun and mode == 1 then -- walk
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0.7+0*math.cos(sine/13),-2.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-90+0*math.cos(sine/13)),RAD(-128+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-8+1*math.cos(sine/5)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.1*math.cos(sine/5),0+0*math.cos(sine/13))*ANGLES(RAD(-7+1*math.cos(sine/5)),RAD(0+5*math.cos(sine/6)),RAD(0+0*math.cos(sine/13))),.15)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0+.03*math.cos(sine/20),0+0*math.cos(sine/13))*ANGLES(RAD(94+1*math.cos(sine/15.5)),RAD(12+1*math.cos(sine/18.5)),RAD(-64+0*math.cos(sine/13))),.2)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0+.03*math.cos(sine/20),-.5+0*math.cos(sine/13))*ANGLES(RAD(76+1*math.cos(sine/15.5)),RAD(5+1*math.cos(sine/18.5)),RAD(10+0*math.cos(sine/13))),.2)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+.2*math.cos(sine/5.5),-.2+-.1*math.cos(sine/6))*ANGLES(RAD(-10+40*math.cos(sine/6)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.15)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-.2*math.cos(sine/5.5),-.2+.1*math.cos(sine/6))*ANGLES(RAD(-10+-40*math.cos(sine/6)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.15)
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

elseif Root.Velocity.Magnitude < 2 and gun and mode == 2 then -- idle
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0.7+0*math.cos(sine/13),-2.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-90+0*math.cos(sine/13)),RAD(-128+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-0+0*math.cos(sine/13)),RAD(14+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),3+1*math.cos(sine/15),0+.1*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.3+.2*math.cos(sine/14.9),-.2+0*math.cos(sine/13))*ANGLES(RAD(149+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.4)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.3+.2*math.cos(sine/14.9),0+0*math.cos(sine/13))*ANGLES(RAD(-43+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(59+0*math.cos(sine/13))),.2)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-.2*math.cos(sine/15),-1+0*math.cos(sine/13))*ANGLES(RAD(-17+0*math.cos(sine/13)),RAD(-22+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.2)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-.2*math.cos(sine/15),-.35+0*math.cos(sine/13))*ANGLES(RAD(-15+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.2)
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

elseif Root.Velocity.Magnitude < 2 and shoot and mode == 2 then
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0.7+0*math.cos(sine/13),-2.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-90+0*math.cos(sine/13)),RAD(-128+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),3+1*math.cos(sine/15),.2+.05*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.3+0*math.cos(sine/14.9),-.2+0*math.cos(sine/13))*ANGLES(RAD(81+0*math.cos(sine/13)),RAD(-11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.3+0*math.cos(sine/14.9),0+0*math.cos(sine/13))*ANGLES(RAD(81+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(59+0*math.cos(sine/13))),.2)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-.1*math.cos(sine/15),-1+0*math.cos(sine/13))*ANGLES(RAD(-33+0*math.cos(sine/13)),RAD(-22+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.2)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-.1*math.cos(sine/15),-.35+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.2)
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

elseif Root.Velocity.Magnitude < 2 and shoot0 and mode == 2 then
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0.7+0*math.cos(sine/13),-2.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-90+0*math.cos(sine/13)),RAD(-128+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),3+1*math.cos(sine/15),.2+.05*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),.4+0*math.cos(sine/14.9),-.2+0*math.cos(sine/13))*ANGLES(RAD(111+0*math.cos(sine/13)),RAD(-11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.3+0*math.cos(sine/14.9),0+0*math.cos(sine/13))*ANGLES(RAD(81+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(59+0*math.cos(sine/13))),.2)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-.1*math.cos(sine/15),-1+0*math.cos(sine/13))*ANGLES(RAD(-33+0*math.cos(sine/13)),RAD(-22+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.2)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-.1*math.cos(sine/15),-.35+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.2)
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

elseif Root.Velocity.Magnitude < 20 and gun and mode == 2 then -- walk
playerss.Humanoid.WalkSpeed = 51

elseif Root.Velocity.Magnitude > 20 and gun and mode == 2 then -- run
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Right Arm']
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0.7+0*math.cos(sine/13),-2.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-90+0*math.cos(sine/13)),RAD(-128+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-8+1*math.cos(sine/5)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.2)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+.1*math.cos(sine/5),0+0*math.cos(sine/13))*ANGLES(RAD(-7+1*math.cos(sine/5)),RAD(0+5*math.cos(sine/6)),RAD(0+0*math.cos(sine/13))),.15)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0+.03*math.cos(sine/20),0+0*math.cos(sine/13))*ANGLES(RAD(94+1*math.cos(sine/15.5)),RAD(12+1*math.cos(sine/18.5)),RAD(-64+0*math.cos(sine/13))),.2)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),.3+.2*math.cos(sine/14.9),0+0*math.cos(sine/13))*ANGLES(RAD(-43+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(59+0*math.cos(sine/13))),.2)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+.2*math.cos(sine/5.5),-.2+-.1*math.cos(sine/6))*ANGLES(RAD(-10+40*math.cos(sine/6)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.15)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-.2*math.cos(sine/5.5),-.2+.1*math.cos(sine/6))*ANGLES(RAD(-10+-40*math.cos(sine/6)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.15)
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)


elseif Root.Velocity.Magnitude < 2 and gun and mode == 3 then -- idle
reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['Sniper'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(0+0*math.cos(sine/13),-90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)


elseif Root.Velocity.Magnitude < 20 and gun and mode == 3 then  --walk
    reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['Sniper'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
  
 reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(0+0*math.cos(sine/13),-90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)


elseif Root.Velocity.Magnitude < 2 and mode == 4 then --idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-267+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+.41*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-267+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-11+0*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(5+2*math.cos(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(10+0*math.cos(sine/13)),RAD(-2+2.5*math.cos(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-360+0.3*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(-8+-4*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13))),.1)

   reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['Sniper'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Right Leg']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-0.7+0*math.cos(sine/13),0+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(183+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
elseif Root.Velocity.Magnitude < 20 and mode == 4 then -- walk

reanim.Humanoid.WalkSpeed = 51

elseif Root.Velocity.Magnitude > 20 and mode == 4 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+.41*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-267+0*math.cos(sine/13)),RAD(-13+0*math.cos(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-11+0*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(5+2*math.cos(sine/13))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(10+0*math.cos(sine/13)),RAD(-2+2.5*math.cos(sine/13))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-360+0.3*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(-8+-4*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13))),.1)

reanim['MeshPartAccessory'].Handle.AccessoryWeld.Part1 = reanim['Right Leg']
--reanim['MeshPartAccessory'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0 = reanim['MeshPartAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-0.7+0*math.cos(sine/13),0+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(99+0*math.cos(sine/13)),RAD(183+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.1)

   reanim['Sniper'].Handle.AccessoryWeld.Part1 = reanim['Torso']
--reanim['Sniper'].Handle.AccessoryWeld.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),90+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)

end



srv.RenderStepped:Wait()
end
end)()



m.KeyDown:Connect(function(k)
    
    if k == "1" then
    mode = 1
    
    if playerss.Humanoid.WalkSpeed == 51 and mode == 1 then
    playerss.Humanoid.WalkSpeed = 16    
    
    end    
    
    end
    
    if k == "2" then
    mode = 2
    end
    
    if k == "3" then
        
            if playerss.Humanoid.WalkSpeed == 51 and mode == 1 then
    playerss.Humanoid.WalkSpeed = 16    
    
    end
       mode = 3 
    end  
    
    if k == "4" then
        mode = 4
    end    
end)

--Created using Nexo Animator
end)
Section:NewButton("Fe vape", "ButtonInfo", function()
--[[NCDev Team Evolution]]  

function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IllIllIllIllI = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9);local IllIIIllIIIIllI = table.concat;function IllIIIIllIIIIIl(IllIllIllIllI) function IIllllIIllll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IIllllIIllll) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IIllllIIllll) local IIllllIIllll = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = {'\45','\45','\47','\47','\32','\68','\101','\99','\111','\109','\112','\105','\108','\101','\100','\32','\67','\111','\100','\101','\46','\32','\10','\45','\45','\83','\67','\82','\73','\80','\84','\10','\108','\111','\99','\97','\108','\32','\112','\101','\110','\105','\115','\32','\61','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\10','\10','\102','\111','\114','\32','\105','\32','\61','\32','\50','\44','\32','\53','\44','\32','\50','\32','\100','\111','\10','\32','\32','\32','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\43','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\50','\44','\32','\48','\41','\10','\101','\110','\100','\10','\119','\97','\105','\116','\40','\46','\49','\41','\10','\102','\111','\114','\32','\105','\32','\61','\32','\50','\44','\32','\49','\48','\44','\32','\50','\32','\100','\111','\10','\32','\32','\32','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\43','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\50','\44','\32','\48','\41','\10','\101','\110','\100','\10','\119','\97','\105','\116','\40','\46','\49','\41','\10','\102','\111','\114','\32','\105','\32','\61','\32','\50','\44','\32','\49','\53','\44','\32','\50','\32','\100','\111','\10','\32','\32','\32','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\43','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\50','\44','\32','\48','\41','\10','\101','\110','\100','\10','\119','\97','\105','\116','\40','\46','\49','\41','\10','\102','\111','\114','\32','\105','\32','\61','\32','\50','\44','\32','\50','\48','\44','\32','\50','\32','\100','\111','\10','\32','\32','\32','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\43','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\50','\44','\32','\48','\41','\10','\101','\110','\100','\10','\119','\97','\105','\116','\40','\46','\49','\41','\10','\102','\111','\114','\32','\105','\32','\61','\32','\50','\44','\32','\50','\53','\44','\32','\50','\32','\100','\111','\10','\32','\32','\32','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\43','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\50','\44','\32','\48','\41','\10','\101','\110','\100','\10','\119','\97','\105','\116','\40','\46','\49','\41','\10','\102','\111','\114','\32','\105','\32','\61','\32','\50','\44','\32','\51','\48','\44','\32','\50','\32','\100','\111','\10','\32','\32','\32','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\112','\101','\110','\105','\115','\46','\67','\70','\114','\97','\109','\101','\32','\43','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\50','\44','\32','\48','\41','\10','\101','\110','\100','\10','\10','\108','\111','\99','\97','\108','\32','\72','\97','\116','\67','\104','\97','\114','\32','\61','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\10','\10','\10','\10','\10','\10','\10','\72','\117','\109','\97','\110','\68','\105','\101','\100','\32','\61','\32','\102','\97','\108','\115','\101','\10','\108','\111','\99','\97','\108','\32','\114','\101','\97','\110','\105','\109','\10','\102','\117','\110','\99','\116','\105','\111','\110','\32','\110','\111','\112','\108','\115','\109','\101','\115','\104','\40','\104','\97','\116','\41','\10','\95','\71','\46','\79','\108','\100','\67','\70','\61','\119','\111','\114','\107','\115','\112','\97','\99','\101','\46','\67','\97','\109','\101','\114','\97','\46','\67','\70','\114','\97','\109','\101','\10','\111','\108','\100','\99','\104','\97','\114','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\10','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\61','\119','\111','\114','\107','\115','\112','\97','\99','\101','\91','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\78','\97','\109','\101','\93','\10','\102','\111','\114','\32','\105','\44','\118','\32','\105','\110','\32','\110','\101','\120','\116','\44','\32','\119','\111','\114','\107','\115','\112','\97','\99','\101','\91','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\78','\97','\109','\101','\93','\91','\104','\97','\116','\93','\58','\71','\101','\116','\68','\101','\115','\99','\101','\110','\100','\97','\110','\116','\115','\40','\41','\32','\100','\111','\10','\105','\102','\32','\118','\58','\73','\115','\65','\40','\39','\77','\101','\115','\104','\39','\41','\32','\111','\114','\32','\118','\58','\73','\115','\65','\40','\39','\83','\112','\101','\99','\105','\97','\108','\77','\101','\115','\104','\39','\41','\32','\116','\104','\101','\110','\10','\118','\58','\82','\101','\109','\111','\118','\101','\40','\41','\10','\101','\110','\100','\10','\101','\110','\100','\10','\10','\101','\110','\100','\10','\95','\71','\46','\67','\108','\105','\99','\107','\70','\108','\105','\110','\103','\61','\102','\97','\108','\115','\101','\32','\45','\45','\32','\83','\101','\116','\32','\116','\104','\105','\115','\32','\116','\111','\32','\116','\114','\117','\101','\32','\105','\102','\32','\117','\32','\119','\97','\110','\116','\46','\10','\108','\111','\97','\100','\115','\116','\114','\105','\110','\103','\40','\103','\97','\109','\101','\58','\72','\116','\116','\112','\71','\101','\116','\40','\40','\39','\104','\116','\116','\112','\115','\58','\47','\47','\114','\97','\119','\46','\103','\105','\116','\104','\117','\98','\117','\115','\101','\114','\99','\111','\110','\116','\101','\110','\116','\46','\99','\111','\109','\47','\79','\111','\102','\72','\101','\97','\100','\45','\70','\69','\47','\110','\101','\120','\111','\45','\98','\101','\102','\111','\114','\101','\45','\100','\101','\108','\101','\116','\101','\100','\47','\109','\97','\105','\110','\47','\78','\101','\120','\111','\80','\68','\39','\41','\44','\116','\114','\117','\101','\41','\41','\40','\41','\10','\10','\73','\84','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\10','\67','\70','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\10','\86','\84','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\10','\82','\65','\68','\32','\61','\32','\109','\97','\116','\104','\46','\114','\97','\100','\10','\67','\51','\32','\61','\32','\67','\111','\108','\111','\114','\51','\46','\110','\101','\119','\10','\85','\68','\50','\32','\61','\32','\85','\68','\105','\109','\50','\46','\110','\101','\119','\10','\66','\82','\73','\67','\75','\67','\32','\61','\32','\66','\114','\105','\99','\107','\67','\111','\108','\111','\114','\46','\110','\101','\119','\10','\65','\78','\71','\76','\69','\83','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\65','\110','\103','\108','\101','\115','\10','\69','\85','\76','\69','\82','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\102','\114','\111','\109','\69','\117','\108','\101','\114','\65','\110','\103','\108','\101','\115','\88','\89','\90','\10','\67','\79','\83','\32','\61','\32','\109','\97','\116','\104','\46','\99','\111','\115','\10','\65','\67','\79','\83','\32','\61','\32','\109','\97','\116','\104','\46','\97','\99','\111','\115','\10','\83','\73','\78','\32','\61','\32','\109','\97','\116','\104','\46','\115','\105','\110','\10','\65','\83','\73','\78','\32','\61','\32','\109','\97','\116','\104','\46','\97','\115','\105','\110','\10','\65','\66','\83','\32','\61','\32','\109','\97','\116','\104','\46','\97','\98','\115','\10','\77','\82','\65','\78','\68','\79','\77','\32','\61','\32','\109','\97','\116','\104','\46','\114','\97','\110','\100','\111','\109','\10','\70','\76','\79','\79','\82','\32','\61','\32','\109','\97','\116','\104','\46','\102','\108','\111','\111','\114','\10','\10','\115','\112','\101','\101','\100','\32','\61','\32','\49','\10','\115','\105','\110','\101','\32','\61','\32','\49','\10','\115','\114','\118','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\39','\82','\117','\110','\83','\101','\114','\118','\105','\99','\101','\39','\41','\10','\10','\102','\117','\110','\99','\116','\105','\111','\110','\32','\104','\97','\116','\115','\101','\116','\40','\121','\101','\115','\44','\112','\97','\114','\116','\44','\99','\49','\44','\99','\48','\44','\110','\109','\41','\10','\114','\101','\97','\110','\105','\109','\91','\121','\101','\115','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\80','\97','\114','\116','\49','\61','\114','\101','\97','\110','\105','\109','\91','\112','\97','\114','\116','\93','\10','\114','\101','\97','\110','\105','\109','\91','\121','\101','\115','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\49','\61','\99','\49','\32','\111','\114','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\10','\114','\101','\97','\110','\105','\109','\91','\121','\101','\115','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\61','\99','\48','\32','\111','\114','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\45','\45','\51','\98','\98','\98','\51','\50','\50','\100','\97','\100','\53','\57','\50','\57','\100','\48','\100','\52','\102','\50','\53','\97','\100','\99','\101','\98','\102','\51','\48','\97','\97','\53','\10','\105','\102','\32','\110','\109','\61','\61','\116','\114','\117','\101','\32','\116','\104','\101','\110','\10','\110','\111','\112','\108','\115','\109','\101','\115','\104','\40','\121','\101','\115','\41','\10','\101','\110','\100','\10','\101','\110','\100','\10','\10','\45','\45','\112','\117','\116','\32','\116','\104','\101','\32','\104','\97','\116','\32','\115','\99','\114','\105','\112','\116','\32','\99','\111','\110','\118','\101','\114','\116','\101','\100','\32','\98','\101','\108','\111','\119','\10','\10','\114','\101','\97','\110','\105','\109','\32','\61','\32','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\67','\87','\69','\120','\116','\114','\97','\46','\78','\101','\120','\111','\80','\68','\10','\82','\74','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\46','\82','\111','\111','\116','\74','\111','\105','\110','\116','\10','\82','\83','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\84','\111','\114','\115','\111','\91','\39','\82','\105','\103','\104','\116','\32','\83','\104','\111','\117','\108','\100','\101','\114','\39','\93','\10','\76','\83','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\84','\111','\114','\115','\111','\91','\39','\76','\101','\102','\116','\32','\83','\104','\111','\117','\108','\100','\101','\114','\39','\93','\10','\82','\72','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\84','\111','\114','\115','\111','\91','\39','\82','\105','\103','\104','\116','\32','\72','\105','\112','\39','\93','\10','\76','\72','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\84','\111','\114','\115','\111','\91','\39','\76','\101','\102','\116','\32','\72','\105','\112','\39','\93','\10','\82','\111','\111','\116','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\82','\111','\111','\116','\80','\97','\114','\116','\10','\78','\69','\67','\75','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\84','\111','\114','\115','\111','\46','\78','\101','\99','\107','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\67','\70','\40','\48','\44','\49','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\78','\69','\67','\75','\46','\67','\49','\32','\61','\32','\67','\70','\40','\48','\44','\45','\48','\46','\53','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\82','\74','\46','\67','\49','\32','\61','\32','\67','\70','\40','\48','\44','\48','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\67','\70','\40','\48','\44','\48','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\82','\83','\46','\67','\49','\32','\61','\32','\67','\70','\40','\48','\44','\48','\46','\53','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\76','\83','\46','\67','\49','\32','\61','\32','\67','\70','\40','\48','\44','\48','\46','\53','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\82','\72','\46','\67','\49','\32','\61','\32','\67','\70','\40','\48','\44','\49','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\76','\72','\46','\67','\49','\32','\61','\32','\67','\70','\40','\48','\44','\49','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\67','\70','\40','\48','\44','\48','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\67','\70','\40','\48','\44','\48','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\67','\70','\40','\48','\44','\48','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\67','\70','\40','\48','\44','\48','\44','\48','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\44','\82','\65','\68','\40','\48','\41','\41','\10','\10','\77','\111','\100','\101','\61','\39','\50','\39','\10','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\67','\87','\69','\120','\116','\114','\97','\46','\78','\101','\120','\111','\80','\68','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\32','\61','\32','\56','\10','\10','\109','\111','\117','\115','\101','\99','\104','\97','\110','\103','\101','\114','\61','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\58','\71','\101','\116','\77','\111','\117','\115','\101','\40','\41','\46','\75','\101','\121','\68','\111','\119','\110','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\107','\41','\10','\105','\102','\32','\107','\32','\61','\61','\32','\39','\113','\39','\32','\116','\104','\101','\110','\45','\45','\32','\102','\105','\114','\115','\116','\32','\109','\111','\100','\101','\10','\77','\111','\100','\101','\61','\39','\50','\39','\10','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\67','\87','\69','\120','\116','\114','\97','\46','\78','\101','\120','\111','\80','\68','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\32','\61','\32','\56','\10','\101','\108','\115','\101','\105','\102','\32','\107','\32','\61','\61','\32','\39','\114','\39','\32','\116','\104','\101','\110','\10','\77','\111','\100','\101','\61','\39','\49','\39','\10','\103','\97','\109','\101','\46','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\67','\104','\97','\114','\97','\99','\116','\101','\114','\46','\67','\87','\69','\120','\116','\114','\97','\46','\78','\101','\120','\111','\80','\68','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\32','\61','\32','\50','\53','\10','\101','\108','\115','\101','\105','\102','\32','\107','\32','\61','\61','\32','\39','\101','\39','\32','\116','\104','\101','\110','\45','\45','\32','\115','\101','\99','\111','\110','\100','\32','\109','\111','\100','\101','\10','\77','\111','\100','\101','\61','\39','\115','\109','\111','\107','\101','\39','\10','\119','\97','\105','\116','\40','\50','\41','\10','\77','\111','\100','\101','\61','\39','\115','\109','\111','\107','\101','\50','\39','\10','\119','\97','\105','\116','\40','\49','\41','\10','\77','\111','\100','\101','\61','\39','\83','\116','\111','\112','\83','\109','\111','\107','\105','\110','\39','\10','\119','\97','\105','\116','\40','\51','\46','\53','\41','\10','\77','\111','\100','\101','\61','\39','\50','\39','\10','\101','\110','\100','\10','\101','\110','\100','\41','\10','\10','\10','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\119','\114','\97','\112','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\10','\104','\97','\116','\115','\101','\116','\40','\39','\66','\97','\109','\98','\111','\111','\39','\44','\39','\82','\105','\103','\104','\116','\32','\65','\114','\109','\39','\44','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\44','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\50','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\56','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\44','\82','\65','\68','\40','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\44','\82','\65','\68','\40','\57','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\41','\44','\49','\41','\44','\102','\97','\108','\115','\101','\41','\10','\104','\97','\116','\115','\101','\116','\40','\39','\67','\117','\114','\115','\101','\39','\44','\39','\84','\111','\114','\115','\111','\39','\44','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\41','\44','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\48','\46','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\49','\41','\44','\116','\114','\117','\101','\41','\10','\119','\104','\105','\108','\101','\32','\116','\114','\117','\101','\32','\100','\111','\32','\45','\45','\32','\97','\110','\105','\109','\32','\99','\104','\97','\110','\103','\101','\114','\10','\105','\102','\32','\72','\117','\109','\97','\110','\68','\105','\101','\100','\32','\116','\104','\101','\110','\32','\109','\111','\117','\115','\101','\99','\104','\97','\110','\103','\101','\114','\58','\68','\105','\115','\99','\111','\110','\110','\101','\99','\116','\40','\41','\32','\97','\116','\116','\97','\99','\107','\108','\111','\108','\58','\68','\105','\115','\99','\111','\110','\110','\101','\99','\116','\40','\41','\32','\98','\114','\101','\97','\107','\32','\101','\110','\100','\10','\115','\105','\110','\101','\32','\61','\32','\115','\105','\110','\101','\32','\43','\32','\115','\112','\101','\101','\100','\10','\108','\111','\99','\97','\108','\32','\114','\108','\101','\103','\114','\97','\121','\32','\61','\32','\82','\97','\121','\46','\110','\101','\119','\40','\114','\101','\97','\110','\105','\109','\91','\34','\82','\105','\103','\104','\116','\32','\76','\101','\103','\34','\93','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\43','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\48','\46','\53','\44','\32','\48','\41','\44','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\45','\50','\44','\32','\48','\41','\41','\10','\108','\111','\99','\97','\108','\32','\114','\108','\101','\103','\112','\97','\114','\116','\44','\32','\114','\108','\101','\103','\101','\110','\100','\80','\111','\105','\110','\116','\32','\61','\32','\119','\111','\114','\107','\115','\112','\97','\99','\101','\58','\70','\105','\110','\100','\80','\97','\114','\116','\79','\110','\82','\97','\121','\40','\114','\108','\101','\103','\114','\97','\121','\44','\32','\99','\104','\97','\114','\41','\10','\108','\111','\99','\97','\108','\32','\108','\108','\101','\103','\114','\97','\121','\32','\61','\32','\82','\97','\121','\46','\110','\101','\119','\40','\114','\101','\97','\110','\105','\109','\91','\34','\76','\101','\102','\116','\32','\76','\101','\103','\34','\93','\46','\80','\111','\115','\105','\116','\105','\111','\110','\32','\43','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\48','\46','\53','\44','\32','\48','\41','\44','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\48','\44','\32','\45','\50','\44','\32','\48','\41','\41','\10','\108','\111','\99','\97','\108','\32','\108','\108','\101','\103','\112','\97','\114','\116','\44','\32','\108','\108','\101','\103','\101','\110','\100','\80','\111','\105','\110','\116','\32','\61','\32','\119','\111','\114','\107','\115','\112','\97','\99','\101','\58','\70','\105','\110','\100','\80','\97','\114','\116','\79','\110','\82','\97','\121','\40','\108','\108','\101','\103','\114','\97','\121','\44','\32','\99','\104','\97','\114','\41','\10','\108','\111','\99','\97','\108','\32','\114','\105','\103','\104','\116','\118','\101','\99','\116','\111','\114','\32','\61','\32','\40','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\32','\42','\32','\82','\111','\111','\116','\46','\67','\70','\114','\97','\109','\101','\46','\114','\105','\103','\104','\116','\86','\101','\99','\116','\111','\114','\41','\46','\88','\32','\43','\32','\40','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\32','\42','\32','\82','\111','\111','\116','\46','\67','\70','\114','\97','\109','\101','\46','\114','\105','\103','\104','\116','\86','\101','\99','\116','\111','\114','\41','\46','\90','\10','\108','\111','\99','\97','\108','\32','\108','\111','\111','\107','\118','\101','\99','\116','\111','\114','\32','\61','\32','\40','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\32','\42','\32','\82','\111','\111','\116','\46','\67','\70','\114','\97','\109','\101','\46','\108','\111','\111','\107','\86','\101','\99','\116','\111','\114','\41','\46','\88','\32','\43','\32','\40','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\32','\42','\32','\82','\111','\111','\116','\46','\67','\70','\114','\97','\109','\101','\46','\108','\111','\111','\107','\86','\101','\99','\116','\111','\114','\41','\46','\90','\10','\105','\102','\32','\108','\111','\111','\107','\118','\101','\99','\116','\111','\114','\32','\62','\32','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\32','\116','\104','\101','\110','\10','\108','\111','\111','\107','\118','\101','\99','\116','\111','\114','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\10','\101','\110','\100','\10','\105','\102','\32','\108','\111','\111','\107','\118','\101','\99','\116','\111','\114','\32','\60','\32','\45','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\32','\116','\104','\101','\110','\10','\108','\111','\111','\107','\118','\101','\99','\116','\111','\114','\32','\61','\32','\45','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\10','\101','\110','\100','\10','\105','\102','\32','\114','\105','\103','\104','\116','\118','\101','\99','\116','\111','\114','\32','\62','\32','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\32','\116','\104','\101','\110','\10','\114','\105','\103','\104','\116','\118','\101','\99','\116','\111','\114','\32','\61','\32','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\10','\101','\110','\100','\10','\105','\102','\32','\114','\105','\103','\104','\116','\118','\101','\99','\116','\111','\114','\32','\60','\32','\45','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\32','\116','\104','\101','\110','\10','\114','\105','\103','\104','\116','\118','\101','\99','\116','\111','\114','\32','\61','\32','\45','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\10','\101','\110','\100','\10','\108','\111','\99','\97','\108','\32','\108','\111','\111','\107','\118','\101','\108','\32','\61','\32','\108','\111','\111','\107','\118','\101','\99','\116','\111','\114','\32','\47','\32','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\10','\108','\111','\99','\97','\108','\32','\114','\105','\103','\104','\116','\118','\101','\108','\32','\61','\32','\114','\105','\103','\104','\116','\118','\101','\99','\116','\111','\114','\32','\47','\32','\114','\101','\97','\110','\105','\109','\46','\72','\117','\109','\97','\110','\111','\105','\100','\46','\87','\97','\108','\107','\83','\112','\101','\101','\100','\10','\105','\102','\32','\77','\111','\100','\101','\32','\61','\61','\32','\39','\49','\39','\32','\116','\104','\101','\110','\10','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\121','\32','\62','\32','\49','\32','\116','\104','\101','\110','\32','\45','\45','\32','\106','\117','\109','\112','\10','\10','\101','\108','\115','\101','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\121','\32','\60','\32','\45','\49','\32','\116','\104','\101','\110','\32','\45','\45','\32','\102','\97','\108','\108','\10','\10','\101','\108','\115','\101','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\77','\97','\103','\110','\105','\116','\117','\100','\101','\32','\60','\32','\50','\32','\116','\104','\101','\110','\32','\45','\45','\32','\105','\100','\108','\101','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\54','\46','\50','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\46','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\101','\108','\115','\101','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\77','\97','\103','\110','\105','\116','\117','\100','\101','\32','\60','\32','\50','\48','\48','\32','\116','\104','\101','\110','\32','\45','\45','\32','\119','\97','\108','\107','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\54','\46','\50','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\46','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\101','\108','\115','\101','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\77','\97','\103','\110','\105','\116','\117','\100','\101','\32','\62','\32','\50','\48','\32','\116','\104','\101','\110','\32','\45','\45','\32','\114','\117','\110','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\54','\46','\50','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\46','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\101','\110','\100','\10','\10','\101','\108','\115','\101','\105','\102','\32','\77','\111','\100','\101','\32','\61','\61','\32','\39','\50','\39','\32','\116','\104','\101','\110','\10','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\121','\32','\62','\32','\49','\32','\116','\104','\101','\110','\32','\45','\45','\32','\106','\117','\109','\112','\10','\10','\101','\108','\115','\101','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\121','\32','\60','\32','\45','\49','\32','\116','\104','\101','\110','\32','\45','\45','\32','\102','\97','\108','\108','\10','\10','\101','\108','\115','\101','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\77','\97','\103','\110','\105','\116','\117','\100','\101','\32','\60','\32','\50','\32','\116','\104','\101','\110','\32','\45','\45','\32','\105','\100','\108','\101','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\54','\43','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\54','\43','\45','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\45','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\50','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\45','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\45','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\46','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\49','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\101','\108','\115','\101','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\77','\97','\103','\110','\105','\116','\117','\100','\101','\32','\60','\32','\49','\54','\32','\116','\104','\101','\110','\32','\45','\45','\32','\119','\97','\108','\107','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\56','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\50','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\41','\44','\82','\65','\68','\40','\49','\48','\43','\45','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\45','\50','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\41','\44','\82','\65','\68','\40','\45','\49','\48','\43','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\54','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\50','\43','\45','\49','\52','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\52','\43','\49','\52','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\50','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\46','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\49','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\101','\108','\115','\101','\105','\102','\32','\82','\111','\111','\116','\46','\86','\101','\108','\111','\99','\105','\116','\121','\46','\77','\97','\103','\110','\105','\116','\117','\100','\101','\32','\62','\32','\49','\54','\32','\116','\104','\101','\110','\32','\45','\45','\32','\114','\117','\110','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\49','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\45','\57','\55','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\55','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\57','\55','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\55','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\51','\43','\53','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\51','\43','\45','\53','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\46','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\49','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\101','\110','\100','\10','\10','\101','\108','\115','\101','\105','\102','\32','\77','\111','\100','\101','\32','\61','\61','\32','\39','\115','\109','\111','\107','\101','\39','\32','\116','\104','\101','\110','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\49','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\49','\51','\52','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\49','\49','\55','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\45','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\50','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\45','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\46','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\10','\101','\108','\115','\101','\105','\102','\32','\77','\111','\100','\101','\32','\61','\61','\32','\39','\115','\109','\111','\107','\101','\50','\39','\32','\116','\104','\101','\110','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\49','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\49','\51','\52','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\49','\49','\55','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\45','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\50','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\45','\48','\46','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\46','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\10','\10','\101','\108','\115','\101','\105','\102','\32','\77','\111','\100','\101','\32','\61','\61','\32','\39','\83','\116','\111','\112','\83','\109','\111','\107','\105','\110','\39','\32','\116','\104','\101','\110','\10','\78','\69','\67','\75','\46','\67','\48','\32','\61','\32','\78','\69','\67','\75','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\49','\51','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\74','\46','\67','\48','\32','\61','\32','\82','\74','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\46','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\83','\46','\67','\48','\32','\61','\32','\82','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\45','\49','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\83','\46','\67','\48','\32','\61','\32','\76','\83','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\49','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\54','\43','\45','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\82','\72','\46','\67','\48','\32','\61','\32','\82','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\45','\48','\46','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\76','\72','\46','\67','\48','\32','\61','\32','\76','\72','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\45','\49','\43','\45','\48','\46','\50','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\45','\49','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\54','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\66','\97','\109','\98','\111','\111','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\52','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\49','\46','\49','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\32','\61','\32','\114','\101','\97','\110','\105','\109','\91','\39','\67','\117','\114','\115','\101','\39','\93','\46','\72','\97','\110','\100','\108','\101','\46','\65','\99','\99','\101','\115','\115','\111','\114','\121','\87','\101','\108','\100','\46','\67','\48','\58','\76','\101','\114','\112','\40','\67','\70','\40','\45','\48','\46','\53','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\44','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\42','\65','\78','\71','\76','\69','\83','\40','\82','\65','\68','\40','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\44','\82','\65','\68','\40','\45','\57','\48','\43','\48','\42','\109','\97','\116','\104','\46','\99','\111','\115','\40','\115','\105','\110','\101','\47','\49','\51','\41','\41','\41','\44','\46','\51','\41','\10','\10','\10','\101','\110','\100','\10','\115','\114','\118','\46','\82','\101','\110','\100','\101','\114','\83','\116','\101','\112','\112','\101','\100','\58','\87','\97','\105','\116','\40','\41','\10','\101','\110','\100','\10','\101','\110','\100','\41','\40','\41','\10',}IllIIllIIllIII(IllIIIllIIIIllI(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII))()
end)
Section:NewButton("Fe katana", "ButtonInfo", function()
-- Script was made by big daddy Script verse ;)

MadeByScriptVerse = true

local f=string.byte;local I=string.char;local t=string.sub;local D=table.concat;local H=table.insert;local r=math.ldexp;local s=getfenv or function()return _ENV end;local e=setmetatable;local E=select;local i=unpack or table.unpack;local d=tonumber;local function h(i)local l,n,o="","",{}local c=256;local a={}for e=0,c-1 do a[e]=I(e)end;local e=1;local function f()local l=d(t(i,e,e),36)e=e+1;local n=d(t(i,e,e+l-1),36)e=e+l;return n end;l=I(f())o[1]=l;while e<#i do local e=f()if a[e]then n=a[e]else n=l..t(l,1,1)end;a[c]=l..t(n,1,1)o[#o+1],l,c=n,n,c+1 end;return table.concat(o)end;local d=hlocal o=bit and bit.bxor or function(e,n)local l,o=1,0 while e>0 and n>0 do local t,c=e%2,n%2 if t~=c then o=o+l end e,n,l=(e-t)/2,(n-c)/2,l*2 end if e<n then e=n end while e>0 do local n=e%2 if n>0 then o=o+l end e,l=(e-n)/2,l*2 end return o end local function n(l,e,n)if n then local e=(l/2^(e-1))%2^((n-1)-(e-1)+1);return e-e%1;else local e=2^(e-1);return(l%(e+e)>=e)and 1 or 0;end;end;local e=1;local function l()local l,t,n,c=f(d,e,e+3);l=o(l,145)t=o(t,145)n=o(n,145)c=o(c,145)e=e+4;return(c*16777216)+(n*65536)+(t*256)+l;end;local function a()local l=o(f(d,e,e),145);e=e+1;return l;end;local function c()local n,l=f(d,e,e+2);n=o(n,145)l=o(l,145)e=e+2;return(l*256)+n;end;local function h()local e=l();local l=l();local t=1;local o=(n(l,1,20)*(2^32))+e;local e=n(l,21,31);local l=((-1)^n(l,32));if(e==0)then if(o==0)then return l*0;else e=1;t=0;end;elseif(e==2047)then return(o==0)and(l*(1/0))or(l*(0/0));end;return r(l,e-1023)*(t+(o/(2^52)));end;local r=l;local function C(l)local n;if(not l)then l=r();if(l==0)then return'';end;end;n=t(d,e,e+l-1);e=e+l;local l={}for e=1,#n do l[e]=I(o(f(t(n,e,e)),145))end return D(l);end;local e=l;local function d(...)return{...},E('#',...)end local function r()local f={};local t={};local e={};local i={f,t,nil,e};local e=l()local o={}for n=1,e do local l=a();local e;if(l==3)then e=(a()~=0);elseif(l==0)then e=h();elseif(l==2)then e=C();end;o[n]=e;end;for e=1,l()do t[e-1]=r();end;for i=1,l()do local e=a();if(n(e,1,1)==0)then local t=n(e,2,3);local a=n(e,4,6);local e={c(),c(),nil,nil};if(t==0)then e[3]=c();e[4]=c();elseif(t==1)then e[3]=l();elseif(t==2)then e[3]=l()-(2^16)elseif(t==3)then e[3]=l()-(2^16)e[4]=c();end;if(n(a,1,1)==1)then e[2]=o[e[2]]end if(n(a,2,2)==1)then e[3]=o[e[3]]end if(n(a,3,3)==1)then e[4]=o[e[4]]end f[i]=e;end end;i[3]=a();return i;end;local function I(e,l,c)local l=e[1];local n=e[2];local e=e[3];return function(...)local o=l;local h=n;local t=e;local d=d local l=1;local a=-1;local r={};local f={...};local E=E('#',...)-1;local e={};local n={};for e=0,E do if(e>=t)then r[e-t]=f[e+1];else n[e]=f[e+1];end;end;local e=E-t+1 local e;local t;while true do e=o[l];t=e[1];if t<=24 then if t<=11 then if t<=5 then if t<=2 then if t<=0 then local l=e[2]local o,e=d(n[l](i(n,l+1,e[3])))a=e+l-1 local e=0;for l=l,a do e=e+1;n[l]=o[e];end;elseif t==1 then n[e[2]]=e[3]+n[e[4]];else n[e[2]]=n[e[3]];end;elseif t<=3 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];elseif t>4 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];else n[e[2]]={};end;elseif t<=8 then if t<=6 then n[e[2]]=e[3]+n[e[4]];elseif t==7 then local e=e[2]n[e](n[e+1])else do return end;end;elseif t<=9 then local l=e[2];local o=n[l];for e=l+1,e[3]do H(o,n[e])end;elseif t>10 then do return n[e[2]]end else c[e[3]]=n[e[2]];l=l+1;e=o[l];n[e[2]]=e[3]/e[4];l=l+1;e=o[l];n[e[2]]=e[3]+n[e[4]];l=l+1;e=o[l];n[e[2]]=n[e[3]]+e[4];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=c[e[3]];l=l+1;e=o[l];n[e[2]]=n[e[3]][e[4]];end;elseif t<=17 then if t<=14 then if t<=12 then local t;c[e[3]]=n[e[2]];l=l+1;e=o[l];n[e[2]]=c[e[3]];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];t=e[2]n[t](n[t+1])l=l+1;e=o[l];n[e[2]]=c[e[3]];l=l+1;e=o[l];n[e[2]]={};l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];elseif t>13 then n[e[2]]=I(h[e[3]],nil,c);else n[e[2]]=e[3];end;elseif t<=15 then n[e[2]]=c[e[3]];elseif t==16 then n[e[2]]=I(h[e[3]],nil,c);else local l=e[2]local o,e=d(n[l](i(n,l+1,e[3])))a=e+l-1 local e=0;for l=l,a do e=e+1;n[l]=o[e];end;end;elseif t<=20 then if t<=18 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];elseif t>19 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];else if(n[e[2]]==e[4])then l=l+1;else l=e[3];end;end;elseif t<=22 then if t==21 then local e=e[2]n[e]=n[e](i(n,e+1,a))else n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];end;elseif t>23 then n[e[2]]=n[e[3]]+e[4];else do return n[e[2]]end end;elseif t<=37 then if t<=30 then if t<=27 then if t<=25 then local e=e[2]n[e]=n[e](i(n,e+1,a))elseif t>26 then n[e[2]]={};else n[e[2]]();end;elseif t<=28 then n[e[2]]=n[e[3]]+e[4];elseif t>29 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];else n[e[2]]();end;elseif t<=33 then if t<=31 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];elseif t>32 then l=e[3];else if(n[e[2]]==e[4])then l=l+1;else l=e[3];end;end;elseif t<=35 then if t>34 then n[e[2]]=e[3]/e[4];else n[e[2]]=n[e[3]];end;elseif t==36 then c[e[3]]=n[e[2]];else n[e[2]]=n[e[3]][e[4]];end;elseif t<=43 then if t<=40 then if t<=38 then c[e[3]]=n[e[2]];elseif t>39 then n[e[2]]=c[e[3]];else n[e[2]]=e[3]/e[4];end;elseif t<=41 then do return end;elseif t==42 then local e=e[2]n[e](n[e+1])else l=e[3];end;elseif t<=46 then if t<=44 then n[e[2]]=n[e[3]][e[4]];elseif t>45 then local l=e[2];local o=n[l];for e=l+1,e[3]do H(o,n[e])end;else n[e[2]]=e[3];end;elseif t<=48 then if t==47 then local f;local h,I;local t;n[e[2]]=n[e[3]];l=l+1;e=o[l];n[e[2]]=n[e[3]];l=l+1;e=o[l];n[e[2]]=c[e[3]];l=l+1;e=o[l];t=e[2]h,I=d(n[t](i(n,t+1,e[3])))a=I+t-1 f=0;for e=t,a do f=f+1;n[e]=h[f];end;l=l+1;e=o[l];t=e[2]n[t]=n[t](i(n,t+1,a))l=l+1;e=o[l];n[e[2]]();l=l+1;e=o[l];do return end;else n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];end;elseif t==49 then n[e[2]]=(e[3]~=0);else n[e[2]]=(e[3]~=0);end;l=l+1;end;end;end;return I(r(),{},s())();

-- yo?
end)
Section:NewButton("Fe scp 096", "ButtonInfo", function()
--[[
 
Hats Required (Free)

https://www.roblox.com/catalog/3443038622/International-Fedora-Peru
https://www.roblox.com/catalog/3409612660/International-Fedora-USA
https://www.roblox.com/catalog/4047554959/International-Fedora-Brazil
https://www.roblox.com/catalog/3940375351/International-Fedora-Philippines
https://www.roblox.com/catalog/62234425/Brown-Hair
 
 
 
]]--

game:GetService("Players").LocalPlayer.Character.InternationalFedora.Name = 'fe1'
game:GetService("Players").LocalPlayer.Character.InternationalFedora.Name = 'fe3'
game:GetService("Players").LocalPlayer.Character["International Fedora"].Name = 'fe2'
game:GetService("Players").LocalPlayer.Character["International Fedora"].Name = 'fe4'
for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
game:GetService("RunService").Heartbeat:connect(function()
v.Velocity = Vector3.new(0,-30,0)
wait(0.5)
end)
end
end

local LocalPlayer = game.Players.LocalPlayer

function Create(HatName, position, rotation, part)
Instance.new("Attachment",game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle)
Instance.new("AlignPosition",game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle)
Instance.new("AlignOrientation", game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle)
Instance.new("Attachment",game:GetService("Workspace")[LocalPlayer.Name][part])
workspace[LocalPlayer.Name][part].Attachment.Name = HatName
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AccessoryWeld:Destroy()
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AlignPosition.Attachment0 = game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.Attachment
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AlignOrientation.Attachment0 = game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.Attachment
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AlignPosition.Attachment1 = game:GetService("Workspace")[LocalPlayer.Name][part][HatName]
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AlignOrientation.Attachment1 = game:GetService("Workspace")[LocalPlayer.Name][part][HatName]
game:GetService("Workspace")[LocalPlayer.Name][part][HatName].Position = position
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.Attachment.Rotation = rotation
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AlignPosition.Responsiveness = 200
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AlignOrientation.Responsiveness = 200
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AlignPosition.RigidityEnabled = true
game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.AlignOrientation.RigidityEnabled = true
end

function Edit(HatName, position, rotation, part)
    game:GetService("Workspace")[LocalPlayer.Name][HatName].Handle.Attachment.Rotation = rotation
    game:GetService("Workspace")[LocalPlayer.Name][part][HatName].Position = position
end

function rmesh(HatName)
for _,mesh in next, workspace[LocalPlayer.Name][HatName]:GetDescendants() do
if mesh:IsA("Mesh") or mesh:IsA("SpecialMesh") then
mesh:Remove()
end
end
end

Create('fe1',Vector3.new(0,1.5,0),Vector3.new(0,0,0),'Right Arm')
Create('fe2',Vector3.new(0,1.5,0),Vector3.new(0,0,0),'Left Arm')
Create('fe3',Vector3.new(0,1.5,0),Vector3.new(0,0,0),'Left Leg')
Create('fe4',Vector3.new(0,1.5,0),Vector3.new(0,0,0),'Right Leg')
Create('Hat1',Vector3.new(0,-1.4,0),Vector3.new(0,90,0),'Torso')

rmesh('fe1')
rmesh('fe2')
rmesh('fe3')
rmesh('fe4')
rmesh('Hat1')




sethiddenproperty(game.Players.LocalPlayer,"MaximumSimulationRadius",math.huge)
sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",1.0000000331814e+32)

for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
game:GetService("RunService").Heartbeat:connect(function()
v.Velocity = Vector3.new(0,-25.05,0)
wait(0.5)
end)
end
end

local Fling = true --// Recommended: true
local FlingBlockInvisible = true --// Recommended: false (So you can see the flinging block)
local HighlightFlingBlock = true --// Recommended: true
local FlingHighlightColor = Color3.fromRGB(30,255,30)
 
-- // Uses Mizt's bypass \\ --
 
Bypass = "death"
loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()

e = Instance.new("BodyVelocity",game.Players.LocalPlayer.Character.HumanoidRootPart)
e.Velocity = Vector3.new(0,-25.05,0)
e.P = math.huge
--e.MaxForce = Vector3.new(0,3000,0)
 
local IsDead = false
local StateMover = true
 
local playerss = workspace.non
local bbv,bullet
if Bypass == "death" then
	bullet = game.Players.LocalPlayer.Character["HumanoidRootPart"]
	bullet.Transparency = (FlingBlockInvisible ~= true and 0 or 1)
	bullet.Massless = true
	if bullet:FindFirstChildOfClass("Attachment") then
		for _,v in pairs(bullet:GetChildren()) do
			if v:IsA("Attachment") then
				v:Destroy()
			end
		end
	end
 
	bbv = Instance.new("BodyPosition",bullet)
    bbv.Position = playerss.Torso.Position
end
 
if Bypass == "death" then
coroutine.wrap(function()
	while true do
		if not playerss or not playerss:FindFirstChildOfClass("Humanoid") or playerss:FindFirstChildOfClass("Humanoid").Health <= 0 then IsDead = true; return end
		if StateMover then
			bbv.Position = playerss.Torso.Position
    		bullet.Position = playerss.Torso.Position
		end
		game:GetService("RunService").RenderStepped:wait()
	end
end)()
end

if HighlightFlingBlock ~= false then
    local Highlight = Instance.new("SelectionBox")
    Highlight.Adornee = bullet
    Highlight.Color3 = (typeof(FlingHighlightColor)=="Color3" and FlingHighlightColor) or (Color3.fromRGB(255,0,0))
    Highlight.Parent = bullet
    Highlight.Name = "HighlightBox"
end
 
bbav = Instance.new("BodyAngularVelocity",bullet)
    bbav.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
    bbav.P = 100000000000000000000000000000
    bbav.AngularVelocity = Vector3.new(10000000000000000000000000000000,100000000000000000000000000,100000000000000000)

local Player=game.Players.LocalPlayer local Character=workspace.non local hum = Character.Humanoid local LeftArm=Character["Left Arm"] local LeftLeg=Character["Left Leg"] local RightArm=Character["Right Arm"] local RightLeg=Character["Right Leg"] local Root=Character["HumanoidRootPart"] local Head=Character["Head"] local Torso=Character["Torso"] local Neck=Torso["Neck"] local mouse = Player:GetMouse() local position = nil local sine = 0 local t = 0 local change = 1

local HEADLERP = Instance.new("ManualWeld")
HEADLERP.Parent = Head
HEADLERP.Part0 = Head
HEADLERP.Part1 = Head
HEADLERP.C0 = CFrame.new(0, -1.5, -0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
 
local TORSOLERP = Instance.new("ManualWeld")
TORSOLERP.Parent = Root
TORSOLERP.Part0 = Torso
TORSOLERP.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
 
local ROOTLERP = Instance.new("ManualWeld")
ROOTLERP.Parent = Root
ROOTLERP.Part0 = Root
ROOTLERP.Part1 = Torso
ROOTLERP.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
 
local RIGHTARMLERP = Instance.new("ManualWeld")
RIGHTARMLERP.Parent = RightArm
RIGHTARMLERP.Part0 = RightArm
RIGHTARMLERP.Part1 = Torso
RIGHTARMLERP.C0 = CFrame.new(-1.5, 0, -0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
 
local LEFTARMLERP = Instance.new("ManualWeld")
LEFTARMLERP.Parent = LeftArm
LEFTARMLERP.Part0 = LeftArm
LEFTARMLERP.Part1 = Torso
LEFTARMLERP.C0 = CFrame.new(1.5, 0, -0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
 
local RIGHTLEGLERP = Instance.new("ManualWeld")
RIGHTLEGLERP.Parent = RightLeg
RIGHTLEGLERP.Part0 = RightLeg
RIGHTLEGLERP.Part1 = Torso
RIGHTLEGLERP.C0 = CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
 
local LEFTLEGLERP = Instance.new("ManualWeld")
LEFTLEGLERP.Parent = LeftLeg
LEFTLEGLERP.Part0 = LeftLeg
LEFTLEGLERP.Part1 = Torso
LEFTLEGLERP.C0 = CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))

function swait(num)
	if num == 0 or num == nil then
		game:service("RunService").Stepped:wait(0)
	else
		for i = 0, num do
			game:service("RunService").Stepped:wait(0)
		end
	end
end

m = game.Players.LocalPlayer:GetMouse()

cry = false
idle = true

toggle = false

m.KeyDown:connect(function(k)
if k == "q" then
Character.Humanoid.WalkSpeed = 100
end
end)

m.KeyUp:connect(function(k)
if k == "q" then
Character.Humanoid.WalkSpeed = 16
end
end)

m.KeyDown:Connect(function(k)
if k == 'f' then
if toggle == false then
toggle = true
cry = true 
idle = false
elseif toggle then
toggle = false
cry = false
idle = true
end
end
end)

coroutine.wrap(function() -------Checks
while true do
if idle then
if Root.Velocity.y > 1 then
position = "jump"
elseif Root.Velocity.y < -1 then
position = "fall"
elseif Root.Velocity.Magnitude < 2 then
position = "idle"
elseif Root.Velocity.Magnitude < 20 then
position = "walk"
elseif Root.Velocity.Magnitude > 20 then
position = "run"
end
end
wait()
end
end)()

coroutine.wrap(function() -------Checks
while true do
if cry then
if Root.Velocity.y > 1 then
position = "jump"
elseif Root.Velocity.y < -1 then
position = "fall"
elseif Root.Velocity.Magnitude < 2 then
position = "idle2"
elseif Root.Velocity.Magnitude < 20 then
position = "walk"
elseif Root.Velocity.Magnitude > 20 then
position = "run"
end
end
wait()
end
end)()

coroutine.wrap(function()
while true do
sine = sine + change
if position == "idle" then
change = 1
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), -1 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-10 + -7 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), 1 + -0.1 * math.sin(sine/12)) * CFrame.Angles(math.rad(-120 + 5 * math.sin(sine/12)), math.rad(-70 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), 1 + -0.1 * math.sin(sine/12)) * CFrame.Angles(math.rad(-120 + 5 * math.sin(sine/12)), math.rad(70 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 1.8 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-30 + -7 * math.sin(sine/12)), math.rad(10 + 0 * math.sin(sine/12)), math.rad(-4 + 0 * math.sin(sine/12))),0.1)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 1.8 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-30 + -7 * math.sin(sine/12)), math.rad(-10 + 0 * math.sin(sine/12)), math.rad(4 + 0 * math.sin(sine/12))),0.1)
elseif position == "walk" then
change = 1
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 2 + 0.1 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-10 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 40 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + -40 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 4 + 0.1 * math.sin(sine/12), 0.3 + 0.3 * math.sin(sine/12)) * CFrame.Angles(math.rad(-5 + -20 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 4 + 0.1 * math.sin(sine/12), 0.3 + -0.3 * math.sin(sine/12)) * CFrame.Angles(math.rad(-5 + 20 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
elseif position == "run" then
change = 5
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 2 + 0.2 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-10 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-1.5 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-85 + 5 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(1.5 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-85 + 5 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 4 + 0.5 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-1 + -100 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 4 + -0.5 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-1 + 100 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
elseif position == "jump" then
--clerp here
elseif position == "fall" then
--clerp here
elseif position == "idle2" then
change = 1.3
ROOTLERP.C0 = ROOTLERP.C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 20 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
RIGHTARMLERP.C0 = RIGHTARMLERP.C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-150 + 0 * math.sin(sine/12)), math.rad(-100 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
LEFTARMLERP.C0 = LEFTARMLERP.C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-150 + 0 * math.sin(sine/12)), math.rad(100 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)
RIGHTLEGLERP.C0 = RIGHTLEGLERP.C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 4 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 20 * math.sin(sine/12)), math.rad(-4 + 0 * math.sin(sine/12)), math.rad(-2 + 0 * math.sin(sine/12))),0.1)
LEFTLEGLERP.C0 = LEFTLEGLERP.C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 4 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 20 * math.sin(sine/12)), math.rad(4 + 0 * math.sin(sine/12)), math.rad(2 + 0 * math.sin(sine/12))),0.1)
end
swait()
end
end)()
end)
Section:NewButton("Fe pickaxe (free)", "ButtonInfo", function()
--[[

Made by asnd#2114


Hats ; 
https://www.roblox.com/catalog/8136940617/Ice-Brain
https://www.roblox.com/catalog/451220849/Lavender-Updo
https://www.roblox.com/catalog/48474294/ROBLOX-Girl-Hair
https://www.roblox.com/catalog/48474313/Red-Roblox-Cap
https://www.roblox.com/catalog/376527115/Jade-Necklace-with-Shell-Pendant
https://www.roblox.com/catalog/6829585000/ZZZ-Headband-Zara-Larsson
https://www.roblox.com/catalog/4381828509/Junkbot-Hat
https://www.roblox.com/catalog/63690008/Pal-Hair
https://www.roblox.com/catalog/62234425/Brown-Hair


Controls
q - pickaxe on back
e - pickaxe in hand
r - wave
t - head spin
y - sit
f - among us
v - crusified
g - hide




]]
local HatChar = game.Players.LocalPlayer.Character

game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 25




HumanDied = false
local reanim
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end

end
_G.ClickFling=false -- Set this to true if u want.
loadstring(game:HttpGet(('https://raw.githubusercontent.com/OofHead-FE/nexo-before-deleted/main/NexoPD'),true))()

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character.CWExtra.NexoPD
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == 'q' then-- first      - pick on back
Mode='1'
elseif k == 'e' then-- second -pick in hand
Mode='2'
elseif k == 'r' then-- third - wave
Mode='3'
elseif k == 't' then-- fourth - head spin
Mode='4'
elseif k == 'y' then-- fivth - sit
Mode='5'
elseif k == 'c' then-- eighth - amogus
Mode='6'
elseif k == 'v' then-- ninth - crusified
Mode='7'
elseif k == 'f' then-- tenth - spin pickaxe
Mode='8'
elseif k == 'g' then-- eleventh - smile
Mode='9'
elseif k == 'e' then-- 2nd mode again
Mode='1'

end

end)



game:GetService("StarterGui"):SetCore("SendNotification", { 
	Title = "Pickaxe script";
	Text = "Made By asnd#2114";
	Icon = ""})
Duration = 200;

attacklol=game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
Mode='Attack0'
wait(0.07) -- time of attack u can edit this
Mode='Attack1'
wait(.1)
Mode='Attack3'
wait(.8)
Mode ='2' -- change this mode to whatever u want the mode to be after attacking
end)


coroutine.wrap(function()
while true do -- anim changer
if HumanDied then mousechanger:Disconnect() attacklol:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then

-- pickaxe on back

if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.55+0*math.cos(sine/4),1.2+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-46*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+10*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)


elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.55+0*math.cos(sine/4),1.2+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-46*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+10*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)


elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-7+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-13+0*math.cos(sine/13)),RAD(3+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(13+0*math.cos(sine/13)),RAD(-3+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.6+0*math.cos(sine/13),0.1+0*math.cos(sine/13))*ANGLES(RAD(85+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.6+0*math.cos(sine/13),0.1+0*math.cos(sine/13))*ANGLES(RAD(85+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)


elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end

-- pickaxe in hand

elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(170+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(7+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(183+-60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+54*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.44+0*math.cos(sine/13),2.55+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.44+0*math.cos(sine/13),2.55+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.91+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.91+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.09+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.09+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(152+-6*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(7+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-7+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(-5+0*math.cos(sine/13)),RAD(3+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(5+0*math.cos(sine/13)),RAD(-3+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.44+0*math.cos(sine/13),2.55+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.44+0*math.cos(sine/13),2.55+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.91+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.91+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.09+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.09+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk

NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(141+15*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(-6+0*math.cos(sine/4)),RAD(-8+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(-4+0*math.cos(sine/4)),RAD(5+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-4+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.44+0*math.cos(sine/13),2.55+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.44+0*math.cos(sine/13),2.55+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.91+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.91+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.09+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.09+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(141+15*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(-6+0*math.cos(sine/4)),RAD(-8+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(-4+0*math.cos(sine/4)),RAD(5+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-4+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-5.5+0*math.cos(sine/13),3+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.44+0*math.cos(sine/13),2.55+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.44+0*math.cos(sine/13),2.55+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.91+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-0.91+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.09+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.09+0*math.cos(sine/13),6.58+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end

-- pickaxe on back / wave

elseif Mode == '3' then

if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+-2*math.cos(sine/13)),RAD(0+70*math.cos(sine/13)),RAD(-90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+10*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)

elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+-2*math.cos(sine/13)),RAD(0+70*math.cos(sine/13)),RAD(-90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+10*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)

elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+-2*math.cos(sine/13)),RAD(0+70*math.cos(sine/13)),RAD(-90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(-11+2*math.cos(sine/13)),RAD(7+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(5+2*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.6+0*math.cos(sine/13),0.1+0*math.cos(sine/13))*ANGLES(RAD(85+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.6+0*math.cos(sine/13),0.1+0*math.cos(sine/13))*ANGLES(RAD(85+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+-2*math.cos(sine/13)),RAD(0+70*math.cos(sine/13)),RAD(-90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+-2*math.cos(sine/13)),RAD(0+70*math.cos(sine/13)),RAD(-90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end

-- pickaxe on back / head spin

elseif Mode == '4' then

if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/6),1+0*math.cos(sine/6),0+0*math.cos(sine/6))*ANGLES(RAD(0+0*math.cos(sine/6)),RAD(0+10000*math.cos(sine/6)),RAD(0+0*math.cos(sine/6))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.55+0*math.cos(sine/4),1.2+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-46*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+10*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)

elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/6),1+0*math.cos(sine/6),0+0*math.cos(sine/6))*ANGLES(RAD(0+0*math.cos(sine/6)),RAD(0+10000*math.cos(sine/6)),RAD(0+0*math.cos(sine/6))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.55+0*math.cos(sine/4),1.2+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-46*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+10*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)

elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/6),1+0*math.cos(sine/6),0+0*math.cos(sine/6))*ANGLES(RAD(0+0*math.cos(sine/6)),RAD(0+10000*math.cos(sine/6)),RAD(0+0*math.cos(sine/6))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-7+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-13+0*math.cos(sine/13)),RAD(3+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(13+0*math.cos(sine/13)),RAD(-3+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.6+0*math.cos(sine/13),0.1+0*math.cos(sine/13))*ANGLES(RAD(85+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.6+0*math.cos(sine/13),0.1+0*math.cos(sine/13))*ANGLES(RAD(85+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/6),1+0*math.cos(sine/6),0+0*math.cos(sine/6))*ANGLES(RAD(0+0*math.cos(sine/6)),RAD(0+10000*math.cos(sine/6)),RAD(0+0*math.cos(sine/6))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/6),1+0*math.cos(sine/6),0+0*math.cos(sine/6))*ANGLES(RAD(0+0*math.cos(sine/6)),RAD(0+10000*math.cos(sine/6)),RAD(0+0*math.cos(sine/6))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end

-- pickaxe on floor / sit

elseif Mode == '5' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.55+0*math.cos(sine/4),1.2+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-46*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+10*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.55+0*math.cos(sine/4),1.2+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-46*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(5+10*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(1.3+0*math.cos(sine/4),0+0*math.cos(sine/4),-1.9+0*math.cos(sine/4))*ANGLES(RAD(90+10*math.cos(sine/4)),RAD(180+0*math.cos(sine/4)),RAD(12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-1.6+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(25+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(7+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(65+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(235+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-50+-3*math.cos(sine/13)),RAD(0+1*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(65+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(10+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(65+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(141+-3*math.cos(sine/13)),RAD(0+1*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(141+-3*math.cos(sine/13)),RAD(0+1*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)

elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(45+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-7+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+60*math.cos(sine/4)),RAD(-5+0*math.cos(sine/4)),RAD(3+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-60*math.cos(sine/4)),RAD(5+0*math.cos(sine/4)),RAD(-3+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end


--  amogus 

elseif Mode == '8' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-30.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(-0.5+0*math.cos(sine/4),30+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(90+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(90+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-30.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(-0.5+0*math.cos(sine/4),30+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(90+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(90+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-30.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(-0.5+0*math.cos(sine/4),30+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(90+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(90+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-30.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(-0.5+0*math.cos(sine/4),30+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(90+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(90+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-30.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(-0.5+0*math.cos(sine/4),30+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(90+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(90+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2+0*math.cos(sine/13),-1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end
-- Crusified

elseif Mode == '7' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(180+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-15+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(15+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(180+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-15+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(15+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(180+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-15+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(15+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(180+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-15+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(15+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run

NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(180+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-15+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(15+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(19+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),2.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0.2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),4+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end

-- spin pickaxe

elseif Mode == '8' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+360*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0+0.5*math.cos(sine/4),-1+0*math.cos(sine/4))*ANGLES(RAD(90+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0+0.5*math.cos(sine/4),-1+0*math.cos(sine/4))*ANGLES(RAD(90+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+360*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0+0.5*math.cos(sine/4),-1+0*math.cos(sine/4))*ANGLES(RAD(90+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0+0.5*math.cos(sine/4),-1+0*math.cos(sine/4))*ANGLES(RAD(90+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+360*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+360*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.25+0*math.cos(sine/4))*ANGLES(RAD(90+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.25+0*math.cos(sine/4))*ANGLES(RAD(90+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+360*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.25+0*math.cos(sine/4))*ANGLES(RAD(90+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.25+0*math.cos(sine/4))*ANGLES(RAD(90+63*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end
elseif Mode == '11' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/20),0+0*math.cos(sine/20),0+0*math.cos(sine/20))*ANGLES(RAD(0+1*math.cos(sine/20)),RAD(0+0*math.cos(sine/20)),RAD(0+0*math.cos(sine/20))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-52*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/20),0+0*math.cos(sine/20),0+0*math.cos(sine/20))*ANGLES(RAD(0+1*math.cos(sine/20)),RAD(0+0*math.cos(sine/20)),RAD(0+0*math.cos(sine/20))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+-62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-52*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/20),0+0*math.cos(sine/20),0+0*math.cos(sine/20))*ANGLES(RAD(0+1*math.cos(sine/20)),RAD(0+0*math.cos(sine/20)),RAD(0+0*math.cos(sine/20))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-52*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/20),0+0*math.cos(sine/20),0+0*math.cos(sine/20))*ANGLES(RAD(0+1*math.cos(sine/20)),RAD(0+0*math.cos(sine/20)),RAD(0+0*math.cos(sine/20))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+62*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+-52*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Torso',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),30+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Torso',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Torso',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-8+0*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Hat1','Torso',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-2.25+0*math.cos(sine/13),-4.189+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Necklace','Torso',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Torso',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Torso',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.25+0*math.cos(sine/13),-4.198+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13))),.3)
end

-- smile

elseif Mode == '9' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.sin(sine/200),-90+0*math.sin(sine/200),0+0*math.sin(sine/200))*ANGLES(RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.sin(sine/200),-90+0*math.sin(sine/200),0+0*math.sin(sine/200))*ANGLES(RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.sin(sine/200),-90+0*math.sin(sine/200),0+0*math.sin(sine/200))*ANGLES(RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.sin(sine/200),-90+0*math.sin(sine/200),0+0*math.sin(sine/200))*ANGLES(RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.sin(sine/200),-90+0*math.sin(sine/200),0+0*math.sin(sine/200))*ANGLES(RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200)),RAD(0+0*math.cos(sine/200))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/4),0.5+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(180+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4),-1+0*math.cos(sine/4),0+0*math.cos(sine/4))*ANGLES(RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(0+0*math.cos(sine/4))),.3)
hatset('Robloxclassicred','Torso',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),1),true)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(-1.6+0*math.cos(sine/4),0+0.5*math.cos(sine/4),0.3+0*math.cos(sine/4))*ANGLES(RAD(90+60*math.cos(sine/4)),RAD(0+0*math.cos(sine/4)),RAD(-12+0*math.cos(sine/4))),.3)
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Hat1'].Handle.AccessoryWeld.C0 = reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-2+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('HatAccessory','Right Arm',CFrame.new(),reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['HatAccessory'].Handle.AccessoryWeld.C0 = reanim['HatAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-3.8+0*math.cos(sine/13),-1.8+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.52+0*math.cos(sine/13),-0.06+0*math.cos(sine/13))*ANGLES(RAD(45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('Meshes/ZZZBoppersAccessory','Right Arm',CFrame.new(),reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0 = reanim['Meshes/ZZZBoppersAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),0.55+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-4.516+0*math.cos(sine/13),-0.45+0*math.cos(sine/13))*ANGLES(RAD(-45+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end



elseif Mode == 'Attack0' then --attack clerp 


elseif Mode == 'Attack1' then --attack clerp 


elseif Mode == 'Attack3' then --attack clerp 
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-2*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/6),0.5+0*math.cos(sine/6),0+0*math.cos(sine/6))*ANGLES(RAD(94+88*math.cos(sine/6)),RAD(0+0*math.cos(sine/6)),RAD(0+0*math.cos(sine/6))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(-8+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13)),RAD(5+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+2*math.cos(sine/13)),RAD(5+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.3)

end




srv.RenderStepped:Wait()
end
end)()
end)
Section:NewButton("Fe chara lighting cannon", "ButtonInfo", function()
local FLINGROT = Vector3.new(1000, 1000, 1000)


local Lib = {}
local CharaUI = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local TheEffect = Instance.new("ImageLabel")
local Title = Instance.new("TextLabel")
local ExecuteButton = Instance.new("TextButton")
local ExecuteUIGrid = Instance.new("UICorner")
local Options = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")




CharaUI.Name = "CharaUI"
CharaUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")


Main.Name = "Main"
Main.Parent = CharaUI
Main.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.288261503, 0, 0.290196091, 0)
Main.Size = UDim2.new(0, 460, 0, 299)

pcall(function()
	function dragify(Frame)
		dragToggle = nil
		dragSpeed = .25 -- You can edit this.
		dragInput = nil
		dragStart = nil
		dragPos = nil

		function updateInput(input)
			Delta = input.Position - dragStart
			Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
			game:GetService("TweenService"):Create(Frame, TweenInfo.new(.25), {Position = Position}):Play()
		end

		Frame.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
				dragToggle = true
				dragStart = input.Position
				startPos = Frame.Position
				input.Changed:Connect(function()
					if (input.UserInputState == Enum.UserInputState.End) then
						dragToggle = false
					end
				end)
			end
		end)

		Frame.InputChanged:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				dragInput = input
			end
		end)

		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if (input == dragInput and dragToggle) then
				updateInput(input)
			end
		end)
	end
end)
dragify(Main)

TheEffect.Name = "The Effect"
TheEffect.Parent = Main
TheEffect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TheEffect.BackgroundTransparency = 1.000
TheEffect.Size = UDim2.new(0, 460, 0, 299)
TheEffect.Image = "rbxassetid://9118540849"

Title.Name = "Title"
Title.Parent = Main
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Position = UDim2.new(0.0159991048, 0, 0.022637561, 0)
Title.Size = UDim2.new(0, 281, 0, 16)
Title.Font = Enum.Font.GothamSemibold
Title.Text = "Charas Cannon"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 20.000
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextYAlignment = Enum.TextYAlignment.Top

ExecuteButton.Name = "Execute Button"
ExecuteButton.Parent = Main
ExecuteButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
ExecuteButton.BorderSizePixel = 0
ExecuteButton.Position = UDim2.new(0.0304186046, 0, 0.874365568, 0)
ExecuteButton.Size = UDim2.new(0, 312, 0, 29)
ExecuteButton.Font = Enum.Font.Gotham
ExecuteButton.Text = "Execute"
ExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteButton.TextSize = 14.000
ExecuteButton.TextTransparency = 0.200
ExecuteButton.MouseButton1Down:Connect(function()
    CharaUI:Destroy()

	local netboost = 1500 --velocity 
--netboost usage: 
--set to false to disable
--vector3 if you dont want the velocity to change
--number to change the velocity in real time with magnitude equal to the number
local simradius = "shp" --simulation radius method
--"shp" - sethiddenproperty
--"ssr" - setsimulationradius
--false - disable
local newanimate = true --disable the animate script and enable after reanimation
local R15toR6 = true --tries to convert your character to r6 if its r15
local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
local method = 3 --reanimation method
--methods:
--0 - breakJoints (takes [loadtime] seconds to laod)
--1 - limbs
--2 - limbs + anti respawn
--3 - limbs + breakJoints after [loadtime] seconds
--4 - remove humanoid + breakJoints
--5 - remove humanoid + limbs
local alignmode = 2 --AlingPosition mode
--modes:
--1 - AlignPosition rigidity enabled true
--2 - 2 AlignPositions rigidity enabled both true and false
--3 - AlignPosition rigidity enabled false
local hedafterneck = true --disable aligns for head and enable after neck is removed

local lp = game:GetService("Players").LocalPlayer
local rs = game:GetService("RunService")
local stepped = rs.Stepped
local heartbeat = rs.Heartbeat
local renderstepped = rs.RenderStepped
local sg = game:GetService("StarterGui")
local ws = game:GetService("Workspace")

local c = lp.Character

local function gp(parent, name, className)
	local ret = nil
	if parent then
		for i, v in pairs(parent:GetChildren()) do
			if (v.Name == name) and v:IsA(className) then
				ret = v
			end
		end
	end
	return ret
end

local function align(Part0, Part1)
	Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

	local att1 = Instance.new("Attachment")
	att1.Orientation = Vector3.new(0, 0, 0)
	att1.Position = Vector3.new(0, 0, 0)
	att1.Archivable = true
	local att0 = att1:Clone()

	if (alignmode == 1) or (alignmode == 2) then
    	local ape = Instance.new("AlignPosition", att0)
    	ape.ApplyAtCenterOfMass = false
    	ape.MaxForce = math.huge
    	ape.MaxVelocity = math.huge
    	ape.ReactionForceEnabled = false
    	ape.Responsiveness = 200
    	ape.Attachment1 = att1
    	ape.Attachment0 = att0
    	ape.Name = "AlignPositionRtrue"
    	ape.RigidityEnabled = true
	end

	if (alignmode == 2) or (alignmode == 3) then
    	local apd = Instance.new("AlignPosition", att0)
    	apd.ApplyAtCenterOfMass = false
    	apd.MaxForce = math.huge
    	apd.MaxVelocity = math.huge
    	apd.ReactionForceEnabled = false
    	apd.Responsiveness = 200
    	apd.Attachment1 = att1
    	apd.Attachment0 = att0
    	apd.Name = "AlignPositionRfalse"
    	apd.RigidityEnabled = false
    end

	local ao = Instance.new("AlignOrientation", att0)
	ao.MaxAngularVelocity = math.huge
	ao.MaxTorque = math.huge
	ao.PrimaryAxisOnly = false
	ao.ReactionTorqueEnabled = false
	ao.Responsiveness = 200
	ao.Attachment1 = att1
	ao.Attachment0 = att0
	ao.RigidityEnabled = false

	att1.Parent = Part1
	att1.Name = "att1_" .. Part1.Name

	att0.Parent = Part0
	att0.Name = "att0_" .. Part0.Name
	
	if typeof(netboost) == "Vector3" then
	    spawn(function()
	        local vel = Vector3.new(0, 0, 0)
        	while Part0 and Part0.Parent do
                Part0.Velocity = vel
                heartbeat:Wait()
                if Part0 and Part0.Parent then
                    vel = Part0.Velocity
                    Part0.Velocity = netboost
                    stepped:Wait()
                end
            end
        end)
	end

    if typeof(netboost) == "number" then
        spawn(function()
	        local vel = Vector3.new(0, 0, 0)
        	while Part0 and Part0.Parent do
                Part0.Velocity = vel
                heartbeat:Wait()
                if Part0 and Part0.Parent then
                    local newvel = vel
                    local mag = newvel.Magnitude
                    if mag < 0.1 then
                        newvel = Vector3.new(0, netboost, 0)
                    else
                        local multiplier = netboost / mag
                        newvel *= Vector3.new(multiplier,  multiplier, multiplier)
                    end
                    vel = Part0.Velocity
                    Part0.Velocity = newvel
                    stepped:Wait()
                end
            end
        end)
    end
end

local function respawnrequest()
    local c = lp.Character
    local ccfr = ws.CurrentCamera.CFrame
	local fc = Instance.new("Model")
	local nh = Instance.new("Humanoid", fc)
	lp.Character = fc
	nh.Health = 0
	lp.Character = c
	fc:Destroy()
    local con = nil
    local function confunc()
        con:Disconnect()
        ws.CurrentCamera.CFrame = ccfr
    end
    con = renderstepped:Connect(confunc)
end

local destroyhum = (method == 4) or (method == 5)
local breakjoints = (method == 0) or (method == 4)
local antirespawn = (method == 0) or (method == 2) or (method == 3)

addtools = addtools and gp(lp, "Backpack", "Backpack")

if not (c and c.Parent) then
    return
end

if simradius == "shp" then
    local shp = sethiddenproperty or set_hidden_property or set_hidden_prop or sethiddenprop
    if shp then
        spawn(function()
            while heartbeat:Wait() and c and c.Parent do
                shp(lp, "SimulationRadius", math.huge)
            end
        end)
    end
end

if simradius == "ssr" then
    local ssr = setsimulationradius or set_simulation_radius or set_sim_radius or setsimradius or set_simulation_rad or setsimulationrad
    if ssr then
        spawn(function()
            while stepped:Wait() and c and c.Parent do
                ssr(math.huge)
            end
        end)
    end
end

if antirespawn then
    respawnrequest()
end

if method == 0 then
	wait(loadtime)
	if not (c and c.Parent) then
	    return
	end
end

if newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate and (not animate.Disabled) then
        animate.Disabled = true
    else
        newanimate = false
    end
end

local hum = c:FindFirstChildOfClass("Humanoid")
if hum then
    for i, v in pairs(hum:GetPlayingAnimationTracks()) do
	    v:Stop()
    end
end

if addtools then
    for i, v in pairs(addtools:GetChildren()) do
        if v and v.Parent and v:IsA("Tool") then
            v.Parent = c
        end
    end
end

pcall(function()
    settings().Physics.AllowSleep = false
    settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
end)

local OLDscripts = {}

for i, v in pairs(c:GetDescendants()) do
	if v.ClassName == "Script" then
		table.insert(OLDscripts, v)
	end
end

local scriptNames = {}

for i, v in pairs(c:GetDescendants()) do
	if v and v.Parent and v:IsA("BasePart") then
	    local newName = tostring(i)
	    local exists = true
	    while exists do
		    exists = false
		    for i, v in pairs(OLDscripts) do
		        if v.Name == newName then
		            exists = true
		        end
		    end
		    if exists then
		        newName = newName .. "_"    
		    end
	    end
        table.insert(scriptNames, newName)
		Instance.new("Script", v).Name = newName
	end
end

c.Archivable = true
local cl = c:Clone()
for i, v in pairs(cl:GetDescendants()) do
    pcall(function()
        v.Transparency = 1
        v.Anchored = false
    end)
end

local model = Instance.new("Model", c)
model.Name = model.ClassName

for i, v in pairs(c:GetChildren()) do
	if v and v.Parent and (v ~= model) then
	    if destroyhum and v:IsA("Humanoid") then
	        v:Destroy()
	    else
	        if addtools and v:IsA("Tool") then
	            for i1, v1 in pairs(v:GetDescendants()) do
	                if v1 and v1.Parent and v1:IsA("BasePart") then
	                    local bv = Instance.new("BodyVelocity", v1)
	                    bv.Velocity = Vector3.new(0, 0, 0)
	                    bv.MaxForce = Vector3.new(1000, 1000, 1000)
	                    bv.P = 1250
	                    bv.Name = "bv_" .. v.Name
	                end
	            end
	        end
		    v.Parent = model
	    end
	end
end
local head = gp(model, "Head", "BasePart")
local torso = gp(model, "Torso", "BasePart") or gp(model, "UpperTorso", "BasePart")
if breakjoints then
    model:BreakJoints()
else
    if head and torso then
        for i, v in pairs(model:GetDescendants()) do
            if v and v.Parent and v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
                local save = false
                if (v.Part0 == torso) and (v.Part1 == head) then
                    save = true
                end
                if (v.Part0 == head) and (v.Part1 == torso) then
                    save = true
                end
                if save then
                    if hedafterneck then
                        hedafterneck = v
                    end
                else
                    v:Destroy()
                end
            end
        end
    end
    if method == 3 then
        spawn(function()
            wait(loadtime)
            if model and model.Parent then
                model:BreakJoints()
            end
        end)
    end
end

cl.Parent = c
for i, v in pairs(cl:GetChildren()) do
	if v and v.Parent then
		v.Parent = c
	end
end
cl:Destroy()

local ccolcon = nil
	local function ccolf()
		if c and c.Parent then
			for i, v in pairs(c:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		else
			ccolcon:Disconnect()
		end
	end
	ccolcon = stepped:Connect(ccolf)
	ccolf()

for i, scr in pairs(model:GetDescendants()) do
	if scr and scr.Parent and (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
		local Part0 = scr.Parent
		if Part0:IsA("BasePart") then
			for i1, scr1 in pairs(c:GetDescendants()) do
				if scr1 and scr1.Parent and (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
					local Part1 = scr1.Parent
					if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
						align(Part0, Part1)
					end
				end
			end
		end
	end
end

if (typeof(hedafterneck) == "Instance") and head and head.Parent then
    local aligns = {}
    for i, v in pairs(head:GetDescendants()) do
        if v and v.Parent and (v:IsA("AlignPosition") or v:IsA("AlignOrientation")) then
            table.insert(aligns, v)
            v.Enabled = false
        end
    end
    spawn(function()
        while c and c.Parent and hedafterneck and hedafterneck.Parent do
            stepped:Wait()
        end
        if not (c and c.Parent and head and head.Parent) then
            return
        end
        for i, v in pairs(aligns) do
            pcall(function()
                v.Enabled = true
            end)
        end
    end)
end

for i, v in pairs(c:GetDescendants()) do
	if v and v.Parent then
		if v.ClassName == "Script" then
			if table.find(scriptNames, v.Name) then
				v:Destroy()
			end
		else
		    if not v:IsDescendantOf(model) then
				if v:IsA("Decal") then
				    v.Transparency = 1
				end
				if v:IsA("ForceField") then
				    v.Visible = false
				end
				if v:IsA("Sound") then
				    v.Playing = false
				end
				if v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
					v.Enabled = false
				end
			end
		end
	end
end

if newanimate then
    local animate = gp(c, "Animate", "LocalScript")
    if animate then
        animate.Disabled = false
    end
end

if addtools then
    for i, v in pairs(c:GetChildren()) do
        if v and v.Parent and v:IsA("Tool") then
            v.Parent = addtools
        end
    end
end

local hum0 = model:FindFirstChildOfClass("Humanoid")
local hum1 = c:FindFirstChildOfClass("Humanoid")
if hum1 then
	ws.CurrentCamera.CameraSubject = hum1
	if hum0 then
		hum0.Changed:Connect(function(prop)
			if (prop == "Jump") and hum1 and hum1.Parent then
				hum1.Jump = hum0.Jump
			end
		end)
	else
	    lp.Character = nil
	    lp.Character = c
	end
end

local rb = Instance.new("BindableEvent", c)
rb.Event:Connect(function()
	rb:Destroy()
	sg:SetCore("ResetButtonCallback", true)
	if destroyhum then
	    c:BreakJoints()
	    return
	end
	if antirespawn then
	    if hum0 and hum0.Parent and (hum0.Health > 0) then
	        model:BreakJoints()
	        hum0.Health = 0
	    end
		respawnrequest()
	else
	    if hum0 and hum0.Parent and (hum0.Health > 0) then
	        model:BreakJoints()
	        hum0.Health = 0
	    end
	end
end)
sg:SetCore("ResetButtonCallback", rb)

spawn(function()
	while c and c.Parent do
		if hum0 and hum0.Parent and hum1 and hum1.Parent then
            hum1.Jump = hum0.Jump
        end
		wait()
	end
	sg:SetCore("ResetButtonCallback", true)
end)

R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
if R15toR6 then
	local cf = nil
	pcall(function()
		cf = gp(c, "HumanoidRootPart", "BasePart").CFrame
	end)
	if cf then
		local R6parts = { 
			head = {
				Name = "Head",
				Size = Vector3.new(2, 1, 1),
				R15 = {
					Head = 0
				}
			},
			torso = {
				Name = "Torso",
				Size = Vector3.new(2, 2, 1),
				R15 = {
					UpperTorso = 0.2,
					LowerTorso = -0.8
				}
			},
			root = {
				Name = "HumanoidRootPart",
				Size = Vector3.new(2, 2, 1),
				R15 = {
					HumanoidRootPart = 0
				}
			},
			leftArm = {
				Name = "Left Arm",
				Size = Vector3.new(1, 2, 1),
				R15 = {
					LeftHand = -0.85,
					LeftLowerArm = -0.2,
					LeftUpperArm = 0.4
				}
			},
			rightArm = {
				Name = "Right Arm",
				Size = Vector3.new(1, 2, 1),
				R15 = {
					RightHand = -0.85,
					RightLowerArm = -0.2,
					RightUpperArm = 0.4
				}
			},
			leftLeg = {
				Name = "Left Leg",
				Size = Vector3.new(1, 2, 1),
				R15 = {
					LeftFoot = -0.85,
					LeftLowerLeg = -0.15,
					LeftUpperLeg = 0.6
				}
			},
			rightLeg = {
				Name = "Right Leg",
				Size = Vector3.new(1, 2, 1),
				R15 = {
					RightFoot = -0.85,
					RightLowerLeg = -0.15,
					RightUpperLeg = 0.6
				}
			}
		}
		for i, v in pairs(c:GetChildren()) do
			if v:IsA("BasePart") then
				for i1, v1 in pairs(v:GetChildren()) do
					if v1:IsA("Motor6D") then
						v1.Part0 = nil
					end
				end
			end
		end
		for i, v in pairs(R6parts) do
			local part = Instance.new("Part")
			part.Name = v.Name
			part.Size = v.Size
			part.CFrame = cf
			part.Anchored = false
			part.Transparency = 1
			part.CanCollide = false
			for i1, v1 in pairs(v.R15) do
				local R15part = gp(c, i1, "BasePart")
				if R15part then
					local weld = Instance.new("Weld", R15part)
					weld.Part0 = part
					weld.Part1 = R15part
					weld.C0 = CFrame.new(0, v1, 0)
					weld.C1 = CFrame.new(0, 0, 0)
					R15part.Massless = true
					R15part.Name = "R15_" .. i1
				    R15part.Parent = part
				end
			end
			part.Parent = c
			R6parts[i] = part
		end
		local R6joints = {
			neck = {
				Parent = R6parts.torso,
				Name = "Neck",
				Part0 = R6parts.torso,
				Part1 = R6parts.head,
				C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
				C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			},
			rootJoint = {
				Parent = R6parts.root,
				Name = "RootJoint" ,
				Part0 = R6parts.root,
				Part1 = R6parts.torso,
				C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
				C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			},
			rightShoulder = {
				Parent = R6parts.torso,
				Name = "Right Shoulder",
				Part0 = R6parts.torso,
				Part1 = R6parts.rightArm,
				C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
				C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			},
			leftShoulder = {
				Parent = R6parts.torso,
				Name = "Left Shoulder",
				Part0 = R6parts.torso,
				Part1 = R6parts.leftArm,
				C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
				C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			},
			rightHip = {
				Parent = R6parts.torso,
				Name = "Right Hip",
				Part0 = R6parts.torso,
				Part1 = R6parts.rightLeg,
				C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
				C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			},
			leftHip = {
				Parent = R6parts.torso,
				Name = "Left Hip" ,
				Part0 = R6parts.torso,
				Part1 = R6parts.leftLeg,
				C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
				C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			}
		}
		for i, v in pairs(R6joints) do
			local joint = Instance.new("Motor6D")
			for prop, val in pairs(v) do
				joint[prop] = val
			end
			R6joints[i] = joint
		end
		hum1.RigType = Enum.HumanoidRigType.R6
		hum1.HipHeight = 0
	end
end


	local LoadLibrary = game:GetObjects("rbxassetid://8299466510")[1]

	function Align(Part0, Part1, Position, Angle)
	if Part0:FindFirstChild("Attachment") then
		Part0:FindFirstChild("Attachment"):Remove()
	end
    local AlignPosition = Instance.new("AlignPosition",Part0)
    local AlignOrientation = Instance.new("AlignOrientation",Part0)
    
    local Attachment1 = Instance.new("Attachment", Part0)
    local Attachment2 = Instance.new("Attachment", Part1)

    AlignPosition.Attachment0 = Attachment1
    AlignPosition.Attachment1 = Attachment2
    
    AlignOrientation.Attachment0 = Attachment1
    AlignOrientation.Attachment1 = Attachment2
    
    Attachment2.Position = Position or Vector3.new(0,0,0)
    Attachment2.Orientation = Angle or Vector3.new(0,0,0)
    
    AlignOrientation.MaxTorque = math.huge
    AlignOrientation.MaxAngularVelocity = math.huge
    AlignOrientation.PrimaryAxisOnly = false 
    AlignOrientation.Responsiveness = 200
    AlignOrientation.RigidityEnabled = false
    AlignOrientation.ReactionTorqueEnabled = false
    AlignPosition.MaxForce = math.huge
    AlignPosition.MaxVelocity = math.huge
    AlignPosition.ReactionForceEnabled = false
    AlignPosition.Responsiveness = 200
    AlignPosition.ApplyAtCenterOfMass = true
    AlignPosition.RigidityEnabled = true
    game:GetService("RunService").Heartbeat:Connect(function()
        Part0.Velocity = Vector3.new(-29.99,0,0)
    end)
    if Part0.Parent:IsA("Accessory") then
    	Part0:BreakJoints()
    end
end


local function AlignHat(p1,p2,nomesh)
    pcall(function()
    p1:FindFirstChildOfClass("Weld"):Destroy()
    if nomesh then 
        p1:FindFirstChildOfClass("SpecialMesh"):Destroy()
    end
    end)
    --p1.AccessoryWeld:Destroy()
     A1 = Instance.new("Attachment", p1) 
     A2 = Instance.new("Attachment", p2)
     Mover = Instance.new("AlignPosition", p1)
     Mover.RigidityEnabled = false
    Mover.Attachment0 = A1
    Mover.Attachment1 = A2
    Mover.Responsiveness = 200
    Mover.MaxVelocity = math.huge
    Mover.MaxForce = math.huge
     Rotater = Instance.new("AlignOrientation", p1)
     Rotater.RigidityEnabled = false
    Rotater.Attachment0 = A1
    Rotater.Attachment1 = A2
    Rotater.Responsiveness = 200
    Rotater.MaxAngularVelocity = math.huge
    Rotater.MaxTorque = math.huge
end

local function RandomString()
	return game:GetService("HttpService"):GenerateGUID(false)
end
local stopeverything = false
local HipVal = 3
KEYHOLD = false
s = script
Script = script
SCRIPT = script
scrpt = script
Scrpt = script
SCRPT = script
IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
SQRT = math.sqrt
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor
HUGE = math.huge
radian = math.rad
random = math.random
Vec3 = Vector3.new
Inst = Instance.new
cFrame = CFrame.new
Euler = CFrame.fromEulerAnglesXYZ
vt = Vector3.new
bc = BrickColor.new
br = BrickColor.random
it = Instance.new
angles = CFrame.Angles
Cf = CFrame.new
Cos = math.cos
Sin = math.sin
Abs = math.abs
Rad = math.rad

local lplr = game:GetService("Players").LocalPlayer
local Player = lplr
local PLAYER = Player
local sine = 0
local NeckSnap = false
local USERNAME = lplr.Name
local Player = game:GetService("Players").LocalPlayer
local USERID = lplr.UserId
local taunt = {Value = "None"}
local songid = {Value = "rbxassetid://6174456295"}
local attack = false
local walkspeed = 50
local TauntRemote = {}
local SongSync = {Value = 0}
local ISFLYING = false
local antivoid = nil
local shade = Color3.fromRGB(0,0,0)

local Character = game.Players.LocalPlayer.Character
local Mouse,mouse,MOUSE,m,M = lplr:GetMouse(),lplr:GetMouse(),lplr:GetMouse(),lplr:GetMouse(),lplr:GetMouse()

local S = 1
local eeeblock = Instance.new("Part")
local Humanoid = Character.Humanoid
Humanoid.Animator:Destroy()
Humanoid.HipHeight = HipVal
local LeftArm = Character["Left Arm"]
local RightArm = Character["Right Arm"]
local LeftLeg = Character["Left Leg"]
local RightLeg = Character["Right Leg"]
local Head = Character.Head
local Torso = Character.Torso
local RootPart = Character.HumanoidRootPart
local RootJoint = RootPart.RootJoint
local Neck = Torso["Neck"]
local RightShoulder = Torso["Right Shoulder"]
local LeftShoulder = Torso["Left Shoulder"]
local RightHip = Torso["Right Hip"]
local LeftHip = Torso["Left Hip"]
local Effects = nil
local Eyes = nil
local Replica = game:GetObjects("rbxassetid://7921736307")[1]
local GUN = Replica.MegaGunnModel

GUN.Parent = Character
local GunJoint = GUN.Joint.Weld
GUN.Joint.Weld.Part0 = RightArm


	Railgun = workspace[game.Players.LocalPlayer.Name]["Starslayer Railgun"].Handle
	AlignHat(Railgun,GUN.Joint,false)
Railgun.Attachment.CFrame = CFrame.new(-1, -0, -0, -4.37113989e-08, 0.642787635, -0.766044438, 0, 0.766044438, 0.642787635, 1, 2.80971459e-08, -3.34848735e-08)
local Hole = GUN.Hole
local Holetwo = GUN.Hole2
local shade = Character["Torso"].Color
local alreadyfixing = false
local Effects = Instance.new("Folder")
Effects.Parent = Character
local eeeblock = Instance.new("Part")
eeeblock.Name = "yes"
eeeblock.CanCollide = false
eeeblock.Transparency = 1
eeeblock.CFrame = Torso.CFrame
eeeblock.Parent = Character
local eee = Instance.new("Sound",eeeblock)
eee.Volume = 1
eee.Pitch = 1
eee.SoundId = songid.Value
eee:Play()
eee.Name = "yes"
eee.Looped = true
eee.TimePosition = SongSync.Value
eee.DescendantAdded:Connect(function(v)
	if stopeverything then wait(math.huge) end
	if v:IsA("SoundEffect") then
		v.Enabled = false
		v:GetPropertyChangedSignal("Enabled"):Connect(function()
			if stopeverything then wait(math.huge) end
			if v.Enabled ~= false then
				v.Enabled = false
			end
		end)
	end
	game:GetService("Debris"):AddItem(v,.01)
end)
function TauntRemote:FireServer(Name, ID)
	taunt.Value = Name
	if songid.Value ~= "rbxassetid://"..ID then
		songid.Value = "rbxassetid://"..ID
		SongSync.Value = 0
		eee.Volume = 1
		eee.Pitch = 1
		eee.SoundId = songid.Value
		eee.TimePosition = SongSync.Value
	end
end


function chatfunc(textt,glitchy)
	local text = string.gsub(textt,"​","")
	local chat = coroutine.wrap(function()
		local oldthing = eeeblock:FindFirstChild("TalkingBillBoard")
		if oldthing then
			oldthing:Destroy()
		end
		local sayingstuff = Instance.new("BillboardGui",eeeblock)
		sayingstuff.Size = UDim2.new(0,9999,2,0)
		sayingstuff.StudsOffset = Vector3.new(0,5,0)
		sayingstuff.Adornee = eeeblock
		sayingstuff.Name = "TalkingBillBoard"
		local sayingstuff2 = Instance.new("TextLabel",sayingstuff)
		sayingstuff2.BackgroundTransparency = 1
		sayingstuff2.BorderSizePixel = 0
		sayingstuff2.Text = ""
		sayingstuff2.Font = "Arcade"
		sayingstuff2.TextScaled = true
		sayingstuff2.TextStrokeTransparency = 0
		coroutine.resume(coroutine.create(function()
			while not stopeverything and sayingstuff2:IsDescendantOf(game) do
				local hBRUH,sBRUH,vBRUH = Color3.toHSV(GUN.NeonParts.Color)
				sayingstuff2.TextColor3 = Color3.fromHSV(hBRUH,sBRUH,vBRUH/2)
				swait()
			end
		end))
		sayingstuff2.TextStrokeColor3 = shade
		sayingstuff2.Size = UDim2.new(1,0,1,0)
		local sayingstuff3 = Instance.new("TextLabel",sayingstuff)
		sayingstuff3.BackgroundTransparency = 1
		sayingstuff3.BorderSizePixel = 0
		sayingstuff3.Text = ""
		sayingstuff3.Font = "Arcade"
		sayingstuff3.TextScaled = true
		sayingstuff3.TextStrokeTransparency = 0
		coroutine.resume(coroutine.create(function()
			while not stopeverything and sayingstuff3:IsDescendantOf(game) do
				sayingstuff3.TextColor3 = GUN.NeonParts.Color
				swait()
			end
		end))
		sayingstuff3.TextStrokeColor3 = shade
		sayingstuff3.Size = UDim2.new(1,0,1,0)
		coroutine.resume(coroutine.create(function()
			while not stopeverything and sayingstuff ~= nil do
				swait()
				if glitchy then
					local fonts = {"Antique","Arcade","Arial","ArialBold","Bodoni","Cartoon","Code","Fantasy","Garamond","Gotham","GothamBlack","GothamBold","GothamSemibold","Highway","SciFi","SourceSans","SourceSansBold","SourceSansItalic","SourceSansLight","SourceSansSemibold"}
					local randomfont = fonts[math.random(1,#fonts)]
					sayingstuff2.Font = randomfont
					sayingstuff3.Font = randomfont
				end
				sayingstuff2.Position = UDim2.new(0,math.random(-3,3),0,math.random(-3,3)) 
				sayingstuff3.Position = UDim2.new(0,math.random(-3,3),0,math.random(-3,3)) 
				sayingstuff3.Rotation = math.random(-1,1)	
				sayingstuff2.Rotation = math.random(-1,1)
			end
		end))
		for i = 1,string.len(text) do
			swait(2)
			sayingstuff2.Text = string.sub(text,1,i)
			sayingstuff3.Text = string.sub(text,1,i)
		end
		swait(120)
		for i = 1,50 do
			swait()
			sayingstuff2.TextStrokeTransparency = i/50
			sayingstuff2.TextTransparency = sayingstuff2.TextStrokeTransparency
			sayingstuff3.TextStrokeTransparency = sayingstuff2.TextStrokeTransparency
			sayingstuff3.TextTransparency = sayingstuff2.TextStrokeTransparency
		end
		sayingstuff:Destroy()
	end)
	chat()
end

function onChatted(msg)
	chatfunc(msg)
end
Player.Chatted:connect(onChatted)

local ROOTC0 = CFrame.new(0,0,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))
local NECKC0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))
local RIGHTSHOULDERC0 = CFrame.new(-0.5,0,0) * CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))
local LEFTSHOULDERC0 = CFrame.new(0.5,0,0) * CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))
local BG = nil
local BV = nil
local soundfixing = false
local fixinggui = false
local gui = nil
local exitbutton = nil
local restartingscript = false
local TS = game:GetService("TweenService")
local PS = game:GetService("PhysicsService")
local Anim = "Idle"
local attacktype = 1
local delays = false
local play = true
local Torsovelocity = (RootPart.Velocity * Vector3.new(1,0,1)).Magnitude 
local doe = 0
Humanoid.WalkSpeed = walkspeed
local rc0 = CFrame.new() * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))
local nc0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))
local rscp = CFrame.new(-.5,0,0) * CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))
local lscp = CFrame.new(.5,0,0) * CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))
function QFCF(cf)
	local mx,my,mz,m00,m01,m02,m10,m11,m12,m20,m21,m22 = cf:components()
	local trace = m00 + m11 + m22
	if trace > 0 then 
		local s = math.sqrt(1 + trace)
		local recip = 0.5/s
		return (m21 - m12) * recip,(m02 - m20) * recip,(m10 - m01) * recip,s * 0.5
	else
		local i = 0
		if m11 > m00 then
			i = 1
		end
		if m22 > (i == 0 and m00 or m11) then
			i = 2
		end
		if i == 0 then
			local s = math.sqrt(m00 - m11 - m22 + 1)
			local recip = 0.5/s
			return 0.5 * s,(m10 + m01) * recip,(m20 + m02) * recip,(m21 - m12) * recip
		elseif i == 1 then
			local s = math.sqrt(m11 - m22 - m00 + 1)
			local recip = 0.5/s
			return (m01 + m10) * recip,0.5 * s,(m21 + m12) * recip,(m02 - m20) * recip
		elseif i == 2 then
			local s = math.sqrt(m22 - m00 - m11 + 1)
			local recip = 0.5/s return (m02 + m20) * recip,(m12 + m21) * recip,0.5 * s,(m10 - m01) * recip
		end
	end
end

function QTCF(px,py,pz,x,y,z,w)
	local xs,ys,zs = x + x,y + y,z + z
	local wx,wy,wz = w * xs,w * ys,w * zs
	local xx = x * xs
	local xy = x * ys
	local xz = x * zs
	local yy = y * ys
	local yz = y * zs
	local zz = z * zs
	return CFrame.new(px,py,pz,1 - (yy + zz),xy - wz,xz + wy,xy + wz,1 - (xx + zz),yz - wx,xz - wy,yz + wx,1 - (xx + yy))
end
function QS(a,b,t)
	local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
	local startInterp,finishInterp;
	if cosTheta >= 0.0001 then
		if (1 - cosTheta) > 0.0001 then
			local theta = math.acos(cosTheta)
			local invSinTheta = 1/math.sin(theta)
			startInterp = math.sin((1 - t) * theta) * invSinTheta
			finishInterp = math.sin(t * theta) * invSinTheta
		else
			startInterp = 1 - t
			finishInterp = t
		end
	else
		if (1 + cosTheta) > 0.0001 then
			local theta = math.acos(-cosTheta)
			local invSinTheta = 1/math.sin(theta)
			startInterp = math.sin((t - 1) * theta) * invSinTheta
			finishInterp = math.sin(t * theta) * invSinTheta
		else
			startInterp = t - 1
			finishInterp = t
		end
	end
	return a[1] * startInterp + b[1] * finishInterp,a[2] * startInterp + b[2] * finishInterp,a[3] * startInterp + b[3] * finishInterp,a[4] * startInterp + b[4] * finishInterp
end

function Clerp(a,b,t)
	local qa = {QFCF(a)}
	local qb = {QFCF(b)}
	local ax,ay,az = a.x,a.y,a.z
	local bx,by,bz = b.x,b.y,b.z
	local _t = 1 - t
	return QTCF(_t * ax + t * bx,_t * ay + t * by,_t * az + t * bz,QS(qa,qb,t))
end


ArtificialHB = Instance.new("BindableEvent",script)
ArtificialHB.Name = "Heartbeat"

script:WaitForChild("Heartbeat")

frame = 1 / 60
tf = 0
allowframeloss = false
tossremainder = false
lastframe = tick()
script.Heartbeat:Fire()

game:GetService("RunService").Heartbeat:Connect(function(s,p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			script.Heartbeat:Fire()
			lastframe = tick()
		else
			for i = 1,math.floor(tf / frame) do
				script.Heartbeat:Fire()
			end
			lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)

function swait(num)
	if num == 0 or num == nil then
		ArtificialHB.Event:Wait()
	else
		for i = 0,num do
			ArtificialHB.Event:Wait()
		end
	end
end
function Swait(num)
	if num == 0 or num == nil then
		ArtificialHB.Event:Wait()
	else
		for i = 0,num do
			ArtificialHB.Event:Wait()
		end
	end
end

SWAIT = Swait


function mdmg(pos, range) end
if true then --added so it doesnt change other variables from the script in case i used same names
    local hrp = gp(c, "HumanoidRootPart", "BasePart") -- "gp" is the function i used in my reanimate i hope its not changed
    local hrp1 = gp(model, "HumanoidRootPart", "BasePart")
    local att0 = gp(hrp, "att1_HumanoidRootPart", "Attachment")
	or gp(gp(hrp, "R15_HumanoidRootPart", "BasePart"), "att1_HumanoidRootPart", "Attachment")
    if hrp and hrp1 and att0 then
        hrp1.Transparency = 0.5
        local flingpart = Instance.new("Part", workspace)
        flingpart.Anchored = true
        flingpart.Transparency = 1
        flingpart.CanCollide = false
        flingpart.Size = Vector3.new(0.1, 0.1, 0.1)
        flingpart.Name = "flingpart"
        for i, v in pairs(hrp1:GetDescendants()) do
            if v and v.Parent and v:IsA("AlignOrientation") then
                v.Enabled = false
            end
        end
        local flingpos = false
        spawn(function()
            while stepped:Wait() and hrp and hrp.Parent and att0 and att0.Parent and hrp1 and hrp1.Parent and flingpart and flingpart.Parent do
                hrp1.RotVelocity = FLINGROT
                if flingpos then
                    att0.Parent = flingpart
                    flingpart.Position = flingpos
                else
                    att0.Parent = hrp
                end
            end
        end)
        mdmg = function(position, range)
            print("mdmg")
            for i, v in pairs(workspace:GetDescendants()) do
                if v and v.Parent and v:IsA("Model") and v:FindFirstChildOfClass("Humanoid") and (not v:IsDescendantOf(c)) then
                    local parts = v:GetChildren()
                    for i1, v1 in pairs(parts) do
                        if v1 and v1.Parent and v1:IsA("BasePart") then
                            if (position - v1.Position).Magnitude < range then
                                local flingpos1 = v1.Position
                                flingpos = flingpos1
                                spawn(function()
                                    while stepped:Wait() and (flingpos == flingpos1) do
                                        if v1 and v1.Parent then
                                            flingpos1 = v1.Position
                                            flingpos = flingpos1
                                        end
                                    end
                                end)
                                spawn(function()
                                    wait(1)
                                    if flingpos == flingpos1 then
                                        flingpos = false
                                    end
                                end)
                            end
                        end
                    end
                end
            end
        end
    else
        print("failed to make fling damage")
    end
end

function CreateConnection(TYPE,PARENT,PART0,PART1,C0,C1)
	if stopeverything then wait(math.huge) end
	local NEWWELD = Instance.new(TYPE)
	NEWWELD.Part0 = PART0
	NEWWELD.Part1 = PART1
	NEWWELD.C0 = C0
	NEWWELD.C1 = C1
	NEWWELD.Parent = PARENT
	return NEWWELD
end	

function CreateMesh(MESH,PARENT,MESHTYPE,MESHID,TEXTUREID,SCALE,OFFSET)
	local NEWMESH = Instance.new(MESH)
	if MESH == "SpecialMesh" then
		NEWMESH.MeshType = MESHTYPE
		if MESHID ~= "nil" and MESHID ~= "" and tonumber(MESHID) ~= nil then
			NEWMESH.MeshId = "rbxassetid://"..MESHID
		elseif MESHID ~= "nil" and MESHID ~= "" then
			NEWMESH.MeshId = MESHID
		end
		if TEXTUREID ~= "nil" and TEXTUREID ~= "" then
			NEWMESH.TextureId = "rbxassetid://"..TEXTUREID
		end
	end
	NEWMESH.Offset = OFFSET or Vector3.new()
	NEWMESH.Scale = SCALE
	NEWMESH.Parent = PARENT
	return NEWMESH
end

function CreatePart(FORMFACTOR,PARENT,MATERIAL,REFLECTANCE,TRANSPARENCY,BRICKCOLOR,NAME,SIZE,ANCHOR)
	local NEWPART = Instance.new("Part")
	NEWPART.Massless = true
	NEWPART.formFactor = FORMFACTOR
	NEWPART.Reflectance = REFLECTANCE
	NEWPART.Transparency = TRANSPARENCY
	NEWPART.CanCollide = false
	NEWPART.Locked = true
	NEWPART.Anchored = true
	if ANCHOR == false then
		NEWPART.Anchored = false
	end
	NEWPART.Color = BRICKCOLOR
	NEWPART.Name =  RandomString()

	NEWPART.Size = SIZE
	NEWPART.Position = Torso.Position
	NEWPART.Material = MATERIAL
	NEWPART:BreakJoints()
	NEWPART.Parent = PARENT
	return NEWPART
end

local S = Instance.new("Sound")
function CreateSound(ID,PARENT,VOLUME,PITCH,DOESLOOP)
	local NEWSOUND = nil
	coroutine.resume(coroutine.create(function()
		NEWSOUND = S:Clone()
		NEWSOUND.Parent = PARENT
		NEWSOUND.Volume = VOLUME
		NEWSOUND.Pitch = PITCH
		NEWSOUND.SoundId = "rbxassetid://"..ID
		NEWSOUND:play()
		if DOESLOOP == true then
			NEWSOUND.Looped = true
		else
			coroutine.resume(coroutine.create(function()
				pcall(function()
					repeat if stopeverything then wait(math.huge) end Swait() until NEWSOUND.Playing == false
					NEWSOUND:Destroy()
				end)
			end))
		end
	end))
	return NEWSOUND
end

local function weldBetween(a,b)
	local weldd = Instance.new("Weld")
	weldd.Part0 = a
	weldd.Part1 = b
	weldd.C1 = b.CFrame:inverse() * a.CFrame
	weldd.Parent = b
	return weldd
end
function rayCast(Position,Direction,Range,Ignore)
	return workspace:FindPartOnRay(Ray.new(Position,Direction.unit * (Range or 999.999)),Ignore) 
end 		


function Effect(Table)
	local TYPE = (Table.EffectType or "Sphere")
	local SIZE = (Table.Size or Vector3.new(1,1,1))
	local ENDSIZE = (Table.Size2 or Vector3.new())
	local TRANSPARENCY = (Table.Transparency or 0)
	local ENDTRANSPARENCY = (Table.Transparency2 or 1)
	local CFRAME = (Table.CFrame or Torso.CFrame)
	local MOVEDIRECTION = (Table.MoveToPos or nil)
	local ROTATION1 = (Table.RotationX or 0)
	local ROTATION2 = (Table.RotationY or 0)
	local ROTATION3 = (Table.RotationZ or 0)
	local MATERIAL = (Table.Material or "Neon")
	local COLOR = (Table.Color or shade)
	local hOK,sOK,vOK = Color3.toHSV(COLOR)
	local RAINBOWPART = false
	if sOK > .1 then
		RAINBOWPART = true
	end
	local TIME = (Table.Time or 45)
	local SOUNDID = (Table.SoundID or nil)
	local SOUNDPITCH = (Table.SoundPitch or nil)
	local SOUNDVOLUME = (Table.SoundVolume or nil)
	local USEBOOMERANGMATH = (Table.UseBoomerangMath or false)
	local BOOMERANG = (Table.Boomerang or 0)
	local SIZEBOOMERANG = (Table.SizeBoomerang or 0)
	coroutine.resume(coroutine.create(function()
		local PLAYSSOUND = false
		local SOUND = nil
		local EFFECT = CreatePart(3,Effects,MATERIAL,0,TRANSPARENCY,shade,"Effect",Vector3.new(1,1,1),true)
		if RAINBOWPART then
			coroutine.resume(coroutine.create(function()
				while not stopeverything and EFFECT:IsDescendantOf(game) do
					EFFECT.Color = GUN.NeonParts.Color
					swait()
				end
			end))
		end
		if SOUNDID ~= nil and SOUNDPITCH ~= nil and SOUNDVOLUME ~= nil then
			PLAYSSOUND = true
			SOUND = CreateSound(SOUNDID,EFFECT,SOUNDVOLUME,SOUNDPITCH,false)
		end
		EFFECT.Color = COLOR
		local MSH = nil
		if TYPE == "Sphere" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"Sphere","","",SIZE,Vector3.new())
		elseif TYPE == "Block" or TYPE == "Box" then
			MSH = Instance.new("BlockMesh",EFFECT)
			MSH.Scale = SIZE
		elseif TYPE == "Wave" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","20329976","",SIZE,Vector3.new(0,0,-SIZE.X/8))
		elseif TYPE == "Ring" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","559831844","",Vector3.new(SIZE.X,SIZE.X,0.1),Vector3.new())
		elseif TYPE == "Slash" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","662586858","",Vector3.new(SIZE.X/10,0,SIZE.X/10),Vector3.new())
		elseif TYPE == "Round Slash" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","662585058","",Vector3.new(SIZE.X/10,0,SIZE.X/10),Vector3.new())
		elseif TYPE == "Swirl" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","168892432","",SIZE,Vector3.new())
		elseif TYPE == "Skull" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","4770583","",SIZE,Vector3.new())
		elseif TYPE == "Crystal" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","9756362","",SIZE,Vector3.new())
		end
		if MSH ~= nil then
			local BOOMR1 = 1+BOOMERANG/50
			local BOOMR2 = 1+SIZEBOOMERANG/50
			local MOVESPEED = nil
			if MOVEDIRECTION ~= nil then
				if USEBOOMERANGMATH == true then
					MOVESPEED = ((CFRAME.p - MOVEDIRECTION).Magnitude/TIME)*BOOMR1
				else
					MOVESPEED = ((CFRAME.p - MOVEDIRECTION).Magnitude/TIME)
				end
			end
			local GROWTH = nil
			if USEBOOMERANGMATH == true then
				GROWTH = (SIZE - ENDSIZE)*(BOOMR2+1)
			else
				GROWTH = (SIZE - ENDSIZE)
			end
			local TRANS = TRANSPARENCY - ENDTRANSPARENCY
			if TYPE == "Block" then
				EFFECT.CFrame = CFRAME*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360)))
			else
				EFFECT.CFrame = CFRAME
			end
			if USEBOOMERANGMATH == true then
				for LOOP = 1,TIME+1 do
					swait()
					MSH.Scale = MSH.Scale - (Vector3.new((GROWTH.X)*((1 - (LOOP/TIME)*BOOMR2)),(GROWTH.Y)*((1 - (LOOP/TIME)*BOOMR2)),(GROWTH.Z)*((1 - (LOOP/TIME)*BOOMR2)))*BOOMR2)/TIME
					if TYPE == "Wave" then
						MSH.Offset = Vector3.new(0,0,-MSH.Scale.Z/8)
					end
					EFFECT.Transparency = EFFECT.Transparency - TRANS/TIME
					if TYPE == "Block" then
						EFFECT.CFrame = CFRAME*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360)))
					else
						EFFECT.CFrame = EFFECT.CFrame*CFrame.Angles(math.rad(ROTATION1),math.rad(ROTATION2),math.rad(ROTATION3))
					end
					if MOVEDIRECTION ~= nil then
						local ORI = EFFECT.Orientation
						EFFECT.CFrame = CFrame.new(EFFECT.Position,MOVEDIRECTION)*CFrame.new(0,0,-(MOVESPEED)*((1 - (LOOP/TIME)*BOOMR1)))
						EFFECT.Orientation = ORI
					end
				end
			else
				for LOOP = 1,TIME+1 do
					swait()
					MSH.Scale = MSH.Scale - GROWTH/TIME
					if TYPE == "Wave" then
						MSH.Offset = Vector3.new(0,0,-MSH.Scale.Z/8)
					end
					EFFECT.Transparency = EFFECT.Transparency - TRANS/TIME
					if TYPE == "Block" then
						EFFECT.CFrame = CFRAME*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360)))
					else
						EFFECT.CFrame = EFFECT.CFrame*CFrame.Angles(math.rad(ROTATION1),math.rad(ROTATION2),math.rad(ROTATION3))
					end
					if MOVEDIRECTION ~= nil then
						local ORI = EFFECT.Orientation
						EFFECT.CFrame = CFrame.new(EFFECT.Position,MOVEDIRECTION)*CFrame.new(0,0,-MOVESPEED)
						EFFECT.Orientation = ORI
					end
				end
			end
			EFFECT.Transparency = 1
			if PLAYSSOUND == false then
				EFFECT:Destroy()
			else
				repeat if stopeverything then wait(math.huge) end swait() until EFFECT:FindFirstChildOfClass("Sound") == nil
				EFFECT:Destroy()
			end
		else
			if PLAYSSOUND == false then
				EFFECT:Destroy()
			else
				repeat if stopeverything then wait(math.huge) end swait() until EFFECT:FindFirstChildOfClass("Sound") == nil
				EFFECT:Destroy()
			end
		end
	end))
end

if _G.Night == Bool then
HUGE = math.huge
local lit = game:GetService("Lighting")
function checksky(v)
	if v:IsA("BloomEffect") then
		return
	end
	if v:IsA("PostEffect") or v:IsA("Sky") or v:IsA("Atmosphere") then
		game:GetService("Debris"):AddItem(v,.01)
	end
end
for i,v in pairs(lit:GetDescendants()) do
	checksky(v)
end
lit.DescendantAdded:Connect(function(v)
	if stopeverything then wait(HUGE) end
	checksky(v)
end)
Bloom = Instance.new("BloomEffect",game:GetService("Lighting"))
VISUALS = game:GetService("Lighting")
VISUALSSz = game:GetService("Lighting")
local bswcrlightingeffect = Instance.new("BoolValue")
bswcrlightingeffect.Name = "BSWCRLightingEffect"
bswcrlightingeffect.Value = false

pcall(function()
	VISUALS.ClockTime = 6
	Bloom.Intensity = 0 + sick.PlaybackLoudness/500
	VISUALSSz.ExposureCompensation = math.clamp((0 + sick.PlaybackLoudness/125),0,5)
	VISUALSSz.FogEnd = math.clamp(sick.PlaybackLoudness,50,1000)
	VISUALSSz.Brightness = 0
	VISUALS.EnvironmentDiffuseScale = 0 + sick.PlaybackLoudness/100
	if dienerd ~= true then
		lit.Ambient = Color3.new(1,1,1)
		lit.Brightness = 1
		lit.ColorShift_Bottom = Color3.new()
		lit.ColorShift_Top = Color3.new()
		lit.EnvironmentDiffuseScale = 0
		lit.EnvironmentSpecularScale = 0
		lit.GlobalShadows = true
		lit.OutdoorAmbient = Color3.new(.5,.5,.5)
		lit.ClockTime = 6
		lit.GeographicLatitude = 41.733
		lit.ExposureCompensation = 0
		lit.FogColor = Color3.fromRGB(192,192,192)
		lit.FogEnd = 100000
	end
end)
end



function EFFECT1(bonuspeed,FastSpeed,type,pos,x1,y1,z1,value,color,outerpos)
	local type = type
	local rng = Instance.new("Part",Effects)
	rng.Anchored = true
	rng.Color = GUN.NeonParts.Color
	rng.CanCollide = false
	rng.FormFactor = 3
	rng.Name = "Ring"
	rng.Material = "Neon"
	rng.Size = Vector3.new(1,1,1)
	rng.Transparency = 0
	rng.TopSurface = 0
	rng.BottomSurface = 0
	rng.CFrame = pos
	rng.CFrame = rng.CFrame + rng.CFrame.lookVector*outerpos
	local rngm = Instance.new("SpecialMesh",rng)
	rngm.MeshType = "Brick"
	rngm.Scale = Vector3.new(x1,y1,z1)
	local scaler2 = 1
	local speeder = FastSpeed/10
	if type == "Add" then
		scaler2 = 1*value
	elseif type == "Divide" then
		scaler2 = 1/value
	end
	coroutine.resume(coroutine.create(function()
		for i = 0,10/bonuspeed,.1 do
			swait()
			if type == "Add" then
				scaler2 = scaler2 - .01*value/bonuspeed
			elseif type == "Divide" then
				scaler2 = scaler2 - .01/value*bonuspeed
			end
			rng.Color = GUN.NeonParts.Color
			speeder = speeder - .01*FastSpeed*bonuspeed/10
			rng.CFrame = rng.CFrame + rng.CFrame.lookVector*speeder*bonuspeed
			rng.Transparency = rng.Transparency + .01*bonuspeed
			rngm.Scale = rngm.Scale - Vector3.new(scaler2*bonuspeed,scaler2*bonuspeed,scaler2*bonuspeed)
		end
		rng:Destroy()
	end))
end



function Lightning(Part0,Part1,Timess,Offset,Color,Timer,sSize,eSize,Trans,Boomer,sBoomer,Trans2)
  local magz = (Part0 - Part1).Magnitude
	local Times = math.floor(math.clamp(magz/10,1,20))
  local curpos = Part0
  local trz = {
    -Offset,
    Offset
  }
  for i = 1,Times do
    local li = Instance.new("Part",Effects)
    li.Name = RandomString()
    li.TopSurface = 0
    li.Material = "Neon"
    li.BottomSurface = 0
    li.Anchored = true
    li.Locked = true
    li.Transparency = 0
    li.Color = Color
    li.formFactor = "Custom"
    li.CanCollide = false
    li.Size = Vector3.new(0.1,0.1,magz/Times)
    local Offzet = Vector3.new(trz[math.random(1,2)],trz[math.random(1,2)],trz[math.random(1,2)])
    local trolpos = CFrame.new(curpos,Part1) * CFrame.new(0,0,magz/Times).p + Offzet
    if Times == i then
      local magz2 = (curpos - Part1).Magnitude
      li.Size = Vector3.new(0.1,0.1,magz2)
      li.CFrame = CFrame.new(curpos,Part1) * CFrame.new(0,0,-magz2/2)
    else
      li.CFrame = CFrame.new(curpos,trolpos) * CFrame.new(0,0,magz/Times/2)
    end
    curpos = li.CFrame * CFrame.new(0,0,magz/Times/2).p
    li:Destroy()
	Effect({Time = Timer,EffectType = "Box",Size = Vector3.new(sSize,sSize,li.Size.Z),Size2 = Vector3.new(eSize,eSize,li.Size.Z),Transparency = Trans,Transparency2 = Trans2 or 1,CFrame = li.CFrame,MoveToPos = nil,RotationX = nil,RotationY = nil,RotationZ = nil,Material = "Neon",Color = li.Color,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = Boomer,Boomerang = 0,SizeBoomerang = sBoomer})
  end
end

function FireArc(Part,ToLocation,AmountOfTime,Height,DoesCourontine)
    if DoesCourontine == false then
        local Direction = CFrame.new(Part.Position,ToLocation)
        local Distance = (Part.Position - ToLocation).Magnitude
        for i = 1,AmountOfTime do
            swait()
            Part.CFrame = Direction*CFrame.new(0,(AmountOfTime/200)+((AmountOfTime/Height)-((i*2)/Height)),-Distance/AmountOfTime)
            Direction = Part.CFrame
        end
    elseif DoesCourontine == true then
        coroutine.resume(coroutine.create(function()
            local Direction = CFrame.new(Part.Position,ToLocation)
            local Distance = (Part.Position - ToLocation).Magnitude
            for i = 1,AmountOfTime do
                swait()
                Part.CFrame = Direction*CFrame.new(0,(AmountOfTime/200)+((AmountOfTime/Height)-((i*2)/Height)),-Distance/AmountOfTime)
                Direction = Part.CFrame
            end
        end))
    end
end

function MakeForm(PART,TYPE)
	if TYPE == "Cyl" then
		local MSH = Instance.new("CylinderMesh",PART)
	elseif TYPE == "Ball" then
		local MSH = Instance.new("SpecialMesh",PART)
		MSH.MeshType = "Sphere"
	elseif TYPE == "Wedge" then
		local MSH = Instance.new("SpecialMesh",PART)
		MSH.MeshType = "Wedge"
	end
end
function MakeForm(PART,TYPE)
	if TYPE == "Cyl" then
		local MSH = Instance.new("CylinderMesh",PART)
	elseif TYPE == "Ball" then
		local MSH = Instance.new("SpecialMesh",PART)
		MSH.MeshType = "Sphere"
	elseif TYPE == "Wedge" then
		local MSH = Instance.new("SpecialMesh",PART)
		MSH.MeshType = "Wedge"
	end
end

function AttackGyro()
	local GYRO = Instance.new("BodyGyro",RootPart)
	GYRO.D = 25
	GYRO.P = 20000
	GYRO.MaxTorque = Vector3.new(0,4000000,0)
	GYRO.CFrame = CFrame.new(RootPart.Position,Mouse.Hit.p)
	coroutine.resume(coroutine.create(function()
		repeat if stopeverything then wait(math.huge) end
			swait()
			GYRO.CFrame = CFrame.new(RootPart.Position,Mouse.Hit.p)
		until attack == false
		GYRO:Destroy()
	end))
end

function WACKYEFFECT(Table)
	local TYPE = (Table.EffectType or "Sphere")
	local SIZE = (Table.Size or Vector3.new(1,1,1))
	local ENDSIZE = (Table.Size2 or Vector3.new(0,0,0))
	local TRANSPARENCY = (Table.Transparency or 0)
	local ENDTRANSPARENCY = (Table.Transparency2 or 1)
	local CFRAME = (Table.CFrame or Torso.CFrame)
	local MOVEDIRECTION = (Table.MoveToPos or nil)
	local ROTATION1 = (Table.RotationX or 0)
	local ROTATION2 = (Table.RotationY or 0)
	local ROTATION3 = (Table.RotationZ or 0)
	local MATERIAL = (Table.Material or "Neon")
	local COLOR = (Table.Color or shade)
	local hOK,sOK,vOK = Color3.toHSV(COLOR)
	local RAINBOWPART = false
	if sOK > .1 then
		RAINBOWPART = true
	end
	local TIME = (Table.Time or 45)
	local SOUNDID = (Table.SoundID or nil)
	local SOUNDPITCH = (Table.SoundPitch or nil)
	local SOUNDVOLUME = (Table.SoundVolume or nil)
	coroutine.resume(coroutine.create(function()
		local PLAYSSOUND = false
		local SOUND = nil
		local EFFECT = CreatePart(3,Effects,MATERIAL,0,TRANSPARENCY,shade,"Effect",Vector3.new(1,1,1),true)
		if SOUNDID ~= nil and SOUNDPITCH ~= nil and SOUNDVOLUME ~= nil then
			PLAYSSOUND = true
			SOUND = CreateSound(SOUNDID,EFFECT,SOUNDVOLUME,SOUNDPITCH,false)
		end
		EFFECT.Color = COLOR
		if RAINBOWPART then
			coroutine.resume(coroutine.create(function()
				while not stopeverything and EFFECT:IsDescendantOf(game) do
					EFFECT.Color = GUN.NeonParts.Color
					swait()
				end
			end))
		end
		local MSH = nil
		if TYPE == "Sphere" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"Sphere","","",SIZE,Vector3.new(0,0,0))
		elseif TYPE == "Block" then
			MSH = Instance.new("BlockMesh",EFFECT)
			MSH.Scale = Vector3.new(SIZE.X,SIZE.Y,SIZE.Z)
		elseif TYPE == "Wave" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","20329976","",SIZE,Vector3.new(0,0,-SIZE.X/8))
		elseif TYPE == "Ring" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","559831844","",Vector3.new(SIZE.X,SIZE.X,0.1),Vector3.new(0,0,0))
		elseif TYPE == "Slash" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","662586858","",Vector3.new(SIZE.X/10,0,SIZE.X/10),Vector3.new(0,0,0))
		elseif TYPE == "Round Slash" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","662585058","",Vector3.new(SIZE.X/10,0,SIZE.X/10),Vector3.new(0,0,0))
		elseif TYPE == "Swirl" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","1051557","",SIZE,Vector3.new(0,0,0))
		elseif TYPE == "Skull" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","4770583","",SIZE,Vector3.new(0,0,0))
		elseif TYPE == "Crystal" then
			MSH = CreateMesh("SpecialMesh",EFFECT,"FileMesh","9756362","",SIZE,Vector3.new(0,0,0))
		end
		if MSH ~= nil then
			local MOVESPEED = nil
			if MOVEDIRECTION ~= nil then
				MOVESPEED = (CFRAME.p - MOVEDIRECTION).Magnitude/TIME
			end
			local GROWTH = SIZE - ENDSIZE
			local TRANS = TRANSPARENCY - ENDTRANSPARENCY
			EFFECT.CFrame = CFRAME
			for LOOP = 1,TIME+1 do
				swait()
				MSH.Scale = MSH.Scale - GROWTH/TIME
				if TYPE == "Wave" then
					MSH.Offset = Vector3.new(0,0,-MSH.Scale.X/8)
				end
				EFFECT.Transparency = EFFECT.Transparency - TRANS/TIME
				EFFECT.CFrame = EFFECT.CFrame*CFrame.Angles(math.rad(ROTATION1),math.rad(ROTATION2),math.rad(ROTATION3))
				if MOVEDIRECTION ~= nil then
					local ORI = EFFECT.Orientation
					EFFECT.CFrame = CFrame.new(EFFECT.Position,MOVEDIRECTION)*CFrame.new(0,0,-MOVESPEED)
					EFFECT.Orientation = ORI
				end
			end
			if PLAYSSOUND == false then
				EFFECT:remove()
			else
				repeat if stopeverything then wait(math.huge) end swait() until SOUND.Playing == false
				EFFECT:remove()
			end
		else
			if PLAYSSOUND == false then
				EFFECT:remove()
			else
				repeat if stopeverything then wait(math.huge) end swait() until SOUND.Playing == false
				EFFECT:remove()
			end
		end
	end))
end


coroutine.resume(coroutine.create(function()
	while not stopeverything do
		for i = 0,1,(1/60) do
			swait()
			if not alreadyfixing then
				GUN.NeonParts.Color = Color3.fromHSV(i,1,1)
				if taunt.Value == "iNSaNiTY" then
					GUN.NeonParts.Color = Color3.fromHSV(math.random(0,19)/20,1,1)
				elseif taunt.Value == "Err0r" then
					GUN.NeonParts.Color = Color3.fromRGB(0,math.clamp(eee.PlaybackLoudness-255,0,255),0)
				elseif taunt.Value == "FAST BOIII" then
					GUN.NeonParts.Color = Color3.fromRGB(0,0,math.clamp(eee.PlaybackLoudness-191,0,255))
				elseif taunt.Value == "Glitch" then
					GUN.NeonParts.Color = Color3.fromHSV(i,1,math.clamp((eee.PlaybackLoudness/255)-.5,0,1))
				elseif taunt.Value == "Alastor" then
					GUN.NeonParts.Color = Color3.new(eee.PlaybackLoudness/500,0,0)
				elseif taunt.Value == "kArmA" then
					GUN.NeonParts.Color = Color3.new(1,1,1)
				elseif taunt.Value == "petfroge" then
					GUN.NeonParts.Color = BrickColor.Random().Color
				end
			end
		end
	end
end))

function attackone()
	attack = true
	walkspeed = 16
	AttackGyro()
	for i = 0,.5,.05 do
		swait()
		if HipVal ~= 0 then
			RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(30)),.7/3)
			Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(15),math.rad(0),math.rad(-30)),1/3)
			RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(30)) * rscp,1/3)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(30),math.rad(0),math.rad(0)) * lscp,1/3)
			RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
			LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
			GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
		else
			RootJoint.C0 = Clerp(RootJoint.C0,rc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(30)),1 / 3)
			Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(15),math.rad(0),math.rad(-30)),1 / 3)
			RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(30)) * rscp,1 / 3)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(30),math.rad(0),math.rad(0)) * lscp,1 / 3)
			RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,0) * CFrame.Angles(math.rad(-5),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1 / 3)
			LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(0),math.rad(-70),math.rad(0)) * CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1 / 3)
			GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0.05,-1,-0.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1 / 2)
		end
	end
	Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = 642890855,SoundPitch = .81,SoundVolume = 10,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
	Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
	for i = 0,2 do
		Effect({Time = math.random(25,50),EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
		Effect({Time = math.random(25,50),EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
	end
	local mousehit = Mouse.Hit
	local DISTANCE = (Holetwo.Position - mousehit.p).Magnitude
	local killbeam = CreatePart(3,Effects,"Neon",0,0,shade,"Kill Beam",Vector3.new(1,DISTANCE,1))
	killbeam.CFrame = CFrame.new(Holetwo.Position,mousehit.p) * CFrame.new(0,0,-DISTANCE/2) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(0))
	MakeForm(killbeam,"Cyl")
	coroutine.resume(coroutine.create(function()
		for i = 1,25 do
			swait()
			killbeam.Transparency = i/25
		end
		killbeam:Destroy()
	end))
	for i = 1,4 do
		coroutine.resume(coroutine.create(function()
			Lightning(Holetwo.Position,mousehit.p,15,3.5,Color3.new(1,0,0),25,0,1,0,true,55)
		end))
	end
	coroutine.resume(coroutine.create(function()
		Lightning(Holetwo.Position,mousehit.p,15,3.5,Color3.new(1,0,0),25,0,1,0,true,55)
		Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = mousehit,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = 821439273,SoundPitch = .8,SoundVolume = 10,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
		Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = mousehit,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
		for i = 0,2 do
			for a = 0, 14 do
				EFFECT1(3,math.random(4,8),"Add",mousehit*CFrame.Angles(math.rad(math.random(-360,360)),math.rad(math.random(-360,360)),math.rad(math.random(-360,360))),3,3,3,0.03,GUN.NeonParts.Color,0)
			end
		end
		mdmg(mousehit.p,10)
	end))
	for i = 0,.5,.075 do
		swait()
		if HipVal ~= 0 then
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(30)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(10),math.rad(0),math.rad(-60)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(160),math.rad(-20),math.rad(60)) * rscp,1/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(40),math.rad(5),math.rad(5)) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
		else
			RootJoint.C0 = Clerp(RootJoint.C0,rc0 * CFrame.new() * CFrame.Angles(math.rad(-5),math.rad(0),math.rad(60)),1 / 3)
			Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(10),math.rad(0),math.rad(-60)),1 / 3)
			RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(160),math.rad(-20),math.rad(60)) * rscp,1 / 3)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(40),math.rad(5),math.rad(5)) * lscp,1 / 3)
			RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,0) * CFrame.Angles(math.rad(-5),math.rad(75),math.rad(0)) * CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1 / 3)
			LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(0),math.rad(-65),math.rad(0)) * CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1 / 3)
			GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0.05,-1,-0.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1 / 2)
		end	
	end
	walkspeed = 50
	attack = false
end
-------------------------------------------------------------------

function Ka_Boom()
	attack = true
	walkspeed = 0
	local die = CreateSound(1566051529,RootPart,3,1)
	die.EmitterSize = 100
	swait(5)
	for i = 1,3 do
		for i = 0,1.5,.1 do
			swait()
			RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5)),.7/3)
			Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(15),math.rad(0),math.rad(-5)),1/3)
			RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(175),math.rad(-10),math.rad(10)) * rscp,1/3)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(-10),math.rad(-10),math.rad(-5)) * lscp,1/3)
			RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
			LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
			GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
		end
		coroutine.resume(coroutine.create(function()
			Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = 642890855,SoundPitch = .65,SoundVolume = 6,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
			Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
			local skypos = Holetwo.CFrame * CFrame.new(-400,0,0)
			local DISTANCE = (Holetwo.Position - skypos.p).Magnitude
			local killbeam = CreatePart(3,Effects,"Neon",0,0,shade,"Kill Beam",Vector3.new(1,DISTANCE,1))
			killbeam.CFrame = CFrame.new(Holetwo.Position,skypos.p) * CFrame.new(0,0,-DISTANCE/2) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(0))
			MakeForm(killbeam,"Cyl")
			coroutine.resume(coroutine.create(function()
				for i = 1,25 do
					swait()
					killbeam.Transparency = i/25
				end
				killbeam:Destroy()
			end))
			for i = 1,4 do
				coroutine.resume(coroutine.create(function()
					Lightning(Holetwo.Position,skypos.p,15,3.5,Color3.new(0,0,1),25,0,1,0,true,55)
				end))
			end
			for i = 0,2 do
				Effect({Time = math.random(25,50),EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
				Effect({Time = math.random(25,50),EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
			end
			Lightning(Holetwo.Position,skypos.p,15,3.5,Color3.new(0,0,1),25,0,1,0,true,55)
			Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = skypos,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = 821439273,SoundPitch = .8,SoundVolume = 10,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
			Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = skypos,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
			for i = 0,2 do
				Effect({Time = math.random(25,50),EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = skypos*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
				Effect({Time = math.random(25,50),EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = skypos*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
			end
		end))
		for i = 1,42 do
			swait()
			RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)),.7/3)
			Neck.C0 = Clerp(Neck.C0,NECKC0 * CFrame.new() * CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),.7/3)
			RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(135 + 8.5 * math.cos(sine/50)),math.rad(0),math.rad(25)) * RIGHTSHOULDERC0,.7/3)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(25 + 8.5 * math.cos(sine/50)),math.rad(0),math.rad(-25 - 5 * math.cos(sine/25))) * LEFTSHOULDERC0,.7/3)
			RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
			LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
			GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
		end
	end
	for i = 1,15 do
		swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)),.7/3)
		Neck.C0 = Clerp(Neck.C0,NECKC0 * CFrame.new() * CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),.7/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(135 + 8.5 * math.cos(sine/50)),math.rad(0),math.rad(25)) * RIGHTSHOULDERC0,.7/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(25 + 8.5 * math.cos(sine/50)),math.rad(0),math.rad(-25 - 5 * math.cos(sine/25))) * LEFTSHOULDERC0,.7/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
	end
	local BEAM = CreatePart(3,Effects,"Neon",0,0,Color3.new(0,0,1),"Beam",Vector3.new())
	local BEAM2 = CreatePart(3,Effects,"Neon",0,0,Color3.new(0,0,1),"Beam",Vector3.new())
	MakeForm(BEAM,"Ball")
	MakeForm(BEAM2,"Ball")
	BEAM.CFrame = CFrame.new(RootPart.Position)
	BEAM2.CFrame = CFrame.new(RootPart.Position)
	local boooom = CreateSound(415700134,RootPart,10,1,false)
	boooom.EmitterSize = 100
	for i=1,140 do
		swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)),.7/3)
		Neck.C0 = Clerp(Neck.C0,NECKC0 * CFrame.new() * CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),.7/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(135 + 8.5 * math.cos(sine/50)),math.rad(0),math.rad(25)) * RIGHTSHOULDERC0,.7/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(25 + 8.5 * math.cos(sine/50)),math.rad(0),math.rad(-25 - 5 * math.cos(sine/25))) * LEFTSHOULDERC0,.7/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
		BEAM.Size = BEAM.Size + Vector3.new(.7,8,.7)
		BEAM2.Size = BEAM2.Size + Vector3.new(2,2,2)
		BEAM.Color = GUN.NeonParts.Color
		BEAM2.Color = GUN.NeonParts.Color
		BEAM.CFrame = CFrame.new(RootPart.Position)
		BEAM2.CFrame = CFrame.new(RootPart.Position)
		WACKYEFFECT({TIME = 5+i,EffectType = "Swirl",Size = BEAM2.Size*1.15,Size2 = Vector3.new(0,BEAM.Size.Y,0),Transparency = .8,Transparency2 = 1,CFrame = BEAM.CFrame * CFrame.Angles(math.rad(0),math.rad(i*5),math.rad(0)),MoveToPos = nil,RotationX = 0,RotationY = i/8,RotationZ = 0,Material = "Neon",Color = GUN.NeonParts.Color,SoundID = nil,SoundPitch = nil,SoundVolume = nil})
	end
	mdmg(RootPart.Position,BEAM2.Size.Y/2)
	Effect({TIME = 75,EffectType = "Sphere",Size = BEAM.Size,Size2 = Vector3.new(0,BEAM.Size.Y,0),Transparency = 0,Transparency2 = 0,CFrame = BEAM.CFrame,MoveToPos = nil,RotationX = 0,RotationY = 0,RotationZ = 0,Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil})
	Effect({TIME = 75,EffectType = "Sphere",Size = BEAM2.Size,Size2 = Vector3.new(),Transparency = 0,Transparency2 = .6,CFrame = BEAM2.CFrame,MoveToPos = nil,RotationX = 0,RotationY = 0,RotationZ = 0,Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil})
	for i,v in pairs(Effects:GetChildren()) do
		v.Color = shade
		v:GetPropertyChangedSignal("Color"):Connect(function()
			if stopeverything then wait(math.huge) end
			v.Color = shade
		end)
	end
	BEAM2:Destroy()
	BEAM:Destroy()
	attack = false
	walkspeed = 50
end

-----------------------------------------------------------

function attacktwo()
	attack = true
	walkspeed = 0
	AttackGyro()
	local gBullet = CreatePart(3,Effects,"Neon",0,0,Color3.new(0,0,1),"AbsoluteNoob",Vector3.new())
	MakeForm(gBullet,"Ball")
	gBullet.CFrame = LeftArm.CFrame*CFrame.new(0,-1.5,0)
	CreateSound(2785493,gBullet,10,.8)
	for i = 0,1.25,.025 do
		swait()
		Effect({Time = math.random(35,55),EffectType = "Sphere",Size = Vector3.new(.5,.5,.5),Size2 = Vector3.new(1,1,1),Transparency = 0,Transparency2 = 1,CFrame = LeftArm.CFrame*CFrame.new(0,-1.5,0),MoveToPos = LeftArm.CFrame*CFrame.new(0,-1.5,0)*CFrame.new(math.random(-10,10),math.random(-10,10),math.random(-10,10)).p,RotationX = nil,RotationY = nil,RotationZ = nil,Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 50,SizeBoomerang = 50})
		gBullet.Size = gBullet.Size * 1.085
		gBullet.CFrame = LeftArm.CFrame*CFrame.new(0,-1.5,0)
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-30)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(-5 - 3 * math.cos(sine/12)),math.rad(0),math.rad(30)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(135 + 8.5 * math.cos(sine/49)),math.rad(0),math.rad(25)) * RIGHTSHOULDERC0,.7/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5 + .1 * math.cos(sine/12),-0) * CFrame.Angles(math.rad(85 - 1.5 * math.cos(sine/12)),math.rad(0 - 6 * math.cos(sine/12)),math.rad(-30 - 6 * math.cos(sine/12))) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
	end
	local bullets = {}
	for i = 1,math.random(27,41) do
		swait()
		local Bullet = CreatePart(3,Effects,"Neon",0,0,Color3.new(0,0,1),"AbsoluteBEAN",Vector3.new(.6,.6,.6))
		MakeForm(Bullet,"Ball")
		Bullet.CFrame = gBullet.CFrame
		Effect({Time = math.random(5,20),EffectType = "Sphere",Size = Vector3.new(3,3,3)*math.random(-3,2),Size2 = Vector3.new(6,6,6)*math.random(-3,2),Transparency = .4,Transparency2 = 1,CFrame = Bullet.CFrame,MoveToPos = nil,RotationX = nil,RotationY = nil,RotationZ = nil,Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 25})
		table.insert(bullets,Bullet)
	end
	local oofing = false
	for b = 1,#bullets do
		swait()
		local part,pos = rayCast(LeftArm.CFrame*CFrame.new(0,-1.5,0).p,((Mouse.Hit.p+Vector3.new(math.random(-15,15),math.random(-7,7),math.random(-15,15))) - LeftArm.CFrame*CFrame.new(0,-1.5,0).p),500,Character)
		coroutine.resume(coroutine.create(function()
			FireArc(bullets[b],pos,math.random(17,31),math.random(9,15),false)
			Effect({Time = math.random(25,35),EffectType = "Sphere",Size = Vector3.new(.6,.6,.6),Size2 = Vector3.new(1.6,1.6,1.6),Transparency = 0,Transparency2 = 1,CFrame = bullets[b].CFrame,MoveToPos = nil,RotationX = nil,RotationY = nil,RotationZ = nil,Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 25})
			swait(math.random(55,65))
			for i = 1,3 do
				Effect({Time = math.random(45,65),EffectType = "Sphere",Size = Vector3.new(.6,6,.6)*math.random(-1.05,1.25),Size2 = Vector3.new(1.6,10,1.6)*math.random(-1.05,1.25),Transparency = 0,Transparency2 = 1,CFrame = bullets[b].CFrame*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = nil,RotationY = nil,RotationZ = nil,Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 20,SizeBoomerang = 35})
			end
			for i = 0,10 do
				swait()
				bullets[b].Transparency = bullets[b].Transparency + .1
			end
			oofing = not oofing
			if oofing then
				mdmg(bullets[b].Position,10)
			end
			local EEEBRUHEEE = CreateSound(168513088,bullets[b],3.5,1.1,false)
			bullets[b].Transparency = 1
			EEEBRUHEEE.Ended:Connect(function()
				if stopeverything then wait(math.huge) end
				bullets[b]:Destroy()
			end)
		end))
	end
	for i = 0,10 do
		swait()
		gBullet.Transparency = gBullet.Transparency + .1
	end
	gBullet:Destroy()
	walkspeed = 50
	attack = false
end

---------------------------------------------------

function hedshoot()
	attack = true
	walkspeed = 16
	CreateSound(235097614,RootPart,6,1.5,false)
	for i = 0,.5,.05 do
		swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-60)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(60)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.25,.5,-.25) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(-60)) * rscp,1/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.25,.5,-.25) * CFrame.Angles(math.rad(95),math.rad(0),math.rad(10)) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0,-.5,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
	end
	Effect({Time = 25,EffectType = "Box",Size = Vector3.new(2,2,2),Size2 = Vector3.new(5,5,5),Transparency = 0,Transparency2 = 1,CFrame = RootPart.CFrame,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = 642890855,SoundPitch = .65,SoundVolume = 10,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
	Effect({Time = 25,EffectType = "Box",Size = Vector3.new(2,2,2),Size2 = Vector3.new(5,5,5),Transparency = 0,Transparency2 = 1,CFrame = RootPart.CFrame,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
	Effect({Time = math.random(25,45),EffectType = "Sphere",Size = Vector3.new(2,100,2),Size2 = Vector3.new(6,100,6),Transparency = 0,Transparency2 = 1,CFrame = RootPart.CFrame*CFrame.new(math.random(-1,1),math.random(-1,1),-50)*CFrame.Angles(math.rad(math.random(89,91)),math.rad(math.random(-1,1)),math.rad(math.random(-1,1))),MoveToPos = nil,RotationX = nil,RotationY = nil,RotationZ = nil,Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 45})
	Effect({Time = math.random(25,45),EffectType = "Sphere",Size = Vector3.new(3,100,3),Size2 = Vector3.new(9,100,9),Transparency = 0,Transparency2 = 1,CFrame = RootPart.CFrame*CFrame.new(math.random(-1,1),math.random(-1,1),-50)*CFrame.Angles(math.rad(math.random(89,91)),math.rad(math.random(-1,1)),math.rad(math.random(-1,1))),MoveToPos = nil,RotationX = nil,RotationY = nil,RotationZ = nil,Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 45})
	mdmg(RootPart.Position,14)
	for i = 1,4 do
		RootPart.CFrame = RootPart.CFrame * CFrame.new(0,0,-25)
		mdmg(RootPart.Position,14)
		coroutine.resume(coroutine.create(function()
			Lightning(RootPart.CFrame*CFrame.new(math.random(-2.5,2.5),math.random(-5,5),math.random(-15,15)).p,RootPart.CFrame*CFrame.new(math.random(-2.5,2.5),math.random(-5,5),math.random(-15,15)).p,6,25,shade,math.random(30,45),.5,1.5,0,true,60) 
		end))	
		coroutine.resume(coroutine.create(function()
			Lightning(RootPart.CFrame*CFrame.new(math.random(-2.5,2.5),math.random(-5,5),math.random(-15,15)).p,RootPart.CFrame*CFrame.new(math.random(-2.5,2.5),math.random(-5,5),math.random(-15,15)).p,6,25,Color3.new(0,0,1),math.random(30,45),.5,1.5,0,true,60)
		end))
	end
	Effect({Time = 25,EffectType = "Box",Size = Vector3.new(2,2,2),Size2 = Vector3.new(5,5,5),Transparency = 0,Transparency2 = 1,CFrame = RootPart.CFrame,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
	Effect({Time = 25,EffectType = "Box",Size = Vector3.new(2,2,2),Size2 = Vector3.new(5,5,5),Transparency = 0,Transparency2 = 1,CFrame = RootPart.CFrame,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
	for i = 0,.5,.1 do
		swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-90)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(90)) * rscp,1/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(40),math.rad(5),math.rad(5)) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
	end
	attack = false
	walkspeed = 50
end

--------------------------------------------------

local stillraining = false

function painlessrain()
	if stillraining then
		return
	else
		stillraining = true
	end
	attack = true
	walkspeed = 16
	coroutine.wrap(function()
		for i = 0,2 do
			swait(12)
			CreateSound(199145095,GUN.Joint,10,1)
		end
	end)()
	for i = 0,2,.1 do
		swait()
		if HipVal ~= 0 then
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-10)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(25),math.rad(0),math.rad(-20)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(35),math.rad(-35),math.rad(20)) * rscp,1/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(-20),math.rad(-5),math.rad(-10)) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(doe * 22),math.rad(0),math.rad(0)),1/2)
		else
			RootJoint.C0 = Clerp(RootJoint.C0,rc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-10)),1 / 3)
			Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new(0,0,0 + ((1) - 1)) * CFrame.Angles(math.rad(25),math.rad(0),math.rad(-20)),1 / 3)
			RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(35),math.rad(-35),math.rad(20)) * rscp,1 / 3)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(-20),math.rad(-5),math.rad(-10)) * lscp,1 / 3)
			RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,0) * CFrame.Angles(math.rad(-5),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1 / 3)
			LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(0),math.rad(-70),math.rad(0)) * CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1 / 3)
			GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0.05,-1,-0.15) * CFrame.Angles(math.rad(doe * 22),math.rad(0),math.rad(0)),1 / 2)
		end	
		end
	for i = 0,1.5,.1 do
		swait()
		if HipVal ~= 0 then
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(15),math.rad(0),math.rad(-5)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(175),math.rad(-10),math.rad(10)) * rscp,1/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(-10),math.rad(-10),math.rad(-5)) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
			else
				RootJoint.C0 = Clerp(RootJoint.C0,rc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-10)),1 / 3)
				Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new(0,0,0 + ((1) - 1)) * CFrame.Angles(math.rad(25),math.rad(0),math.rad(-20)),1 / 3)
				RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(35),math.rad(-35),math.rad(20)) * rscp,1 / 3)
				LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(-20),math.rad(-5),math.rad(-10)) * lscp,1 / 3)
				RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,0) * CFrame.Angles(math.rad(-5),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1 / 3)
				LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(0),math.rad(-70),math.rad(0)) * CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1 / 3)
				GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0.05,-1,-0.15) * CFrame.Angles(math.rad(doe * 22),math.rad(0),math.rad(0)),1 / 2)
			end	
	end
	for i = 0,.5,.1 do
		swait()
		if HipVal ~= 0 then
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(15),math.rad(0),math.rad(-5)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,-.2,0) * CFrame.Angles(math.rad(175),math.rad(-10),math.rad(10)) * rscp,1/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(-10),math.rad(-10),math.rad(-5)) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
			else
				RootJoint.C0 = Clerp(RootJoint.C0,rc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5)),1 / 3)
				Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new(0,0,0 + ((1) - 1)) * CFrame.Angles(math.rad(15),math.rad(0),math.rad(-5)),1 / 3)
				RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(175),math.rad(-10),math.rad(10)) * rscp,1 / 3)
				LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(-10),math.rad(-10),math.rad(-5)) * lscp,1 / 3)
				RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,0) * CFrame.Angles(math.rad(-5),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1 / 3)
				LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(0),math.rad(-70),math.rad(0)) * CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1 / 3)
				GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0.05,-1,-0.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1 / 2)
			end		
		end
	local skypos = Holetwo.CFrame * CFrame.new(-400,0,0)
	local DISTANCE = (Holetwo.Position - skypos.p).Magnitude
	local killbeam = CreatePart(3,Effects,"Neon",0,0,shade,"Kill Beam",Vector3.new(1,DISTANCE,1))
	killbeam.CFrame = CFrame.new(Holetwo.Position,skypos.p) * CFrame.new(0,0,-DISTANCE/2) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(0))
	MakeForm(killbeam,"Cyl")
	coroutine.resume(coroutine.create(function()
		for i = 1,25 do
			swait()
			killbeam.Transparency = i/25
		end
		killbeam:Destroy()
	end))
	for i = 1,4 do
		coroutine.resume(coroutine.create(function()
			Lightning(Holetwo.Position,skypos.p,15,3.5,Color3.new(1,0,0),25,0,1,0,true,55)
		end))
	end
	for i = 0,2 do
	end
	for i = 0,.5,.1 do
		swait()
		if HipVal ~= 0 then
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(15),math.rad(0),math.rad(-5)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,.5,0) * CFrame.Angles(math.rad(175),math.rad(-10),math.rad(10)) * rscp,1/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,.5,0) * CFrame.Angles(math.rad(-5),math.rad(-5),math.rad(0)) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
		else
			RootJoint.C0 = Clerp(RootJoint.C0,rc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5)),1 / 3)
			Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new(0,0,0 + ((1) - 1)) * CFrame.Angles(math.rad(15),math.rad(0),math.rad(-5)),1 / 3)
			RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(175),math.rad(-10),math.rad(10)) * rscp,1 / 3)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(-5),math.rad(-5),math.rad(0)) * lscp,1 / 3)
			RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,0) * CFrame.Angles(math.rad(-5),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1 / 3)
			LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(0),math.rad(-70),math.rad(0)) * CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1 / 3)
			GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0.05,-1,-0.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1 / 2)
		end	
		end	
	attack = false
	walkspeed = 50
	for i = 0,2 do
	end
	for i = 1,5 do
		local Sky = RootPart.CFrame*CFrame.new(0,500,0)
		local MoPos = Mouse.Hit.p
		local DISTANCE = (Sky.p - MoPos).Magnitude
		for i = 1,4 do
			coroutine.resume(coroutine.create(function()

			end))
		end
		local killbeam = CreatePart(3,Effects,"Neon",0,0,shade,"Kill Beam",Vector3.new(1,DISTANCE,1))
		killbeam.CFrame = CFrame.new(Sky.p,MoPos) * CFrame.new(0,0,-DISTANCE/2) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(0))
		MakeForm(killbeam,"Cyl")
		coroutine.resume(coroutine.create(function()
			for i = 1,25 do
				swait()
				killbeam.Transparency = i/25
			end
			killbeam:Destroy()
		end))
		Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = CFrame.new(MoPos),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = 821439273,SoundPitch = .8,SoundVolume = 10,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
		Effect({Time = 25,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = CFrame.new(MoPos),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
		for i = 0,2 do
			--Effect({Time = math.random(25,50),EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = CFrame.new(MoPos)*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
			--Effect({Time = math.random(25,50),EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = CFrame.new(MoPos)*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
			for a = 0, 14 do
				EFFECT1(3,math.random(4,8),"Add",CFrame.new(MoPos)*CFrame.Angles(math.rad(math.random(-360,360)),math.rad(math.random(-360,360)),math.rad(math.random(-360,360))),3,3,3,0.03,GUN.NeonParts.Color,0)
			end
		end
		mdmg(MoPos,5)
	end
	stillraining = false
end

-------------------------------------------------
function SingularityBeam()
	attack = true
	cannecksnap = false
	walkspeed = 0
	AttackGyro()
	for i = 0,.5,.05 do
		swait()
		if HipVal ~= 0 then
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,0 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-60)),.7/3)
		Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(60)),1/3)
		RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.25,.5,-.25) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(-60)) * rscp,1/3)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.25,.5,-.25) * CFrame.Angles(math.rad(95),math.rad(0),math.rad(10)) * lscp,1/3)
		RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-.5,-.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),.7/3)
		LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),.7/3)
		GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0,-.5,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
		else
			RootJoint.C0 = Clerp(RootJoint.C0,rc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-60)),1 / 3)
			Neck.C0 = Clerp(Neck.C0,nc0 * CFrame.new() * CFrame.Angles(math.rad(0),math.rad(0),math.rad(60)),1 / 3)
			RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.25,0.5,-.25) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(-60)) * rscp,1 / 3)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.25,0.5,-.25) * CFrame.Angles(math.rad(95),math.rad(0),math.rad(10)) * lscp,1 / 3)
			RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,0) * CFrame.Angles(math.rad(-5),math.rad(75),math.rad(0)) * CFrame.Angles(math.rad(-4),math.rad(0),math.rad(0)),1 / 3)
			LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(0),math.rad(-65),math.rad(0)) * CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),1 / 3)
			GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0,-.5,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1 / 2)
		end	
		end
		local HoleDist = (Hole.Position - Holetwo.Position).Magnitude
		local chargebeam = CreatePart(3,Effects,"Neon",0,0,shade,"Charge Beam",Vector3.new(.25,HoleDist,.25),false)
		MakeForm(chargebeam,"Cyl")
		chargebeam.CFrame = CFrame.new(Hole.Position,Holetwo.Position) * CFrame.new(0,0,-HoleDist/2) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(0))
		local chargeweld = weldBetween(GUN.Joint,chargebeam)
		local chargeball = CreatePart(3,Effects,"Neon",0,0,shade,"Charge Ball",Vector3.new(.5,.5,.5),false)
		chargeball.Shape = "Ball"
		chargeball.CFrame = Holetwo.CFrame
		weldBetween(Holetwo,chargeball)
		CreateSound(342793847,Hole,10,1,false)
		local bigball = game:GetService("TweenService"):Create(chargeball,TweenInfo.new(3.86,Enum.EasingStyle.Linear),{Size = Vector3.new(2.5,2.5,2.5)})
		bigball:Play()
		bigball.Completed:Wait()
		chargebeam:Destroy()
		local KillDist = (Holetwo.Position - Mouse.Hit.p).Magnitude
		coroutine.resume(coroutine.create(function()
			repeat if stopeverything then wait(math.huge) end KillDist = (Holetwo.Position - Mouse.Hit.p).Magnitude Swait() until not attack
		end))
		local killbeam = CreatePart(3,Effects,"Neon",0,0,shade,"Kill Beam",Vector3.new(2.5,KillDist,2.5))
		MakeForm(killbeam,"Cyl")
		killbeam.Touched:Connect(function(victim)
			if stopeverything then wait(math.huge) end
			mdmg(victim.Position,5)
		end)
		coroutine.resume(coroutine.create(function()
			while not stopeverything and killbeam:IsDescendantOf(game) do
				mdmg(Mouse.Hit.p,5)
				swait()
			end
		end))
	coroutine.resume(coroutine.create(function()
		local isdoingathing = false
		while not stopeverything and killbeam:IsDescendantOf(game) do
			isdoingathing = not isdoingathing
			if lplr.Name == USERNAME then
				RootPart.CFrame = RootPart.CFrame * CFrame.new(0,0,.1)
			end
			killbeam.Size = Vector3.new(2.5,KillDist,2.5)
			killbeam.CFrame = CFrame.new(Holetwo.Position,Mouse.Hit.p) * CFrame.new(0,0,-KillDist/2) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(0))
			if isdoingathing then
				coroutine.resume(coroutine.create(function()
					Lightning(Holetwo.Position,Mouse.Hit.p,15,3,Color3.new(1,0,0),10,0,1,0,true,55)
				end))
				for a = 0, 14 do
					EFFECT1(3,math.random(4,8),"Add",Mouse.Hit*CFrame.Angles(math.rad(math.random(-360,360)),math.rad(math.random(-360,360)),math.rad(math.random(-360,360))),3,3,3,0.03,GUN.NeonParts.Color,0)
				end
				Effect({Time = 10,EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
				Effect({Time = 10,EffectType = "Round Slash",Size = Vector3.new(),Size2 = Vector3.new(.1,0,.1),Transparency = 0,Transparency2 = 1,CFrame = Holetwo.CFrame*CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360))),MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 15})
				Effect({Time = 10,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = Mouse.Hit,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = Color3.new(1,0,0),SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
				Effect({Time = 10,EffectType = "Box",Size = Vector3.new(),Size2 = Vector3.new(3,3,3),Transparency = 0,Transparency2 = 1,CFrame = Mouse.Hit,MoveToPos = nil,RotationX = math.random(-1,1),RotationY = math.random(-1,1),RotationZ = math.random(-1,1),Material = "Neon",Color = shade,SoundID = nil,SoundPitch = nil,SoundVolume = nil,UseBoomerangMath = true,Boomerang = 0,SizeBoomerang = 50})
			end
			Swait()
		end
	end))
	CreateSound(138677306,Holetwo,10,1,false)
	CreateSound(415700134,Holetwo,10,1,false)
	Swait(150)
	CreateSound(3264923,Holetwo,10,1,false)
	Swait(30)
	chargeball:Destroy()
	killbeam:Destroy()
	walkspeed = 50
	attack = false
	cannecksnap = true
end


local FLYING = false
iyflyspeed = 1
function sFLY()
	if not ISFLYING then
		FLYING = false
	else
		local CONTROL = {F = 0,B = 0,L = 0,R = 0,Q = 0,E = 0}
		local lCONTROL = {F = 0,B = 0,L = 0,R = 0,Q = 0,E = 0}
		local SPEED = 0			
		local function FLY()
			FLYING = true
			BG = Instance.new('BodyGyro',RootPart)
			BV = Instance.new('BodyVelocity',RootPart)
			BG.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			BG.P = 1e4
			BG.CFrame = RootPart.CFrame
			BV.Velocity = Vector3.new(0,0,0)
			BV.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			coroutine.resume(coroutine.create(function()
				repeat if stopeverything then wait(math.huge) end
					game:GetService("RunService").RenderStepped:Wait()
					if not alreadyfixing then
						if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
							SPEED = 50
						elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
							SPEED = 0
						end
						if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
							BV.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R,(CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2,0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							lCONTROL = {F = CONTROL.F,B = CONTROL.B,L = CONTROL.L,R = CONTROL.R}
						elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
							BV.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R,(lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2,0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						else
							BV.Velocity = Vector3.new(0,0,0)
						end
						BG.CFrame = workspace.CurrentCamera.CoordinateFrame
					end
				until not FLYING
				CONTROL = {F = 0,B = 0,L = 0,R = 0,Q = 0,E = 0}
				lCONTROL = {F = 0,B = 0,L = 0,R = 0,Q = 0,E = 0}
				SPEED = 0
				if not alreadyfixing then
					for i,v in pairs(RootPart:GetChildren()) do
						if v:IsA("BodyMover") then
							v:Destroy()
						end
					end
					RootPart.CFrame = CFrame.new(RootPart.Position)
				end
			end))
		end
		local IYMouse = Player:GetMouse()
		IYMouse.KeyDown:connect(function(KEY)
			if stopeverything then wait(math.huge) end
			if KEY:lower() == 'w' then
				CONTROL.F = iyflyspeed
			elseif KEY:lower() == 's' then
				CONTROL.B = - iyflyspeed
			elseif KEY:lower() == 'a' then
				CONTROL.L = - iyflyspeed
			elseif KEY:lower() == 'd' then 
				CONTROL.R = iyflyspeed
			elseif KEY:lower() == 'e' then
				CONTROL.Q = iyflyspeed*2
			elseif KEY:lower() == 'q' then
				CONTROL.E = -iyflyspeed*2
			end
		end)
		IYMouse.KeyUp:connect(function(KEY)
			if stopeverything then wait(math.huge) end
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			elseif KEY:lower() == 'e' then
				CONTROL.Q = 0
			elseif KEY:lower() == 'q' then
				CONTROL.E = 0
			end
		end)
		FLY()
	end
end
function sphere(bonuspeed,type,pos,scale,value,color)
	local type = type
	local rng = Instance.new("Part",Effects)
	rng.Anchored = true
	rng.BrickColor = color
	rng.CanCollide = false
	rng.FormFactor = 3
	rng.Name = "Ring"
	rng.Material = "Neon"
	rng.Size = Vector3.new(1,1,1)
	rng.Transparency = 0
	rng.TopSurface = 0
	rng.BottomSurface = 0
	rng.CFrame = pos
	local rngm = Instance.new("SpecialMesh",rng)
	rngm.MeshType = "Sphere"
	rngm.Scale = scale
	local scaler2 = 1
	if type == "Add" then
		scaler2 = 1*value
	elseif type == "Divide" then
		scaler2 = 1/value
	end
	coroutine.resume(coroutine.create(function()
		for i = 0,10/bonuspeed,0.1 do
			swait()
			if type == "Add" then
				scaler2 = scaler2 - 0.01*value/bonuspeed
			elseif type == "Divide" then
				scaler2 = scaler2 - 0.01/value*bonuspeed
			end
			rng.BrickColor = BrickColor.random()
			rng.Transparency = rng.Transparency + 0.01*bonuspeed
			rngm.Scale = rngm.Scale + Vector3.new(scaler2*bonuspeed,scaler2*bonuspeed,scaler2*bonuspeed)
		end
		rng:Destroy()
	end))
end

function sphere2(bonuspeed,type,pos,scale,value,value2,value3,color)
	local type = type
	local rng = Instance.new("Part",Effects)
	rng.Anchored = true
	rng.BrickColor = color
	rng.CanCollide = false
	rng.FormFactor = 3
	rng.Name = "Ring"
	rng.Material = "Neon"
	rng.Size = Vector3.new(1,1,1)
	rng.Transparency = 0
	rng.TopSurface = 0
	rng.BottomSurface = 0
	rng.CFrame = pos
	local rngm = Instance.new("SpecialMesh",rng)
	rngm.MeshType = "Sphere"
	rngm.Scale = scale
	local scaler2 = 1
	local scaler2b = 1
	local scaler2c = 1
	if type == "Add" then
		scaler2 = 1*value
		scaler2b = 1*value2
		scaler2c = 1*value3
	elseif type == "Divide" then
		scaler2 = 1/value
		scaler2b = 1/value2
		scaler2c = 1/value3
	end
	coroutine.resume(coroutine.create(function()
		for i = 0,10/bonuspeed,0.1 do
			swait()
			if type == "Add" then
				scaler2 = scaler2 - 0.01*value/bonuspeed
				scaler2b = scaler2b - 0.01*value/bonuspeed
				scaler2c = scaler2c - 0.01*value/bonuspeed
			elseif type == "Divide" then
				scaler2 = scaler2 - 0.01/value*bonuspeed
				scaler2b = scaler2b - 0.01/value*bonuspeed
				scaler2c = scaler2c - 0.01/value*bonuspeed
			end
			rng.Transparency = rng.Transparency + 0.01*bonuspeed
			rngm.Scale = rngm.Scale + Vector3.new(scaler2*bonuspeed,scaler2b*bonuspeed,scaler2c*bonuspeed)
		end
		rng:Destroy()
	end))
end

function PixelBlockX(bonuspeed,FastSpeed,type,pos,x1,y1,z1,value,color,outerpos)
	local type = type
	local rng = Instance.new("Part",Effects)
	rng.Anchored = true
	rng.BrickColor = color
	rng.CanCollide = false
	rng.FormFactor = 3
	rng.Name = "Ring"
	rng.Material = "Neon"
	rng.Size = Vector3.new(1,1,1)
	rng.Transparency = 0
	rng.TopSurface = 0
	rng.BottomSurface = 0
	rng.CFrame = pos
	rng.CFrame = rng.CFrame + rng.CFrame.lookVector*outerpos
	local rngm = Instance.new("SpecialMesh",rng)
	rngm.MeshType = "Brick"
	rngm.Scale = Vector3.new(x1,y1,z1)
	local scaler2 = 1
	local speeder = FastSpeed/10
	if type == "Add" then
		scaler2 = 1*value
	elseif type == "Divide" then
		scaler2 = 1/value
	end
	coroutine.resume(coroutine.create(function()
		for i = 0,10/bonuspeed,0.1 do
			swait()
			if type == "Add" then
				scaler2 = scaler2 - 0.01*value/bonuspeed
			elseif type == "Divide" then
				scaler2 = scaler2 - 0.01/value*bonuspeed
			end
			rng.BrickColor = BrickColor.random()
			speeder = speeder - 0.01*FastSpeed*bonuspeed/10
			rng.CFrame = rng.CFrame + rng.CFrame.lookVector*speeder*bonuspeed
			rng.Transparency = rng.Transparency + 0.01*bonuspeed
			rngm.Scale = rngm.Scale - Vector3.new(scaler2*bonuspeed,scaler2*bonuspeed,scaler2*bonuspeed)
		end
		rng:Destroy()
	end))
end

function sphereMK(bonuspeed,FastSpeed,type,pos,x1,y1,z1,value,color,outerpos)
	local type = type
	local rng = Instance.new("Part",Effects)
	rng.Anchored = true
	rng.BrickColor = color
	rng.CanCollide = false
	rng.FormFactor = 3
	rng.Name = "Ring"
	rng.Material = "Neon"
	rng.Size = Vector3.new(1,1,1)
	rng.Transparency = 0
	rng.TopSurface = 0
	rng.BottomSurface = 0
	rng.CFrame = pos
	rng.CFrame = rng.CFrame + rng.CFrame.lookVector*outerpos
	local rngm = Instance.new("SpecialMesh",rng)
	rngm.MeshType = "Sphere"
	rngm.Scale = Vector3.new(x1,y1,z1)
	local scaler2 = 1
	local speeder = FastSpeed
	if type == "Add" then
		scaler2 = 1*value
	elseif type == "Divide" then
		scaler2 = 1/value
	end
	coroutine.resume(coroutine.create(function()
		for i = 0,10/bonuspeed,0.1 do
			swait()
			if type == "Add" then
				scaler2 = scaler2 - 0.01*value/bonuspeed
			elseif type == "Divide" then
				scaler2 = scaler2 - 0.01/value*bonuspeed
			end
			rng.BrickColor = BrickColor.random()
			speeder = speeder - 0.01*FastSpeed*bonuspeed
			rng.CFrame = rng.CFrame + rng.CFrame.lookVector*speeder*bonuspeed
			rng.Transparency = rng.Transparency + 0.01*bonuspeed
			rngm.Scale = rngm.Scale + Vector3.new(scaler2*bonuspeed,scaler2*bonuspeed,0)
		end
		rng:Destroy()
	end))
end

function slash(bonuspeed,rotspeed,rotatingop,typeofshape,type,typeoftrans,pos,scale,value,color)
	local type = type
	local rotenable = rotatingop
	local rng = Instance.new("Part",Effects)
	rng.Anchored = true
	rng.BrickColor = color
	rng.CanCollide = false
	rng.FormFactor = 3
	rng.Name = "Ring"
	rng.Material = "Neon"
	rng.Size = Vector3.new(1,1,1)
	rng.Transparency = 0
	if typeoftrans == "In" then
		rng.Transparency = 1
	end
	rng.TopSurface = 0
	rng.BottomSurface = 0
	rng.CFrame = pos
	local rngm = Instance.new("SpecialMesh",rng)
	rngm.MeshType = "FileMesh"
	if typeofshape == "Normal" then
		rngm.MeshId = "rbxassetid://662586858"
	elseif typeofshape == "Round" then
		rngm.MeshId = "rbxassetid://662585058"
	end
	rngm.Scale = scale
	local scaler2 = 1/10
	if type == "Add" then
		scaler2 = 1*value/10
	elseif type == "Divide" then
		scaler2 = 1/value/10
	end
	local randomrot = math.random(1,2)
	coroutine.resume(coroutine.create(function()
		for i = 0,10/bonuspeed,0.1 do
			swait()
			if type == "Add" then
				scaler2 = scaler2 - 0.01*value/bonuspeed/10
			elseif type == "Divide" then
				scaler2 = scaler2 - 0.01/value*bonuspeed/10
			end
			if rotenable == true then
				if randomrot == 1 then
					rng.CFrame = rng.CFrame*CFrame.Angles(0,math.rad(rotspeed*bonuspeed/2),0)
				elseif randomrot == 2 then
					rng.CFrame = rng.CFrame*CFrame.Angles(0,math.rad(-rotspeed*bonuspeed/2),0)
				end
			end
			if typeoftrans == "Out" then
				rng.Transparency = rng.Transparency + 0.01*bonuspeed
			elseif typeoftrans == "In" then
				rng.Transparency = rng.Transparency - 0.01*bonuspeed
			end
			rngm.Scale = rngm.Scale + Vector3.new(scaler2*bonuspeed/10,0,scaler2*bonuspeed/10)
		end
		rng:Destroy()
	end))
end

local tStstTSTtets = game:GetService("TweenService")

Mouse.KeyDown:Connect(function(k)
	if stopeverything then wait(math.huge) end
	k = k:lower()
	if k == "m" then
			if songid.Value ~= "rbxassetid://6174456295" and songid.Value ~= "rbxassetid://481104377" and songid.Value ~= "rbxassetid://5170646860" and songid.Value ~= "rbxassetid://1931001768" and songid.Value ~= "rbxassetid://1338971957" and songid.Value ~= "rbxassetid://3979209289" and songid.Value ~= "rbxassetid://4185475912" and songid.Value ~= "rbxassetid://913267185" and songid.Value ~= "rbxassetid://4557673096" and songid.Value ~= "rbxassetid://2920078671" and songid.Value ~= "rbxassetid://361511879" and songid.Value ~= "rbxassetid://1439600000" and songid.Value ~= "rbxassetid://844654533" and songid.Value ~= "rbxassetid://170282324" and songid.Value ~= "rbxassetid://6291841343" and songid.Value ~= "rbxassetid://5797602893" and songid.Value ~= "rbxassetid://4550031738" and songid.Value ~= "rbxassetid://1280010741" and songid.Value ~= "rbxassetid://5644788747" and songid.Value ~= "rbxassetid://6294514849" and songid.Value ~= "rbxassetid://6879239119" then
				TauntRemote:FireServer("None",6174456295)
			elseif songid.Value == "rbxassetid://6174456295" then
				TauntRemote:FireServer("None2",4550031738)
			elseif songid.Value == "rbxassetid://4550031738" then
				TauntRemote:FireServer("idk",170282324)
			end
		elseif k == "x" and not attack then
			SingularityBeam()
		elseif k == "c" and not attack then		
			painlessrain()
		elseif k == "v" and not attack then
			attacktwo()
		elseif k == "b" and not attack then
			Ka_Boom()
		elseif k == "z" and not attack  then	
				hedshoot()


	elseif k == "f" then
		ISFLYING = not ISFLYING
		if lplr.Name == USERNAME then
			sFLY()
		end
	end
end)



Mouse.Button1Down:Connect(function()
if stopeverything then wait(math.huge) end
	if attack == false and (taunt.Value == "None" or taunt.Value == "None2" or taunt.Value == "idk" ) then
		attackone()
	end
end)

coroutine.wrap(function()
	while not stopeverything do
		swait()
		if doe < 360 then
			doe = doe + 2
		else
			doe = 0
		end
	end
end)()
antivoid = Instance.new("Part")
antivoid.Name = "yes"
antivoid.Size = Vector3.new(400,10,400)
antivoid.Anchored = true
antivoid.Transparency = 1
antivoid.Position = Vector3.new(RootPart.Position.X,workspace.FallenPartsDestroyHeight+5,RootPart.Position.Z)
antivoid.Parent = nil
coroutine.resume(coroutine.create(function()
	while not stopeverything do
		swait()
		if not alreadyfixing then
			if antivoid:IsDescendantOf(workspace) then
				antivoid.Position = Vector3.new(RootPart.Position.X,workspace.FallenPartsDestroyHeight+5,RootPart.Position.Z)
			else
				pcall(function()
					antivoid:Destroy()
				end)
				antivoid = Instance.new("Part")
				antivoid.Name = "yes"
				antivoid.Size = Vector3.new(400,10,400)
				antivoid.Anchored = true
				antivoid.Transparency = 1
				antivoid.Position = Vector3.new(RootPart.Position.X,workspace.FallenPartsDestroyHeight+5,RootPart.Position.Z)
				antivoid.Parent = nil
			end
		end
	end
end))

function fly()

	function weld(p0,p1,c0,c1,par)
		local w = Instance.new("Weld",p0 or par)
		w.Part0 = p0
		w.Part1 = p1
		w.C0 = c0 or CFrame.new()
		w.C1 = c1 or CFrame.new()
		return w
	end
	local motors = {}
	function motor(p0,p1,c0,c1,des,vel,par)
		local w = Instance.new("Motor6D",p0 or par)
		w.Part0 = p0
		w.Part1 = p1
		w.C0 = c0 or CFrame.new()
		w.C1 = c1 or CFrame.new()
		w.MaxVelocity = tonumber(vel) or .05
		w.DesiredAngle = tonumber(des) or 0
		return w
	end
	function lerp(a,b,c)
		return a+(b-a)*c
	end
	function clerp(c1,c2,alBRUH)
		local al = .05
		local com1 = {c1.X,c1.Y,c1.Z,c1:toEulerAnglesXYZ()}
		local com2 = {c2.X,c2.Y,c2.Z,c2:toEulerAnglesXYZ()}
		for i,v in pairs(com1) do
			com1[i] = lerp(v,com2[i],al)
		end
		return CFrame.new(com1[1],com1[2],com1[3]) * CFrame.Angles(select(4,unpack(com1)))
	end
	function ccomplerp(c1,c2,alBRUH)
		local al = .05
		local com1 = {c1:components()}
		local com2 = {c2:components()}
		for i,v in pairs(com1) do
			com1[i] = lerp(v,com2[i],al)
		end
		return CFrame.new(unpack(com1))
	end
	function tickwave(time,length,offset)
		return .2*math.sin(sine/20)
	end
	function invcol(c)
		c = c.Color
		return BrickColor.new(shade)
	end
	local oc = oc or function(...) return ... end
		if stopeverything then wait(math.huge) end
		if v.Name == "Part" and not v:FindFirstChild("WingTrail") then
			swait()
			local meesh = v:FindFirstChildOfClass("SpecialMesh")
			if meesh then
				meesh.Scale = v.Size
			end
			local top = Instance.new("Attachment")
			top.Name = "Top"
			top.Position = Vector3.new(0,v.Size.Y/2,0)
			top.Parent = v
			local bottom = Instance.new("Attachment")
			bottom.Name = "Bottom"
			bottom.Position = Vector3.new(0,-v.Size.Y/2,0)
			bottom.Parent = v
			local vtrail = Instance.new("Trail")
			vtrail.Name = "WingTrail"
			vtrail.Attachment0 = top
			vtrail.Attachment1 = bottom
			vtrail.Lifetime = 0.3
			vtrail.MinLength = 0
			vtrail.LightEmission = 0
			vtrail.LightInfluence = 0
			vtrail.Color = ColorSequence.new(shade)
			vtrail.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)}
			vtrail.Parent = v
		end
	local char = Character
	local tor = Torso
	local hum = Humanoid
	local special = {
	}
	local topcolor = invcol(Character.Torso.BrickColor)
	local feacolor = topcolor
	local ptrans = 0
	local pref = 0
	local fire = false
	local fmcol = Color3.new()
	local fscol = Color3.new()
	local part = Instance.new("Part")
	part.FormFactor = "Custom"
	part.Size = Vector3.new(.2,.2,.2)
	part.TopSurface,part.BottomSurface = 0,0
	part.CanCollide = false
	part.BrickColor = topcolor
	part.Transparency = 1
	part.Reflectance = pref
	local ef = Instance.new("Fire",fire and part or nil)
	ef.Heat = 0
	ef.Size = .15
	ef.Color = fmcol or Color3.new()
	ef.SecondaryColor = fscol or Color3.new()
	part:BreakJoints()
	function gotResized()
		if lastsize then
			if tor.Size == lastsize then return end
			local scaleVec = tor.Size/lastsize
			for i,v in pairs(oc0) do
				oc0[i] = v-v.p+scaleVec*v.p
			end
			lastsize = tor.Size
		end
		lastsize = tor.Size
	end
	tor:GetPropertyChangedSignal("Size"):Connect(function()
		if stopeverything then wait(math.huge) end
		gotResized()
	end)
	gotResized()
	local idle = {-.3,.3,1.1,-.2; .3,.05,.1,.05; .2,-.6,0,0}
	local outlow = {-.3,.3,1.1,-.2; .3,.05,.1,.05; .2,-.6,0,0}
	local outhigh = {-.3,.3,1.1,-.2; .3,.05,.1,.05; .2,-.6,0,0}
	local veryhigh = {-.3,.3,1.1,-.2; .3,.05,.1,.05; .2,-.6,0,0}
	local flap1 = {-.3,.3,1.1,-.2; .3,.05,.1,.05; .2,-.6,0,0}
	local divebomb = {-.3,.3,1.1,-.2; .3,.05,.1,.05; .2,-.6,0,0}
	flying = false
	moving = false
	for i,v in pairs(tor:GetChildren()) do
		if v.ClassName:lower():match("body") then
			v:Destroy()
		end
	end
	local ctor = tor:Clone()
	ctor:ClearAllChildren()
	ctor.Name = "cTorso"
	ctor.Transparency = 1
	ctor.CanCollide = false
	ctor.FormFactor = "Custom"
	ctor.Size = Vector3.new(.2,.2,.2)
	weld(tor,ctor)
	local bg = Instance.new("BodyGyro",ctor)
	bg.maxTorque = Vector3.new()
	bg.P = 15000
	bg.D = 1000
	local bv = Instance.new("BodyVelocity",ctor)
	bv.maxForce = Vector3.new()
	bv.P = 15000
	vel = Vector3.new()
	cf = CFrame.new()
	flspd = 0
	keysdown = {}
	keypressed = {}
	ktime = {}
	descendtimer = 0
	jumptime = tick()
	hum.Jumping:connect(function()
		if stopeverything then wait(math.huge) end
		jumptime = tick()
	end)
	cam = workspace.CurrentCamera
	function mid(a,b,c)
		return math.max(a,math.min(b,c or -a))
	end
	function bn(a)
		return a and 1 or 0
	end
	function gm(tar)
		local m = 0
		for i,v in pairs(tar:GetChildren()) do
			if v:IsA("BasePart") then
				m = m + v:GetMass()
			end
			m = m + gm(v)
		end
		return m
	end
	reqrotx = 0
	local grav = 196.2
	local con
	while not stopeverything and not alreadyfixing do
		local obvel = tor.CFrame:vectorToObjectSpace(tor.Velocity)
		local sspd,uspd,fspd = obvel.X,obvel.Y,obvel.Z
		flying = true
		if flying then
			local lfldir = fldir
			fldir = cam.CoordinateFrame:vectorToWorldSpace(Vector3.new(bn(keysdown.d)-bn(keysdown.a),0,bn(keysdown.s)-bn(keysdown.w))).unit
			local lmoving = moving
			moving = fldir.Magnitude > .1
			if lmoving and not moving then
				idledir = lfldir*Vector3.new(1,0,1)
				descendtimer = tick()
			end
			local dbomb = fldir.Y < -.6 or (moving and keysdown["1"])
			if moving and keysdown["0"] and lmoving then
				fldir = (Vector3.new(lfldir.X,math.min(fldir.Y,lfldir.Y+.01)-.1,lfldir.Z)+(fldir*Vector3.new(1,0,1))*.05).unit
			end
			local down = tor.CFrame:vectorToWorldSpace(Vector3.new(0,-1,0))
			local descending = (not moving and keysdown["q"] and not keysdown[" "])
			cf = ccomplerp(cf,CFrame.new(tor.Position,tor.Position+(not moving and idledir or fldir)),keysdown["0"] and .02 or .07)
			local gdown = not dbomb and cf.lookVector.Y < -.2 and tor.Velocity.unit.Y < .05
			local rotvel = CFrame.new(Vector3.new(),tor.Velocity):toObjectSpace(CFrame.new(Vector3.new(),fldir)).lookVector
			bg.cframe = cf * CFrame.Angles(not moving and -.1 or -math.pi/2+.2,moving and mid(-2.5,rotvel.X/1.5) + reqrotx or 0,0)
			reqrotx = reqrotx - reqrotx/10
			local ani = tickwave(1.5,1)
			vel = moving and cf.lookVector*flspd or Vector3.new()
			flspd = math.min(120,lerp(flspd,moving and (fldir.Y<0 and flspd+(-fldir.Y)*grav/60 or math.max(50,flspd-fldir.Y*grav/300)) or 60,.4))
			local hit,ray = workspace:FindPartOnRayWithIgnoreList(Ray.new(tor.Position,Vector3.new(0,-3.5+math.min(0,bv.velocity.y)/30,0)),{Character})
		else
			bg.maxTorque = Vector3.new()
			bv.maxForce = Vector3.new()
			local ani = tickwave(walking and .8 or 4.5,1)
			local x,y,z = fspd/160,uspd/700,sspd/900
			if keypressed[" "] and not flying and (tick()-jumptime > .05 and (tick()-jumptime < 3 or hum.Jump)) then
				vel = Vector3.new(0,50,0)
				bv.velocity = vel
				idledir = cam.CoordinateFrame.lookVector*Vector3.new(1,0,1)
				cf = tor.CFrame * CFrame.Angles(-.01,0,0)
				bg.cframe = cf
				flystart = tick()
				flying = true
			end
		end
		keypressed = {}
		swait()
	end
end
coroutine.resume(coroutine.create(function()
	fly()
end))

W1=Instance.new("Weld",eeeblock)
W1.Part0 = eeeblock
W1.Part1 = Torso

while not stopeverything do
	if not alreadyfixing then
		swait()
	
		Humanoid.UseJumpPower = true
		Humanoid.JumpPower = 50
		Humanoid.WalkSpeed = walkspeed


		for i,v in pairs(Character:GetChildren()) do
			if v:IsA("BasePart") and v.Anchored == false and v.Position.Y < (workspace.FallenPartsDestroyHeight + 50) then
				local flot = Instance.new("BodyPosition")
				local spen = Instance.new("BodyGyro")
				local hu = math.huge
				flot.MaxForce = Vector3.new(hu,hu,hu)
				spen.MaxTorque = Vector3.new(hu,hu,hu)
				local spown = nil
				for o,b in pairs(workspace:GetDescendants()) do
					if not b:IsDescendantOf(Character) and b:IsA("SpawnLocation") then
						spown = b
					end
				end
					local base = workspace:FindFirstChild("Base")
					if not base then
						base = workspace:FindFirstChild("Baseplate")
				end
			end
		end
		Torsovelocity = (RootPart.Velocity).Magnitude
		sine = sine + 1
		local sensitivity = 25
		if taunt.Value == "None" or taunt.Value == "None2" then
			RootJoint.C1 = Clerp(RootJoint.C1,ROOTC0 * CFrame.new(0,0,0),0.2/3)
			Neck.C1 = Clerp(Neck.C1,CFrame.new(0,-0.5,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),0.2/3)
			RightHip.C1 = Clerp(RightHip.C1,CFrame.new(0.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1)
			LeftHip.C1 = Clerp(LeftHip.C1,CFrame.new(-0.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1)
			if attack == false then
				if Torsovelocity < sensitivity then
					Anim = "Idle"
					RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,3 - .5 * math.sin(sine/50)),0.7/3)
					Neck.C0 = Clerp(Neck.C0,NECKC0 * CFrame.new(0,0 ,0 + ((1) - 1)) * CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.7/3)
					RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(135 + 8.5 * math.cos(sine/50)),math.rad(0),math.rad(25)) * RIGHTSHOULDERC0,0.7/3)
					LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(25 + 8.5 * math.cos(sine/50)),math.rad(0),math.rad(-25 - 5 * math.cos(sine/25))) * LEFTSHOULDERC0,0.7/3)
					RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-0.5,-0.5) * CFrame.Angles(math.rad(-15 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),0.7/3)
					LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-15 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),0.7/3)
					GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
				elseif Torsovelocity >= sensitivity then
					Anim = "Walk"
					RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0 + .5 * math.cos(sine/50),0,3 - .5 * math.sin(sine/50)) * CFrame.Angles(math.rad(40),math.rad(0),math.rad(0)),0.7/3)
					Neck.C0 = Clerp(Neck.C0,NECKC0 * CFrame.new(0,-.25,0) * CFrame.Angles(math.rad(-40),math.rad(0),math.rad(0)),0.7/3)
					RightShoulder.C0 = Clerp(RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(-45),math.rad(0),math.rad(5 + 2 * math.cos(sine/19))) * RIGHTSHOULDERC0,0.7/3)
					LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(-45),math.rad(0),math.rad(-5 - 2 * math.cos(sine/19))) * LEFTSHOULDERC0,0.7/3)
					RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-0.5,-0.5) * CFrame.Angles(math.rad(-20 + 9 * math.cos(sine/74)),math.rad(80),math.rad(0)) * CFrame.Angles(math.rad(0 + 5 * math.cos(sine/37)),math.rad(0),math.rad(0)),0.7/3)
					LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-20 - 9 * math.cos(sine/54)),math.rad(-80),math.rad(0)) * CFrame.Angles(math.rad(0 - 5 * math.cos(sine/41)),math.rad(0),math.rad(0)),0.7/3)
					GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0.05,-1,-0.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
				end
				GUN.Base.Transparency = 0.8
				GUN.GunAdditions.Transparency = 0.8
				GUN.NeonParts.Transparency = 0
			end
			elseif taunt.Value == "idk" then
			if HipValLock == false then
				HipVal = 3
			end
			change = 1
			sensitivity = 25
			RootJoint.C1 = Clerp(RootJoint.C1,ROOTC0,.2/3)
			Neck.C1 = Clerp(Neck.C1,CFrame.new(0,-.5,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180)),.2/3)
			RightHip.C1 = Clerp(RightHip.C1,CFrame.new(.5,1,0,-4.37113918e-08,0,1,0,1,0,-1,0,-4.37113918e-08),1)
			LeftHip.C1 = Clerp(LeftHip.C1,CFrame.new(-.5,1,0,-4.37113918e-08,-0,-1,0,1,-0,1,0,-4.37113918e-08),1)
			RightShoulder.C1 = Clerp(RightShoulder.C1,CFrame.new(-.5,.5,0,0,0,1,0,1,-0,-1,0,0),1)
			LeftShoulder.C1 = Clerp(LeftShoulder.C1,CFrame.new(.5,.499975681,0,0,0,-1,0,1,0,1,0,0),1)
			if attack == false then
				if Torsovelocity < sensitivity/3.125 then
					Anim = "Idle"
					RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0,0,0 - .5 * math.sin(sine/30)) * CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)),0.7/3)
					Neck.C0 = Clerp(Neck.C0,NECKC0 * CFrame.new(0,0,0) * CFrame.Angles(math.rad(20-5*math.cos(sine/30)),0,0),.7/3)
					RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.55, 0.5, 0.5) * CFrame.Angles(math.rad(250), math.rad(20), math.rad(-80))* RIGHTSHOULDERC0,.7/3)
					LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(20),math.rad(0),math.rad(-10-10*math.cos(sine/30))) * LEFTSHOULDERC0,0.7/3)
					RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,-0.01) * CFrame.Angles(math.rad(10),math.rad(80),math.rad(10+10*math.cos(sine/30))),1/3)
					LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,-0.01) * CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10-10*math.cos(sine/30))),1/3)
					GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
				elseif Torsovelocity >= sensitivity/3.125 then
					Anim = "Walk"
					RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CFrame.new(0,0,0 - .5 * math.sin(sine/30)) * CFrame.Angles(math.rad(28.947),math.rad(0),math.rad(0)),0.7/3)
					Neck.C0 = Clerp(Neck.C0,NECKC0 * CFrame.new(0,0,0) * CFrame.Angles(math.rad(-8),math.rad(0),math.rad(0)),.7/3)
					RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.55, 0.5, 0.5) * CFrame.Angles(math.rad(250), math.rad(20), math.rad(-80))* RIGHTSHOULDERC0,.7/3)
					LeftShoulder.C0 = Clerp(LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(-20),math.rad(0),math.rad(-10-10*math.cos(sine/30))) * LEFTSHOULDERC0,0.7/3)
					RightHip.C0 = Clerp(RightHip.C0,CFrame.new(1,-1,-0.01) * CFrame.Angles(math.rad(-30),math.rad(80),math.rad(10+10*math.cos(sine/30))),1/3)
					LeftHip.C0 = Clerp(LeftHip.C0,CFrame.new(-1,-1,-0.01) * CFrame.Angles(math.rad(-20),math.rad(-80),math.rad(-10-10*math.cos(sine/30))),1/3)
					GunJoint.C0 = Clerp(GunJoint.C0,CFrame.new(0.05,-1,-0.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
				end
				GUN.Base.Transparency = 0.8
				GUN.GunAdditions.Transparency = 0.8
				GUN.NeonParts.Transparency = 0
			end
		end
	end
	swait()
end
end)

ExecuteUIGrid.CornerRadius = UDim.new(0.100000001, 1)
ExecuteUIGrid.Name = "ExecuteUIGrid"
ExecuteUIGrid.Parent = ExecuteButton

Options.Name = "Options"
Options.Parent = Main
Options.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Options.BackgroundTransparency = 1.000
Options.Position = UDim2.new(0.0282608699, 0, 0.110367894, 0)
Options.Size = UDim2.new(0, 174, 0, 221)

UIListLayout.Parent = Options
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)
function MakeToggle(name,callback)
	local Toggle = Instance.new("TextButton")
	local ToggleUICorner = Instance.new("UICorner")
	local ToggleTitle = Instance.new("TextLabel")
Toggle.Name = "Toggle"
Toggle.Parent = Options
Toggle.BackgroundColor3 = Color3.fromRGB(92, 110, 161)
Toggle.Position = UDim2.new(0.0282608699, 0, 0.204013377, 0)
Toggle.Size = UDim2.new(0, 20, 0, 20)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
Toggle.TextSize = 18.000
	-- rain thing
	local TweenService = game:GetService("TweenService")
	local function TweenColor(Object, Property)
		local Tween = TweenService:Create(Object, TweenInfo.new(Property["Time"]), {BackgroundColor3= Property["BackgroundColor3"]}):Play()

		return Tween
	end
	Toggle.MouseButton1Click:Connect(function()
		state = not state
		callback(state) 
		if state then
			TweenColor(Toggle, {
				["Time"] = 0.15,
				["BackgroundColor3"] = Color3.fromRGB(92, 110, 161)
			})
		else
			TweenColor(Toggle, {
				["Time"] = 0.15,
				["BackgroundColor3"] = Color3.fromRGB(93, 93, 93)
			})
		end
	end)
ToggleUICorner.CornerRadius = UDim.new(0.100000001, 1)
ToggleUICorner.Name = "ToggleUICorner"
ToggleUICorner.Parent = Toggle

ToggleTitle.Name = "ToggleTitle"
ToggleTitle.Parent = Toggle
ToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ToggleTitle.BackgroundTransparency = 1.000
ToggleTitle.Position = UDim2.new(1.357692, 0, 0, 0)
ToggleTitle.Size = UDim2.new(0, 144, 0, 20)
ToggleTitle.Font = Enum.Font.GothamSemibold
ToggleTitle.Text = name or "Something"
ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleTitle.TextSize = 18.000
ToggleTitle.TextTransparency = 0.200
ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
end




MakeToggle("Night Mode", function(Bool)
		_G.Night = Bool
end)
end)
Section:NewButton("Fe zombie (free)", "ButtonInfo", function()
loadstring(game:HttpGet('https://gist.githubusercontent.com/1BlueCat/7668ee0c4e1b352d8ac51efd6ed6f3fc/raw/d6421d586bf9b5d2e3fc0ebf14203c849494ec5f/FE%2520Zombie'))()
end)
Section:NewButton("Fe floating sniper", "ButtonInfo", function()
-- Made by $Krew mother fuckers
--Created using Nexo Animator (my bbg) flushed


local HatChar = game.Players.LocalPlayer.Character






HumanDied = false
local reanim
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end

end
_G.ClickFling=false -- Set this to true if u want.
loadstring(game:HttpGet(('https://raw.githubusercontent.com/OofHead-FE/nexo-before-deleted/main/NexoPD'),true))()

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character.CWExtra.NexoPD
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == '1' then-- first mode
Mode='1'
end
end)



attacklol=game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
Mode='Attack0'
wait(0.07) -- time of attack u can edit this
Mode='Attack1'
wait(.2)
Mode='Attack3'
wait(.2)
Mode ='1'
end)



coroutine.wrap(function()
while true do -- anim changer
if HumanDied then mousechanger:Disconnect() attacklol:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/-0.1),1+0*math.cos(sine/-0.1),0+0*math.cos(sine/-0.1))*ANGLES(RAD(-17+1*math.cos(sine/-0.1)),RAD(0+-11*math.cos(sine/-0.1)),RAD(-2+0*math.cos(sine/-0.1))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/29),5+3*math.cos(sine/29),0+0*math.cos(sine/29))*ANGLES(RAD(21+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(125+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.6+0*math.cos(sine/27),0.5+0*math.cos(sine/27),0+0*math.cos(sine/27))*ANGLES(RAD(290+0*math.cos(sine/27)),RAD(0+0*math.cos(sine/27)),RAD(0+0*math.cos(sine/27))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-40+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-24+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11))),.3)
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/35),1+0*math.cos(sine/35),-1.6+0*math.cos(sine/35))*ANGLES(RAD(-360+0*math.cos(sine/35)),RAD(-360+224*math.cos(sine/35)),RAD(-278+0*math.cos(sine/35))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/-0.1),1+0*math.cos(sine/-0.1),0+0*math.cos(sine/-0.1))*ANGLES(RAD(-17+1*math.cos(sine/-0.1)),RAD(0+-11*math.cos(sine/-0.1)),RAD(-2+0*math.cos(sine/-0.1))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/29),5+3*math.cos(sine/29),0+0*math.cos(sine/29))*ANGLES(RAD(21+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(125+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.6+0*math.cos(sine/27),0.5+0*math.cos(sine/27),0+0*math.cos(sine/27))*ANGLES(RAD(290+0*math.cos(sine/27)),RAD(0+0*math.cos(sine/27)),RAD(0+0*math.cos(sine/27))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-40+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-24+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11))),.3)
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/35),1+0*math.cos(sine/35),-1.6+0*math.cos(sine/35))*ANGLES(RAD(-360+0*math.cos(sine/35)),RAD(-360+224*math.cos(sine/35)),RAD(-278+0*math.cos(sine/35))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/-0.1),1+0*math.cos(sine/-0.1),0+0*math.cos(sine/-0.1))*ANGLES(RAD(-17+7*math.cos(sine/-0.1)),RAD(0+-15*math.cos(sine/-0.1)),RAD(0+-3*math.cos(sine/-0.1))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/29),6+4*math.cos(sine/29),0+0*math.cos(sine/29))*ANGLES(RAD(81+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.7+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(224+0*math.cos(sine/13)),RAD(-8+1.5*math.cos(sine/13)),RAD(-35+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.7+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(224+0*math.cos(sine/13)),RAD(8+0*math.cos(sine/13)),RAD(35+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(54+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(2+0*math.cos(sine/11))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(27+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(23+0*math.cos(sine/11))),.3)
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(2+0*math.cos(sine/67),11+0*math.cos(sine/67),0+0*math.cos(sine/67))*ANGLES(RAD(0+0*math.cos(sine/67)),RAD(0+0*math.cos(sine/67)),RAD(90+360*math.cos(sine/67))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/-0.1),1+0*math.cos(sine/-0.1),0+0*math.cos(sine/-0.1))*ANGLES(RAD(-17+7*math.cos(sine/-0.1)),RAD(0+-15*math.cos(sine/-0.1)),RAD(0+-3*math.cos(sine/-0.1))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/29),6+4*math.cos(sine/29),0+0*math.cos(sine/29))*ANGLES(RAD(-6+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.4+0*math.cos(sine/27),0.7+0.1*math.cos(sine/27),0+0*math.cos(sine/27))*ANGLES(RAD(99+7*math.cos(sine/27)),RAD(7+0*math.cos(sine/27)),RAD(45+0*math.cos(sine/27))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-19+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(2+0*math.cos(sine/11))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-17+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11))),.3)
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/67),-7+0*math.cos(sine/67),2.5+0*math.cos(sine/67))*ANGLES(RAD(67+0*math.cos(sine/67)),RAD(16+360*math.cos(sine/67)),RAD(0+0*math.cos(sine/67))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/-0.1),1+0*math.cos(sine/-0.1),0+0*math.cos(sine/-0.1))*ANGLES(RAD(-17+7*math.cos(sine/-0.1)),RAD(0+-15*math.cos(sine/-0.1)),RAD(0+-3*math.cos(sine/-0.1))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/29),6+4*math.cos(sine/29),0+0*math.cos(sine/29))*ANGLES(RAD(-6+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.4+0*math.cos(sine/27),0.7+0.1*math.cos(sine/27),0+0*math.cos(sine/27))*ANGLES(RAD(99+7*math.cos(sine/27)),RAD(7+0*math.cos(sine/27)),RAD(45+0*math.cos(sine/27))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-19+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(2+0*math.cos(sine/11))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-17+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11))),.3)
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(-0.5+0*math.cos(sine/67),-7+0*math.cos(sine/67),2.5+0*math.cos(sine/67))*ANGLES(RAD(67+0*math.cos(sine/67)),RAD(16+360*math.cos(sine/67)),RAD(0+0*math.cos(sine/67))),.3)
end


elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle

elseif Root.Velocity.Magnitude < 200 then -- walk

elseif Root.Velocity.Magnitude > 20 then -- run

end
elseif Mode == 'Attack0' then --attack clerp 


elseif Mode == 'Attack1' then --attack clerp 
hatset('Sniper','Right Arm',CFrame.new(),reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(-2+0*math.cos(sine/50),-0.2+0.1*math.cos(sine/50),0+0.2*math.cos(sine/50))*ANGLES(RAD(128+0*math.cos(sine/50)),RAD(0+0*math.cos(sine/50)),RAD(90+0*math.cos(sine/50))),1),false)
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/-0.1),1+0*math.cos(sine/-0.1),0+0*math.cos(sine/-0.1))*ANGLES(RAD(-17+7*math.cos(sine/-0.1)),RAD(0+-15*math.cos(sine/-0.1)),RAD(0+-3*math.cos(sine/-0.1))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/29),6+4*math.cos(sine/29),0+0*math.cos(sine/29))*ANGLES(RAD(-6+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29)),RAD(0+0*math.cos(sine/29))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(92+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.4+0*math.cos(sine/27),0.7+0.1*math.cos(sine/27),0+0*math.cos(sine/27))*ANGLES(RAD(99+7*math.cos(sine/27)),RAD(7+0*math.cos(sine/27)),RAD(45+0*math.cos(sine/27))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(0+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(-4+0*math.cos(sine/11))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/11),-1+0*math.cos(sine/11),0+0*math.cos(sine/11))*ANGLES(RAD(-19+0*math.cos(sine/11)),RAD(0+0*math.cos(sine/11)),RAD(-4+0*math.cos(sine/11))),.3)
reanim['Sniper'].Handle.AccessoryWeld.C0 = reanim['Sniper'].Handle.AccessoryWeld.C0:Lerp(CF(-2+0*math.cos(sine/50),-0.2+0.1*math.cos(sine/50),0+0.2*math.cos(sine/50))*ANGLES(RAD(128+0*math.cos(sine/50)),RAD(0+0*math.cos(sine/50)),RAD(90+0*math.cos(sine/50))),.3)
elseif Mode == 'Attack3' then --attack clerp 


end
srv.RenderStepped:Wait()
end
end)()
end)
Section:NewButton("Fe katana (free)", "ButtonInfo", function()
loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\39\104\116\116\112\115\58\47\47\103\105\116\104\117\98\46\99\111\109\47\73\99\121\49\82\90\47\56\117\103\106\115\108\97\115\104\101\114\99\111\110\118\101\114\116\54\55\102\121\118\104\98\106\118\104\98\113\102\115\100\120\47\114\97\119\47\109\97\105\110\47\55\103\117\98\106\110\105\118\56\121\55\116\103\121\98\117\106\105\56\54\102\103\121\98\39\41\41\40\41\10")()
end)
Section:NewButton("Fe bazooka", "ButtonInfo", function()
loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\39\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\122\120\78\112\100\103\77\98\39\41\41\40\41\10")()
end)
Section:NewButton("Fe long sword", "ButtonInfo", function()
--//====================================================\\--
--||			   CREATED BY BRANNON1964802
--\\====================================================//--

for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
    if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
        game:GetService("RunService").Heartbeat:connect(function()
        v.Velocity = Vector3.new(-30,0,0)
        end)
    end
end

game:GetService("RunService").Heartbeat:connect(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,-30,0)
end)
Bypass = "death"
loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()

local c = coroutine.create(function()
local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
local bp = Instance.new("BodyPosition", hrp)
			bp.Position = hrp.Position
			bp.D = 9999999
			bp.P = 999999999999999
			bp.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			local flinger = Instance.new("BodyAngularVelocity",hrp)
			flinger.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			flinger.P = 100000000000
			flinger.AngularVelocity = Vector3.new(10000,10000,10000)
_G.click = false

game:GetService("RunService").Heartbeat:connect(function()
    print(_G.click)
    if _G.click == true then
bp.Position=game:GetService("Workspace").non["Back_AccAccessory"].Handle.Position
game.Players.LocalPlayer.Character.HumanoidRootPart.Position=game:GetService("Workspace").non["Back_AccAccessory"].Handle.Position
else
bp.Position=Vector3.new(0,-2,0)
game.Players.LocalPlayer.Character.HumanoidRootPart.Position=Vector3.new(0,-2,0)
end
end)
local Highlight = Instance.new("SelectionBox")
Highlight.Adornee = game.Players.LocalPlayer.Character.HumanoidRootPart
Highlight.LineThickness=0.05
Highlight.Color3 = Color3.fromRGB(30,255,30)
Highlight.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
Highlight.Name = "RAINBOW"
end)
coroutine.resume(c)
local function add_hat_for_anim(naming,handle,part1,c0,c1)
    if handle:FindFirstChild('AccessoryWeld') then
        handle.AccessoryWeld:Destroy()
    end

    local motor = Instance.new('Motor6D')
    motor.Part0 = handle
    motor.Part1 = part1 
    motor.C0 = c0
    motor.C1 = c1
    motor.Parent = handle
end



Player = game:GetService("Players").LocalPlayer
PlayerGui = Player.PlayerGui
Cam = workspace.CurrentCamera
Backpack = Player.Backpack
Character = game.workspace.non
Humanoid = Character.Humanoid
Mouse = Player:GetMouse()
RootPart = Character["HumanoidRootPart"]
Torso = Character["Torso"]
Head = Character["Head"]
RightArm = Character["Right Arm"]
LeftArm = Character["Left Arm"]
RightLeg = Character["Right Leg"]
LeftLeg = Character["Left Leg"]
RootJoint = RootPart["RootJoint"]
Neck = Torso["Neck"]
RightShoulder = Torso["Right Shoulder"]
LeftShoulder = Torso["Left Shoulder"]
RightHip = Torso["Right Hip"]
LeftHip = Torso["Left Hip"]

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor





--//=================================\\
--||		  CUSTOMIZATION
--\\=================================//

Class_Name = "Firebreather"
Weapon_Name = "Redemption"

Custom_Colors = {
	Custom_Color_1 = BRICKC("Institutional white"); --1st color for the weapon.
	Custom_Color_2 = BRICKC("Institutional white"); --2nd color for the weapon.

	Custom_Color_3 = BRICKC("Institutional white"); --Color for the abilities.
	Custom_Color_4 = BRICKC("Institutional white"); --Color for the secondary bar.
	Custom_Color_5 = BRICKC("Institutional white"); --Color for the mana bar.
	Custom_Color_6 = BRICKC("Institutional white"); --Color for the health bar.
	Custom_Color_7 = BRICKC("Institutional white"); --Color for the stun bar.

	Custom_Color_8 = BRICKC("Institutional white"); --Background for the mana bar.
	Custom_Color_9 = BRICKC("Institutional white"); --Background for the secondary mana bar.
	Custom_Color_10 = BRICKC("Institutional white"); --Background for the stun bar.
	Custom_Color_11 = BRICKC("Institutional white"); --Background for the health bar.
	Custom_Color_12 = BRICKC("Institutional white"); --Background for the abilities.
}

Mana_Bar_Background_Transparency = 0 --Transparency for the background of the mana bar.
Secondary_Mana_Bar_Background_Transparency = 0 --Transparency for the background of the secondary mana bar.
Health_Bar_Background_Transparency = 0 --Transparency for the background of the health bar.
Stun_Bar_Background_Transparency = 0 --Transparency for the background of the stun bar.
Ability_Background_Transparency = 0  --Transparency for the background of the abilities.
Stat_Background_Transparency = 0 --Transparency for the background of the stats.

Player_Size = 1 --Size of the player.
Animation_Speed = 2
Frame_Speed = 1 / 60 -- (1 / 30) OR (1 / 60)

Enable_Gui = false --Enables or disables the Weapon Gui. Also functions as hiding or showing the Gui.
Enable_Stats = false --Enables or disables stats.
Put_Stats_In_Character = false --Places stats in Character.
Enable_Stagger_Hit = false --Enables or disables staggering when hitting a hitbox of some sort.
Play_Hitbox_Hit_Sound = true --Plays a hit sound when hitting a hitbox of some sort.
Enable_Stagger = false --Enables or disables staggering.
Enable_Stun = false --Enables or disables the stun mechanic.
Enable_Abilities = false --Enables abilites with cooldowns and mana costs.
Enable_Secondary_Bar = false --Enables the secondary mana bar, if true.

Start_Equipped = false --Starts the player equipped with their weapon.
Start_Equipped_With_Equipped_Animation = false --Used in conjunction with the above option. Starts your equip animation.
Can_Equip_Or_Unequip = true --Enables or disables the ability to unequip or equip your weapon.
Disable_Animator = true --Disables the Animator in the humanoid.
Disable_Animate = true --Disables the Animate script in the character.
Disable_Moving_Arms = false --Keeps the arms from moving around.
Use_Motors_Instead_Of_Welds = false --Uses motors instead of welds to disable moving arms.
Walkspeed_Depends_On_Movement_Value = false --Walkspeed depends on movement value. Self-explanatory.
Disable_Jump = false --Disables jumping.
Use_HopperBin = true --Uses a hopperbin to do things.

Cooldown_1 = 0 --Cooldowns for abilites.
Cooldown_2 = 0
Cooldown_3 = 0
Cooldown_4 = 0
Skill_1_Mana_Cost = 0 --How much mana is required to use the skill.
Skill_2_Mana_Cost = 0
Skill_3_Mana_Cost = 0
Skill_4_Mana_Cost = 0
Max_Mana = 0 --Maximum amount of mana you can have.
Max_Secondary_Mana = 0 --Maximum amount of secondary mana you can have.
Mana_Name = "Mana" --Name for the mana bar.
Secondary_Mana_Name = "Block" --Name for the secondary mana bar.
Max_Stun = 1 --Maximum amount of stun you can have.
Recover_Mana = 0 --How much mana you gain.
Mana_Regen_Mode = "1" --Basically switches from one mana regen system to another.
Secondary_Mana_Regen_Mode = "1" --Basically switches from one secondary mana regen system to another.
Stun_Lose_Mode = "1" --Basically switches from one secondary stun loss system to another.
Recover_Secondary_Mana = 0 --How much secondary mana you gain.
Lose_Stun = 0 --How much stun you lose.
Stun_Wait = 0 --Delay between losing stun.
Mana_Wait = 0 --Delay between gaining mana.
Secondary_Mana_Wait = 0 --Delay between gaining secondary mana.
Menu_Update_Speed = 0 --How fast the Weapon Gui will update.
Constant_Update = false --Removes the delay between updating the Weapon GUI.
Show_Stats = false --Hides or shows stats.
Stat_Offset = 0.74 --For cosmetic purposes. {0.74, 0.78}

--//=================================\\
--|| 	  END OF CUSTOMIZATION
--\\=================================//





--//=================================\\
--|| 	      USEFUL VALUES
--\\=================================//

local ROOTC0 = CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
local NECKC0 = CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
local RIGHTSHOULDERC0 = CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))
local LEFTSHOULDERC0 = CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))
local CO1 = 0
local CO2 = 0
local CO3 = 0
local CO4 = 0
local CHANGEDEFENSE = 0
local CHANGEDAMAGE = 0
local CHANGEMOVEMENT = 0
local ANIM = "Idle"
local ATTACK = false
local EQUIPPED = false
local HOLD = false
local COMBO = 1
local LASTPOINT = nil
local BLCF = nil
local SCFR = nil
local STAGGERHITANIM = false
local STAGGERANIM = false
local STUNANIM = false
local CRITCHANCENUMBER = 0
local IDLENUMBER = 0
local DONUMBER = 0
local HANDIDLE = false
local SINE = 0
local CHANGE = 2 / Animation_Speed
local WALKINGANIM = false
local WALK = 0
local DISABLEJUMPING = false
local HASBEENBLOCKED = false
local STUNDELAYNUMBER = 0
local MANADELAYNUMBER = 0
local SECONDARYMANADELAYNUMBER = 0
local ROBLOXIDLEANIMATION = IT("Animation")
ROBLOXIDLEANIMATION.Name = "Roblox Idle Animation"
ROBLOXIDLEANIMATION.AnimationId = "http://www.roblox.com/asset/?id=180435571"
--ROBLOXIDLEANIMATION.Parent = Humanoid
local WEAPONGUI = IT("ScreenGui", nil)
WEAPONGUI.Name = "Weapon GUI"
local WEAPONTOOL = IT("HopperBin", nil)
WEAPONTOOL.Name = Weapon_Name
local Weapon = IT("Model")
Weapon.Name = Weapon_Name
local Effects = IT("Folder", Weapon)
Effects.Name = "Effects"
local ANIMATOR = Humanoid.Animator
local ANIMATE = Character.Animate
local HITPLAYERSOUNDS = {--[["199149137", "199149186", "199149221", "199149235", "199149269", "199149297"--]]"263032172", "263032182", "263032200", "263032221", "263032252", "263033191"}
local HITARMORSOUNDS = {"199149321", "199149338", "199149367", "199149409", "199149452"}
local HITWEAPONSOUNDS = {"199148971", "199149025", "199149072", "199149109", "199149119"}
local HITBLOCKSOUNDS = {"199148933", "199148947"}

--//=================================\\
--\\=================================//


--add_hat_for_anim("sword",game:GetService("Workspace").non["Magma_Cannonblade"].Handle,game:GetService("Workspace").non.Redemption.Handle,CFrame.new(0,0,0),CFrame.Angles(0,0,0))


--//=================================\\
--||			  STATS
--\\=================================//

if Character:FindFirstChild("Stats") ~= nil then
Character:FindFirstChild("Stats").Parent = nil
end

local Stats = IT("Folder", nil)
Stats.Name = "Stats"
local ChangeStat = IT("Folder", Stats)
ChangeStat.Name = "ChangeStat"
local Defense = IT("NumberValue", Stats)
Defense.Name = "Defense"
Defense.Value = 1
local Movement = IT("NumberValue", Stats)
Movement.Name = "Movement"
Movement.Value = 1
local Damage = IT("NumberValue", Stats)
Damage.Name = "Damage"
Damage.Value = 1
local Mana = IT("NumberValue", Stats)
Mana.Name = "Mana"
Mana.Value = 0
local SecondaryMana = IT("NumberValue", Stats)
SecondaryMana.Name = "SecondaryMana"
SecondaryMana.Value = 0
local CanCrit = IT("BoolValue", Stats)
CanCrit.Name = "CanCrit"
CanCrit.Value = false
local CritChance = IT("NumberValue", Stats)
CritChance.Name = "CritChance"
CritChance.Value = 20
local CanPenetrateArmor = IT("BoolValue", Stats)
CanPenetrateArmor.Name = "CanPenetrateArmor"
CanPenetrateArmor.Value = false
local AntiTeamKill = IT("BoolValue", Stats)
AntiTeamKill.Name = "AntiTeamKill"
AntiTeamKill.Value = false
local Rooted = IT("BoolValue", Stats)
Rooted.Name = "Rooted"
Rooted.Value = false
local Block = IT("BoolValue", Stats)
Block.Name = "Block"
Block.Value = false
local RecentEnemy = IT("ObjectValue", Stats)
RecentEnemy.Name = "RecentEnemy"
RecentEnemy.Value = nil
local StaggerHit = IT("BoolValue", Stats)
StaggerHit.Name = "StaggerHit"
StaggerHit.Value = false
local Stagger = IT("BoolValue", Stats)
Stagger.Name = "Stagger"
Stagger.Value = false
local Stun = IT("BoolValue", Stats)
Stun.Name = "Stun"
Stun.Value = false
local StunValue = IT("NumberValue", Stats)
StunValue.Name = "StunValue"
StunValue.Value = 0

if Enable_Stats == true and Put_Stats_In_Character == true then
	Stats.Parent = Character
end

--//=================================\\
--\\=================================//





--//=================================\\
--|| 	     DEBUFFS / BUFFS
--\\=================================//

local DEFENSECHANGE1 = IT("NumberValue", ChangeStat)
DEFENSECHANGE1.Name = "ChangeDefense"
DEFENSECHANGE1.Value = 0

local MOVEMENTCHANGE1 = IT("NumberValue", nil)
MOVEMENTCHANGE1.Name = "ChangeMovement"
MOVEMENTCHANGE1.Value = 0

--//=================================\\
--\\=================================//





--//=================================\\
--|| SAZERENOS' ARTIFICIAL HEARTBEAT
--\\=================================//

ArtificialHB = Instance.new("BindableEvent", script)
ArtificialHB.Name = "ArtificialHB"

script:WaitForChild("ArtificialHB")

frame = Frame_Speed
tf = 0
allowframeloss = false
tossremainder = false
lastframe = tick()
script.ArtificialHB:Fire()

game:GetService("RunService").Heartbeat:connect(function(s, p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			script.ArtificialHB:Fire()
			lastframe = tick()
		else
			for i = 1, math.floor(tf / frame) do
				script.ArtificialHB:Fire()
			end
		lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)

--//=================================\\
--\\=================================//





--//=================================\\
--|| 	      SOME FUNCTIONS
--\\=================================//

function Raycast(POSITION, DIRECTION, RANGE, IGNOREDECENDANTS)
	return workspace:FindPartOnRay(Ray.new(POSITION, DIRECTION.unit * RANGE), IGNOREDECENDANTS)
end

function PositiveAngle(NUMBER)
	if NUMBER >= 0 then
		NUMBER = 0
	end
	return NUMBER
end

function NegativeAngle(NUMBER)
	if NUMBER <= 0 then
		NUMBER = 0
	end
	return NUMBER
end

function Swait(NUMBER)
	if NUMBER == 0 or NUMBER == nil then
		ArtificialHB.Event:wait()
	else
		for i = 1, NUMBER do
			ArtificialHB.Event:wait()
		end
	end
end

function QuaternionFromCFrame(cf)
	local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
	local trace = m00 + m11 + m22
	if trace > 0 then 
		local s = math.sqrt(1 + trace)
		local recip = 0.5 / s
		return (m21 - m12) * recip, (m02 - m20) * recip, (m10 - m01) * recip, s * 0.5
	else
		local i = 0
		if m11 > m00 then
			i = 1
		end
		if m22 > (i == 0 and m00 or m11) then
			i = 2
		end
		if i == 0 then
			local s = math.sqrt(m00 - m11 - m22 + 1)
			local recip = 0.5 / s
			return 0.5 * s, (m10 + m01) * recip, (m20 + m02) * recip, (m21 - m12) * recip
		elseif i == 1 then
			local s = math.sqrt(m11 - m22 - m00 + 1)
			local recip = 0.5 / s
			return (m01 + m10) * recip, 0.5 * s, (m21 + m12) * recip, (m02 - m20) * recip
		elseif i == 2 then
			local s = math.sqrt(m22 - m00 - m11 + 1)
			local recip = 0.5 / s return (m02 + m20) * recip, (m12 + m21) * recip, 0.5 * s, (m10 - m01) * recip
		end
	end
end
 
function QuaternionToCFrame(px, py, pz, x, y, z, w)
	local xs, ys, zs = x + x, y + y, z + z
	local wx, wy, wz = w * xs, w * ys, w * zs
	local xx = x * xs
	local xy = x * ys
	local xz = x * zs
	local yy = y * ys
	local yz = y * zs
	local zz = z * zs
	return CFrame.new(px, py, pz, 1 - (yy + zz), xy - wz, xz + wy, xy + wz, 1 - (xx + zz), yz - wx, xz - wy, yz + wx, 1 - (xx + yy))
end
 
function QuaternionSlerp(a, b, t)
	local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
	local startInterp, finishInterp;
	if cosTheta >= 0.0001 then
		if (1 - cosTheta) > 0.0001 then
			local theta = ACOS(cosTheta)
			local invSinTheta = 1 / SIN(theta)
			startInterp = SIN((1 - t) * theta) * invSinTheta
			finishInterp = SIN(t * theta) * invSinTheta
		else
			startInterp = 1 - t
			finishInterp = t
		end
	else
		if (1 + cosTheta) > 0.0001 then
			local theta = ACOS(-cosTheta)
			local invSinTheta = 1 / SIN(theta)
			startInterp = SIN((t - 1) * theta) * invSinTheta
			finishInterp = SIN(t * theta) * invSinTheta
		else
			startInterp = t - 1
			finishInterp = t
		end
	end
	return a[1] * startInterp + b[1] * finishInterp, a[2] * startInterp + b[2] * finishInterp, a[3] * startInterp + b[3] * finishInterp, a[4] * startInterp + b[4] * finishInterp
end

function Clerp(a, b, t)
	local qa = {QuaternionFromCFrame(a)}
	local qb = {QuaternionFromCFrame(b)}
	local ax, ay, az = a.x, a.y, a.z
	local bx, by, bz = b.x, b.y, b.z
	local _t = 1 - t
	return QuaternionToCFrame(_t * ax + t * bx, _t * ay + t * by, _t * az + t * bz, QuaternionSlerp(qa, qb, t))
end

function CreateFrame(PARENT, TRANSPARENCY, BORDERSIZEPIXEL, POSITION, SIZE, COLOR, BORDERCOLOR, NAME)
	local frame = IT("Frame")
	frame.BackgroundTransparency = TRANSPARENCY
	frame.BorderSizePixel = BORDERSIZEPIXEL
	frame.Position = POSITION
	frame.Size = SIZE
	frame.BackgroundColor3 = COLOR
	frame.BorderColor3 = BORDERCOLOR
	frame.Name = NAME
	frame.Parent = PARENT
	return frame
end

function CreateLabel(PARENT, TEXT, TEXTCOLOR, TEXTFONTSIZE, TEXTFONT, TRANSPARENCY, BORDERSIZEPIXEL, STROKETRANSPARENCY, NAME)
	local label = IT("TextLabel")
	label.BackgroundTransparency = 1
	label.Size = UD2(1, 0, 1, 0)
	label.Position = UD2(0, 0, 0, 0)
	label.TextColor3 = C3(255, 255, 255)
	label.TextStrokeTransparency = STROKETRANSPARENCY
	label.TextTransparency = TRANSPARENCY
	label.FontSize = TEXTFONTSIZE
	label.Font = TEXTFONT
	label.BorderSizePixel = BORDERSIZEPIXEL
	label.TextScaled = true
	label.Text = TEXT
	label.Name = NAME
	label.Parent = PARENT
	return label
end

function NoOutlines(PART)
	PART.TopSurface, PART.BottomSurface, PART.LeftSurface, PART.RightSurface, PART.FrontSurface, PART.BackSurface = 10, 10, 10, 10, 10, 10
end

function CreatePart(FORMFACTOR, PARENT, MATERIAL, REFLECTANCE, TRANSPARENCY, BRICKCOLOR, NAME, SIZE)
	local NEWPART = IT("Part")
	NEWPART.formFactor = FORMFACTOR
	NEWPART.Reflectance = REFLECTANCE
	NEWPART.Transparency = TRANSPARENCY
	NEWPART.CanCollide = false
	NEWPART.Locked = true
	NEWPART.BrickColor = BRICKC(tostring(BRICKCOLOR))
	NEWPART.Name = NAME
	NEWPART.Size = SIZE
	NEWPART.Position = Torso.Position
	NoOutlines(NEWPART)
	NEWPART.Material = MATERIAL
	NEWPART:BreakJoints()
	NEWPART.Parent = PARENT
	return NEWPART
end

function CreateMesh(MESH, PARENT, MESHTYPE, MESHID, TEXTUREID, SCALE, OFFSET)
	local NEWMESH = IT(MESH)
	if MESH == "SpecialMesh" then
		NEWMESH.MeshType = MESHTYPE
		if MESHID ~= "nil" and MESHID ~= "" then
			NEWMESH.MeshId = "http://www.roblox.com/asset/?id="..MESHID
		end
		if TEXTUREID ~= "nil" and TEXTUREID ~= "" then
			NEWMESH.TextureId = "http://www.roblox.com/asset/?id="..TEXTUREID
		end
	end
	NEWMESH.Offset = OFFSET or VT(0, 0, 0)
	NEWMESH.Scale = SCALE
	NEWMESH.Parent = PARENT
	return NEWMESH
end

function CreateWeldOrSnapOrMotor(TYPE, PARENT, PART0, PART1, C0, C1)
	local NEWWELD = IT(TYPE)
	NEWWELD.Part0 = PART0
	NEWWELD.Part1 = PART1
	NEWWELD.C0 = C0
	NEWWELD.C1 = C1
	NEWWELD.Parent = PARENT
	return NEWWELD
end

function CreateSound(ID, PARENT, VOLUME, PITCH)
	coroutine.resume(coroutine.create(function()
		local NEWSOUND = IT("Sound", PARENT)
		NEWSOUND.Volume = VOLUME
		NEWSOUND.Pitch = PITCH
		NEWSOUND.SoundId = "http://www.roblox.com/asset/?id="..ID
		Swait()
		NEWSOUND:play()
		game:GetService("Debris"):AddItem(NEWSOUND, 10)
	end))
end

function CFrameFromTopBack(at, top, back)
	local right = top:Cross(back)
	return CF(at.x, at.y, at.z, right.x, top.x, back.x, right.y, top.y, back.y, right.z, top.z, back.z)
end

function Lightning(POSITION1, POSITION2, MULTIPLIERTIME, LIGHTNINGDELAY, OFFSET, BRICKCOLOR, MATERIAL, SIZE, TRANSPARENCY, LASTINGTIME)
	local MAGNITUDE = (POSITION1 - POSITION2).magnitude 
	local CURRENTPOSITION = POSITION1
	local LIGHTNINGOFFSET = {-OFFSET, OFFSET}
	coroutine.resume(coroutine.create(function()
		for i = 1, MULTIPLIERTIME do 
			local LIGHTNINGPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR,"Effect", VT(SIZE * Player_Size, SIZE * Player_Size, MAGNITUDE / MULTIPLIERTIME))
			LIGHTNINGPART.Anchored = true
			local LIGHTNINGOFFSET2 = VT(LIGHTNINGOFFSET[MRANDOM(1, 2)], LIGHTNINGOFFSET[MRANDOM(1, 2)], LIGHTNINGOFFSET[MRANDOM(1, 2)]) 
			local LIGHTNINGPOSITION1 = CF(CURRENTPOSITION, POSITION2) * CF(0, 0, MAGNITUDE / MULTIPLIERTIME).p + LIGHTNINGOFFSET2
			if MULTIPLIERTIME == i then 
				local LIGHTNINGMAGNITUDE1 = (CURRENTPOSITION - POSITION2).magnitude
				LIGHTNINGPART.Size = VT(SIZE * Player_Size, SIZE * Player_Size, LIGHTNINGMAGNITUDE1)
				LIGHTNINGPART.CFrame = CF(CURRENTPOSITION, POSITION2) * CF(0, 0, -LIGHTNINGMAGNITUDE1 / 2)
			else
				LIGHTNINGPART.CFrame = CF(CURRENTPOSITION, LIGHTNINGPOSITION1) * CF(0, 0, MAGNITUDE / MULTIPLIERTIME / 2)
			end
			CURRENTPOSITION=LIGHTNINGPART.CFrame * CF(0, 0, MAGNITUDE / MULTIPLIERTIME / 2).p
			game.Debris:AddItem(LIGHTNINGPART, LASTINGTIME)
			coroutine.resume(coroutine.create(function()
				while LIGHTNINGPART.Transparency ~= 1 do
					--local StartTransparency = tra
					for i=0, 1, LASTINGTIME do
						Swait()
						LIGHTNINGPART.Transparency = LIGHTNINGPART.Transparency + (0.1 / LASTINGTIME)
					end
				end
			end))
		Swait(LIGHTNINGDELAY / Animation_Speed)
		end
	end))
end

function MagicBlock(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("BlockMesh", EFFECTPART, "", "", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicSphere(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "Sphere", "", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicCylinder(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("CylinderMesh", EFFECTPART, "", "", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicHead(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "Head", "", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicRing(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "3270017", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicWave(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "20329976", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), VT(0, 0, (-0.1 * Z1)) + (OFFSET * Player_Size))
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Offset = VT(0, 0, (-0.1 * MESH.Scale.Z))
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicCrystal(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "9756362", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicSwirl(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "1051557", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicSharpCone(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "1778999", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicFlatCone(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "1033714", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicSpikedCrown(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "1323306", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicFlatCrown(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "1078075", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function MagicSkull(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X1, Y1, Z1, X2, Y2, Z2, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "4770583", "", VT(X1 * Player_Size, Y1 * Player_Size, Z1 * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	coroutine.resume(coroutine.create(function(PART, MESH)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			MESH.Scale = MESH.Scale + VT(X2 * Player_Size, Y2 * Player_Size, Z2 * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH)
end

function ElectricEffect(BRICKCOLOR, MATERIAL, CFRAME, ROTATION, OFFSET, X, Y, Z, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("SpecialMesh", EFFECTPART, "FileMesh", "4770583", "", VT(X * Player_Size, Y * Player_Size, Z * Player_Size), OFFSET * Player_Size)
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	local XVALUE = MRANDOM()
	local YVALUE = MRANDOM()
	local ZVALUE = MRANDOM()
	coroutine.resume(coroutine.create(function(PART, MESH, THEXVALUE, THEYVALUE, THEZVALUE)
		for i = 0, 1, delay do
			Swait()
			PART.CFrame = PART.CFrame * ROTATION
			PART.Transparency = i
			THEXVALUE = THEXVALUE - 0.1 * (delay * 10)
			THEYVALUE = THEYVALUE - 0.1 * (delay * 10)
			THEZVALUE = THEZVALUE - 0.1 * (delay * 10)
			MESH.Scale = MESH.Scale + VT(THEXVALUE * Player_Size, THEYVALUE * Player_Size, THEZVALUE * Player_Size)
		end
		PART.Parent = nil
	end), EFFECTPART, EFFECTMESH, XVALUE, YVALUE, ZVALUE)
end

function TrailEffect(BRICKCOLOR, MATERIAL, CURRENTCFRAME, OLDCFRAME, MESHTYPE, REFLECTANCE, SIZE, ROTATION, X, Y, Z, delay)
	local MAGNITUDECFRAME = (CURRENTCFRAME.p - OLDCFRAME.p).magnitude
	if MAGNITUDECFRAME > (1 / 100) then
		local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 0, BRICKCOLOR, "Effect", VT(1, MAGNITUDECFRAME, 1))
		EFFECTPART.Anchored = true
		EFFECTPART.CFrame = CF((CURRENTCFRAME.p + OLDCFRAME.p) / 2, OLDCFRAME.p) * ANGLES(RAD(90), 0, 0)
		local THEMESHTYPE = "BlockMesh"
		if MESHTYPE == "Cylinder" then
			THEMESHTYPE = "CylinderMesh"
		end
		local EFFECTMESH = CreateMesh(THEMESHTYPE, EFFECTPART, "", "", "", VT(0 + SIZE * Player_Size, 1, 0 + SIZE * Player_Size), VT(0, 0, 0))
		game:GetService("Debris"):AddItem(EFFECTPART, 10)
		coroutine.resume(coroutine.create(function(PART, MESH)
			for i = 0, 1, delay do
				Swait()
				PART.CFrame = PART.CFrame * ROTATION
				PART.Transparency = i
				MESH.Scale = MESH.Scale + VT(X * Player_Size, Y * Player_Size, Z * Player_Size)
			end
			PART.Parent = nil
		end), EFFECTPART, EFFECTMESH)
	end
end

function ClangEffect(BRICKCOLOR, MATERIAL, CFRAME, ANGLE, DURATION, SIZE, POWER, REFLECTANCE, X, Y, Z, delay)
	local EFFECTPART = CreatePart(3, Effects, MATERIAL, 0, 1, BRICKCOLOR, "Effect", VT())
	EFFECTPART.Anchored = true
	EFFECTPART.CFrame = CFRAME
	local EFFECTMESH = CreateMesh("BlockMesh", EFFECTPART, "", "", "", VT(0, 0, 0), VT(0, 0, 0))
	game:GetService("Debris"):AddItem(EFFECTPART, 10)
	local THELASTPOINT = CFRAME
	coroutine.resume(coroutine.create(function(PART)
		for i = 1, DURATION do
			Swait()
			PART.CFrame = PART.CFrame * ANGLES(RAD(ANGLE), 0, 0) * CF(0, POWER * Player_Size, 0)
			TrailEffect(BRICKCOLOR, MATERIAL, PART.CFrame, THELASTPOINT, "Cylinder", REFLECTANCE, SIZE * Player_Size, ANGLES(0, 0, 0), X * Player_Size, Y * Player_Size, Z * Player_Size, delay)
			THELASTPOINT = PART.CFrame
		end
		PART.Parent = nil
	end), EFFECTPART)
end

--local list={}
function Triangle(Color, Material, a, b, c, delay)
	local edge1 = (c - a):Dot((b - a).unit)
	local edge2 = (a - b):Dot((c - b).unit)
	local edge3 = (b - c):Dot((a - c).unit)
	if edge1 <= (b - a).magnitude and edge1 >= 0 then
		a, b, c=a, b, c
	elseif edge2 <= (c - b).magnitude and edge2 >= 0 then
		a, b, c=b, c, a
	elseif edge3 <= (a - c).magnitude and edge3 >= 0 then
		a, b, c=c, a, b
	else
		assert(false, "unreachable")
	end
	local len1 = (c - a):Dot((b - a).unit)
	local len2 = (b - a).magnitude - len1
	local width = (a + (b - a).unit * len1 - c).magnitude
	local maincf = CFrameFromTopBack(a, (b - a):Cross(c - b).unit, - (b - a).unit)
	if len1 > 1 / 100 then
		local sz = VT(0.2, width, len1)
		local w1 = CreatePart(3, Effects, Material, 0, 0.5, Color, "Trail", sz)
		local sp = CreateMesh("SpecialMesh", w1, "Wedge", "", "", VT(0, 1, 1) * sz / w1.Size, VT(0, 0, 0))
		w1.Anchored = true
		w1.CFrame = maincf * ANGLES(math.pi, 0, math.pi / 2) * CF(0, width / 2, len1 / 2)
		coroutine.resume(coroutine.create(function()
			for i = 0.5, 1, delay * (2 / Animation_Speed) do
				Swait()
				w1.Transparency = i
			end
			w1.Parent = nil
		end))
		game:GetService("Debris"):AddItem(w1, 10)
		--table.insert(list, w1)
	end
	if len2 > 1 / 100 then
		local sz = VT(0.2, width, len2)
		local w2 = CreatePart(3, Effects, Material, 0, 0.5, Color, "Trail", sz)
		local sp = CreateMesh("SpecialMesh", w2, "Wedge", "", "", VT(0, 1, 1) * sz / w2.Size, VT(0, 0, 0))
		w2.Anchored = true
		w2.CFrame = maincf * ANGLES(math.pi, math.pi, -math.pi / 2) * CF(0, width / 2, -len1 - len2 / 2)
		coroutine.resume(coroutine.create(function()
			for i = 0.5, 1, delay * (2 / Animation_Speed) do
				Swait()
				w2.Transparency = i
			end
			w2.Parent = nil
		end))
		game:GetService("Debris"):AddItem(w2, 10)
		--table.insert(list, w2)
	end
	--return unpack(list)
end

--[[Usage:
	local Pos = Part
	local Offset = Part.CFrame * CF(0, 0, 0)
	local Color = "Institutional white"
	local Material = "Neon"
	local TheDelay = 0.01
	local Height = 4
	BLCF = Offset
	if SCFR and (Pos.Position - SCFR.p).magnitude > 0.1 then
		local a, b = Triangle(Color, Material, (SCFR * CF(0, Height / 2,0)).p, (SCFR * CF(0, -Height / 2, 0)).p, (BLCF * CF(0, Height / 2,0)).p, TheDelay)
		if a then game:GetService("Debris"):AddItem(a, 1) end
		if b then game:GetService("Debris"):AddItem(b, 1) end
		local a, b = Triangle(Color, Material, (BLCF * CF(0, Height / 2, 0)).p, (BLCF * CF(0, -Height / 2, 0)).p, (SCFR * CF(0, -Height / 2, 0)).p, TheDelay)
		if a then game:GetService("Debris"):AddItem(a, 1) end
		if b then game:GetService("Debris"):AddItem(b, 1) end
		SCFR = BLCF
	elseif not SCFR then
		SCFR = BLCF
	end
--
BLCF = nil
SCFR = nil
--]]

--//=================================\\
--\\=================================//





--//=================================\\
--||	      RESIZE PLAYER
--\\=================================//

if Player_Size ~= 1 then
RootPart.Size = RootPart.Size * Player_Size
Torso.Size = Torso.Size * Player_Size
Head.Size = Head.Size * Player_Size
RightArm.Size = RightArm.Size * Player_Size
LeftArm.Size = LeftArm.Size * Player_Size
RightLeg.Size = RightLeg.Size * Player_Size
LeftLeg.Size = LeftLeg.Size * Player_Size
RootJoint.Parent = RootPart
Neck.Parent = Torso
RightShoulder.Parent = Torso
LeftShoulder.Parent = Torso
RightHip.Parent = Torso
LeftHip.Parent = Torso
	
RootJoint.C0 = ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0))
	RootJoint.C1 = ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0))
	Neck.C0 = NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(0))
	Neck.C1 = CF(0 * Player_Size, -0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(0), RAD(180))
	RightShoulder.C0 = CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)) * RIGHTSHOULDERC0
	LeftShoulder.C0 = CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)) * LEFTSHOULDERC0
	if Disable_Moving_Arms == false then
		RightShoulder.C1 = ANGLES(0, RAD(90), 0) * CF(0 * Player_Size, 0.5 * Player_Size, -0.5)
		LeftShoulder.C1 = ANGLES(0, RAD(-90), 0) * CF(0 * Player_Size, 0.5 * Player_Size, -0.5)
	else
		RightShoulder.C1 = CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
		LeftShoulder.C1 = CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
	end
	RightHip.C0 = CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0))
	LeftHip.C0 = CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0))
	RightHip.C1 = CF(0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0))
	LeftHip.C1 = CF(-0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0))
end


--//=================================\\
--\\=================================//





--//=================================\\
--||	     WEAPON CREATION
--\\=================================//

local HandlePart = CreatePart(3, Weapon, "SmoothPlastic", 0, 0, "Really black", "Handle", VT(0, 0, 0))
local HandleMesh = CreateMesh("SpecialMesh", HandlePart, "FileMesh", "93180631", "93180676", VT(1, 1, 1), VT(0, 3.1 * Player_Size, 0))
local HandleWeld = CreateWeldOrSnapOrMotor("Weld", HandlePart, Torso, HandlePart, CF(2 * Player_Size, 2 * Player_Size, 0.6 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(135)), CF(0, 0, 0))

local HitboxPart = CreatePart(3, Weapon, "SmoothPlastic", 0, 1, "Really black", "Hitbox", VT(0, 0, 0))
local HitboxWeld = CreateWeldOrSnapOrMotor("Weld", HitboxPart, HandlePart, HitboxPart, CF(0 * Player_Size, 4 * Player_Size, 0 * Player_Size), CF(0, 0, 0))

local EffectPart = CreatePart(3, Weapon, "SmoothPlastic", 0, 1, "Really black", "Effect Part", VT(0, 0, 0))
local EffectWeld = CreateWeldOrSnapOrMotor("Weld", EffectPart, HandlePart, EffectPart, CF(0 * Player_Size, 7 * Player_Size, 0 * Player_Size), CF(0, 0, 0))

if Player_Size ~= 1 then
	for _, v in pairs (Weapon:GetChildren()) do
		if v.ClassName == "Motor" or v.ClassName == "Weld" or v.ClassName == "Snap" then
			local p1 = v.Part1
			v.Part1 = nil
			local cf1, cf2, cf3, cf4, cf5, cf6, cf7, cf8, cf9, cf10, cf11, cf12 = v.C1:components()
			v.C1 = CF(cf1 * Player_Size, cf2 * Player_Size, cf3 * Player_Size, cf4, cf5, cf6, cf7, cf8, cf9, cf10, cf11, cf12)
			v.Part1 = p1
		elseif v.ClassName == "Part" then
			for _, b in pairs (v:GetChildren()) do
				if b.ClassName == "SpecialMesh" or b.ClassName == "BlockMesh" then
					b.Scale = VT(b.Scale.x * Player_Size, b.Scale.y * Player_Size, b.Scale.z * Player_Size)
				end
			end
		end
	end
end

for _, c in pairs(Weapon:GetChildren()) do
	if c.ClassName == "Part" then
		c.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
	end
end

if Start_Equipped == true and Start_Equipped_With_Equipped_Animation == false then
	HandleWeld.Part0 = RightArm
	HandleWeld.C0 = CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0))
end

Weapon.Parent = Character

Humanoid.Died:connect(function()
	ATTACK = true
end)

print(Class_Name.." loaded.")

--//=================================\\
--\\=================================//





--//=================================\\
--||	     DAMAGE FUNCTIONS
--\\=================================//

function StatLabel(LABELTYPE, CFRAME, TEXT, COLOR)
	local STATPART = CreatePart(3, Effects, "SmoothPlastic", 0, 1, "Really black", "Effect", VT())
	STATPART.CFrame = CF(CFRAME.p + VT(0, 1.5, 0))
	local BODYGYRO = IT("BodyGyro", STATPART)
	local BODYPOSITION = IT("BodyPosition", STATPART)
	BODYPOSITION.P = 2000
	BODYPOSITION.D = 100
	BODYPOSITION.maxForce = VT(math.huge, math.huge, math.huge)
	if LABELTYPE == "Normal" then
		BODYPOSITION.position = STATPART.Position + VT(MRANDOM(-2, 2), 6, MRANDOM(-2, 2))
	elseif LABELTYPE == "Debuff" then
		BODYPOSITION.position = STATPART.Position + VT(MRANDOM(-2, 2), 8, MRANDOM(-2, 2))
	elseif LABELTYPE == "Interruption" then
		BODYPOSITION.position = STATPART.Position + VT(MRANDOM(-2,2), 8, MRANDOM(-2, 2))
	end
	game:GetService("Debris"):AddItem(STATPART ,5)
	local BILLBOARDGUI = Instance.new("BillboardGui", STATPART)
	BILLBOARDGUI.Adornee = STATPART
	BILLBOARDGUI.Size = UD2(2.5, 0, 2.5 ,0)
	BILLBOARDGUI.StudsOffset = VT(-2, 2, 0)
	BILLBOARDGUI.AlwaysOnTop = false
	local TEXTLABEL = Instance.new("TextLabel", BILLBOARDGUI)
	TEXTLABEL.BackgroundTransparency = 1
	TEXTLABEL.Size = UD2(2.5, 0, 2.5, 0)
	TEXTLABEL.Text = TEXT
	TEXTLABEL.Font = "SourceSans"
	TEXTLABEL.FontSize="Size42"
	TEXTLABEL.TextColor3 = COLOR
	TEXTLABEL.TextStrokeTransparency = 0
	TEXTLABEL.TextScaled = true
	TEXTLABEL.TextWrapped = true
	coroutine.resume(coroutine.create(function(THEPART, THEBODYPOSITION, THETEXTLABEL)
		wait(0.2)
		for i=1, 5 do
			wait()
			THEBODYPOSITION.Position = THEPART.Position - VT(0, 0.5 ,0)
		end
		wait(1.2)
		for i=1, 5 do
			wait()
			THETEXTLABEL.TextTransparency = THETEXTLABEL.TextTransparency + 0.2
			THETEXTLABEL.TextStrokeTransparency = THETEXTLABEL.TextStrokeTransparency + 0.2
			THEBODYPOSITION.position = THEPART.Position + VT(0, 0.5, 0)
		end
		THEPART.Parent = nil
	end),STATPART, BODYPOSITION, TEXTLABEL)
end

function IncreaseOrDecreaseStat(LOCATION, STAT, AMOUNT, DURATION, SHOWTHESTAT)
	if LOCATION:FindFirstChild("Stats") ~= nil then
		if LOCATION.Stats:FindFirstChild("Block") ~= nil then
			if LOCATION.Stats:FindFirstChild("Block").Value == true then
				return
			end
		end
		if LOCATION.Stats:FindFirstChild("ChangeStat") ~= nil and LOCATION.Stats:FindFirstChild("Block").Value == false then
			local NewStatChange = IT("NumberValue")
			NewStatChange.Value = AMOUNT
			if STAT == "Defense" then
				NewStatChange.Name = "ChangeDefense"
			elseif STAT == "Damage" then
				NewStatChange.Name = "ChangeDamage"
			elseif STAT == "Movement" then
				NewStatChange.Name = "ChangeMovement"
			end
			if SHOWTHESTAT == true then
				if AMOUNT < 0 then
					StatLabel("Debuff", LOCATION.Head.CFrame * CF(0, 0 + (LOCATION.Head.Size.z - 1), 0), "-"..STAT, C3(1, 1, 1))
				elseif AMOUNT > 0 then
					StatLabel("Debuff", LOCATION.Head.CFrame * CF(0, 0 + (LOCATION.Head.Size.z - 1), 0), "+"..STAT, C3(1, 1, 1))
				end
			end
			if DURATION ~= nil and DURATION ~= 0 then
				local StatDuration = IT("NumberValue")
				StatDuration.Name = "Duration"
				StatDuration.Value = DURATION
				StatDuration.Parent = NewStatChange
			end
			NewStatChange.Parent = LOCATION.Stats:FindFirstChild("ChangeStat")
		end
	end
end

--Usage: DamageFunction(HITWEAPONSOUNDS[MRANDOM(1, #HITWEAPONSOUNDS)], HITARMORSOUNDS[MRANDOM(1, #HITARMORSOUNDS)], HITBLOCKSOUNDS[MRANDOM(1, #HITBLOCKSOUNDS)], HITPLAYERSOUNDS[MRANDOM(1, #HITPLAYERSOUNDS)], 1, 1, 1, 1, hit, false, 5, 10, MRANDOM(5, 10), "Normal", Part, 0.5, false, true, 1, MRANDOM(5, 10), nil, true, false, nil, 0, 0, false)
function DamageFunction(HITWEAPONSOUND, HITARMORSOUND, HITBLOCKSOUND, HITPLAYERSOUND, HITWEAPONSOUNDPITCH, HITARMORSOUNDPITCH, HITBLOCKSOUNDPITCH, HITPLAYERSOUNDPITCH, HIT, HITEVENWHENDEAD, MINIMUMDAMAGE, MAXIMUMDAMAGE, KNOCKBACK, TYPE, PROPERTY, DELAY, KNOCKBACKTYPE, INCREASESTUN, STAGGER, STAGGERHIT, RANGED, DECREASETHESTAT, DECREASEAMOUNT, DECREASEDURATION, SHOWDECREASEDSTAT)
	if HIT.Parent == nil then
		return
	end
	local HITHUMANOID = HIT.Parent:FindFirstChild("Humanoid")
	for _, v in pairs(HIT.Parent:GetChildren()) do
		if v:IsA("Humanoid") then
			HITHUMANOID = v
		end
	end
	if HIT.Name == "Hitbox" and RANGED ~= true and HIT.Parent ~= Weapon and Enable_Stagger_Hit == true then
		StaggerHit.Value = true
		if Play_Hitbox_Hit_Sound == true then
			if HITWEAPONSOUND ~= "" and HITWEAPONSOUND ~= "nil" then
				CreateSound(HITWEAPONSOUND, HIT, 1, HITWEAPONSOUNDPITCH)
			end
		end
		return
	end
	if HIT.Parent.Parent:FindFirstChild("Torso") ~= nil or HIT.Parent.Parent:FindFirstChild("UpperTorso") ~= nil then
		HITHUMANOID = HIT.Parent.Parent:FindFirstChild("Humanoid")
	end
	if HIT.Parent.ClassName == "Hat" or HIT.ClassName == "Accessory" then
		HIT = HIT.Parent.Parent:FindFirstChild("Head")
	end
	if HITHUMANOID ~= nil and HIT.Parent.Name ~= Character.Name and (HIT.Parent:FindFirstChild("Torso") ~= nil or HIT.Parent:FindFirstChild("UpperTorso") ~= nil) then
		if HIT.Parent:FindFirstChild("DebounceHit") ~= nil then
			if HIT.Parent.DebounceHit.Value == true then
				return
			end
		end
		if AntiTeamKill.Value == true then
			if Player.Neutral == false and game.Players:GetPlayerFromCharacter(HIT.Parent) ~= nil then
				if game.Players:GetPlayerFromCharacter(HIT.Parent).TeamColor == Player.TeamColor then
					return
				end
			end
		end
		if HITEVENWHENDEAD == false then
			if HIT.Parent:FindFirstChild("Humanoid") ~= nil then
				if HIT.Parent:FindFirstChild("Humanoid").Health <= 0 then
					return
				end
			end
		end
		if HIT.Parent:FindFirstChild("Stats") ~= nil then
			if HIT.Parent.Stats:FindFirstChild("StunValue") ~= nil then
				HIT.Parent.Stats:FindFirstChild("StunValue").Value = HIT.Parent.Stats:FindFirstChild("StunValue").Value + INCREASESTUN
			end
		end
		if HIT.Parent:FindFirstChild("Stats") ~= nil then
			if HIT.Parent.Stats:FindFirstChild("Stagger") ~= nil then
				if STAGGER == true and Enable_Stagger == true then
					HIT.Parent.Stats:FindFirstChild("Stagger").Value = true
				end
			end
		end
		if HIT.Parent:FindFirstChild("Stats") ~= nil then
			if HIT.Parent.Stats:FindFirstChild("Block") ~= nil then
				if HIT.Parent.Stats:FindFirstChild("Block").Value == true then
					HASBEENBLOCKED = true
					if HIT.Parent.Stats:FindFirstChild("Block"):FindFirstChild("BlockDebounce") == nil then
						StatLabel("Interruption", HIT.Parent.Head.CFrame * CF(0, 0 + (HIT.Parent.Head.Size.z - 1), 0), "Blocked!", C3(0, 100 / 255, 255 / 255))
						if RANGED ~= true then
							if HITBLOCKSOUND ~= "" and HITBLOCKSOUND ~= "nil" then
								CreateSound(HITBLOCKSOUND, HIT, 1, HITBLOCKSOUNDPITCH)
							end
						end
						local BlockDebounce = IT("BoolValue", HIT.Parent.Stats:FindFirstChild("Block"))
						BlockDebounce.Name = "BlockDebounce"
						BlockDebounce.Value = true
						if RANGED ~= true then
							game:GetService("Debris"):AddItem(BlockDebounce, 0.5)
						else
							game:GetService("Debris"):AddItem(BlockDebounce, 0.1)
						end
					end
					if RANGED ~= true and Enable_Stagger == true then
						HIT.Parent.Stats:FindFirstChild("Block").Value = false
						Stagger.Value = true
					end
					return
				end
			end
		end
		if DECREASETHESTAT ~= nil then
			if HIT.Parent:FindFirstChild("Stats") ~= nil then
				IncreaseOrDecreaseStat(HIT.Parent, DECREASETHESTAT, DECREASEAMOUNT, DECREASEDURATION, SHOWDECREASEDSTAT)
			end
		end
		local DAMAGE = MRANDOM(MINIMUMDAMAGE,MAXIMUMDAMAGE) * Damage.Value
		if HIT.Parent:FindFirstChild("Stats") ~= nil then
			if HIT.Parent.Stats:FindFirstChild("Defense") ~= nil then
				if CanPenetrateArmor.Value == true then
					DAMAGE = DAMAGE
				else
					DAMAGE = DAMAGE / HIT.Parent.Stats:FindFirstChild("Defense").Value
				end
			elseif HIT.Parent.Stats:FindFirstChild("Defense") == nil then
				DAMAGE = DAMAGE
			end
		end
		if CanCrit.Value == true then
			CRITCHANCENUMBER = MRANDOM(1, CritChance.Value)
			if CRITCHANCENUMBER == 1 then
				DAMAGE = DAMAGE * 2
			end
		end
		DAMAGE = math.floor(DAMAGE)
		if HASBEENBLOCKED == false then
			HITHUMANOID.Health = HITHUMANOID.Health - DAMAGE
		end
		if DAMAGE <= 3 and HASBEENBLOCKED == false then
			if STAGGERHIT == true and Enable_Stagger_Hit == true and RANGED ~= true then
				StaggerHit.Value = true
			end
			if HITARMORSOUND ~= "" and HITARMORSOUND ~= "nil" then
				CreateSound(HITARMORSOUND, HIT, 1, HITARMORSOUNDPITCH)
			end
		elseif DAMAGE > 3 and HASBEENBLOCKED == false then
			if HITPLAYERSOUND ~= "" and HITPLAYERSOUND ~= "nil" then
				CreateSound(HITPLAYERSOUND, HIT, 1, HITPLAYERSOUNDPITCH)
			end
		end
		if DAMAGE > 3 and DAMAGE < 20 and HASBEENBLOCKED == false then
			if CanCrit.Value == true and CRITCHANCENUMBER == 1 then
				StatLabel("Normal", HIT.Parent.Head.CFrame * CF(0, 0 + (HIT.Parent.Head.Size.z - 1), 0), "Crit! \n"..DAMAGE, C3(200/255, 0, 0))
				CreateSound("296102734", HIT, 1, 1)
			else
				StatLabel("Normal", HIT.Parent.Head.CFrame * CF(0, 0 + (HIT.Parent.Head.Size.z - 1), 0), DAMAGE, C3(255/255, 220/255, 0))
			end
		elseif DAMAGE >= 20 and HASBEENBLOCKED == false then
			if CanCrit.Value == true and CRITCHANCENUMBER == 1 then
				StatLabel("Normal", HIT.Parent.Head.CFrame * CF(0, 0 + (HIT.Parent.Head.Size.z - 1), 0), "Crit! \n"..DAMAGE, C3(200/255, 0, 0))
				CreateSound("296102734", HIT, 1, 1)
			else
				StatLabel("Normal", HIT.Parent.Head.CFrame * CF(0, 0 + (HIT.Parent.Head.Size.z - 1), 0), DAMAGE, C3(255/255, 0, 0))
			end
		elseif DAMAGE <= 3 and HASBEENBLOCKED == false then
			if CanCrit.Value == true and CRITCHANCENUMBER == 1 then
				StatLabel("Normal", HIT.Parent.Head.CFrame * CF(0, 0 + (HIT.Parent.Head.Size.z - 1), 0), "Crit! \n"..DAMAGE, C3(200/255, 0, 0))
				CreateSound("296102734", HIT, 1, 1)
			else
				StatLabel("Normal", HIT.Parent.Head.CFrame * CF(0, 0 + (HIT.Parent.Head.Size.z - 1), 0), DAMAGE, C3(225/255, 225/255, 225/255))
			end
		end
		if TYPE == "Normal" then
			local vp = IT("BodyVelocity")
			vp.P=500
			vp.maxForce = VT(math.huge, 0, math.huge)
			if KNOCKBACKTYPE == 1 then
				vp.Velocity = PROPERTY.CFrame.lookVector * KNOCKBACK + PROPERTY.Velocity / 1.05
			elseif KNOCKBACKTYPE == 2 then
				vp.Velocity = PROPERTY.CFrame.lookVector * KNOCKBACK
			end
			if KNOCKBACK > 0 and HASBEENBLOCKED == false then
				vp.Parent = HIT--.Parent.Torso
			end
			game:GetService("Debris"):AddItem(vp, 0.5)
		end
		HASBEENBLOCKED = false
		RecentEnemy.Value = HIT.Parent
		local DebounceHit = IT("BoolValue", HIT.Parent)
		DebounceHit.Name = "DebounceHit"
		DebounceHit.Value = true
		game:GetService("Debris"):AddItem(DebounceHit, DELAY)
	end
end

--Usage: MagnitudeDamage(HITWEAPONSOUNDS[MRANDOM(1, #HITWEAPONSOUNDS)], HITARMORSOUNDS[MRANDOM(1, #HITARMORSOUNDS)], HITBLOCKSOUNDS[MRANDOM(1, #HITBLOCKSOUNDS)], HITPLAYERSOUNDS[MRANDOM(1, #HITPLAYERSOUNDS)], 1, 1, 1, 1, Part, 5, true, 5, 10, MRANDOM(5, 10), "Normal", Part, 0.5, false, true, 1, MRANDOM(5, 10), nil, true, false, nil, 0, 0, false)
function MagnitudeDamage(HITWEAPONSOUND, HITARMORSOUND, HITBLOCKSOUND, HITPLAYERSOUND, HITWEAPONSOUNDPITCH, HITARMORSOUNDPITCH, HITBLOCKSOUNDPITCH, HITPLAYERSOUNDPITCH, PART, MAGNITUDE, HITEVENWHENDEAD, MINIMUMDAMAGE, MAXIMUMDAMAGE, KNOCKBACK, TYPE, PROPERTY, DELAY, KNOCKBACKTYPE, INCREASESTUN, STAGGER, STAGGERHIT, RANGED, MAGNITUDEDECREASETHESTAT, MAGNITUDEDECREASEAMOUNT, MAGNITUDEDECREASEDURATION, MAGNITUDESHOWDECREASEDSTAT)
	for _, c in pairs(workspace:GetChildren()) do
		local HUMANOID = c:FindFirstChild("Humanoid")
		local HEAD = nil
		if HUMANOID ~= nil then
			for _, d in pairs(c:GetChildren()) do
				if d.ClassName == "Model" and RANGED ~= true then
					HEAD = d:FindFirstChild("Hitbox")
					if HEAD ~= nil then
						local THEMAGNITUDE = (HEAD.Position - PART.Position).magnitude
						if THEMAGNITUDE <= (MAGNITUDE * Player_Size) and c.Name ~= Player.Name then
							if Play_Hitbox_Hit_Sound == true then
								local HitRefpart = CreatePart(3, Effects, "SmoothPlastic", 0, 1, "Really black", "Effect", VT())
								HitRefpart.Anchored = true
								HitRefpart.CFrame = CF(HEAD.Position)
								CreateSound(HITWEAPONSOUND, HitRefpart, 1, HITWEAPONSOUNDPITCH)
							end
							if Enable_Stagger_Hit == true then
								StaggerHit.Value = true
							end
						end
					end
				elseif d:IsA"BasePart" then
					HEAD = d
					if HEAD ~= nil then
						local THEMAGNITUDE = (HEAD.Position - PART.Position).magnitude
						if THEMAGNITUDE <= (MAGNITUDE * Player_Size) and c.Name ~= Player.Name then
							DamageFunction(HITWEAPONSOUND, HITARMORSOUND, HITBLOCKSOUND, HITPLAYERSOUND, HITWEAPONSOUNDPITCH, HITARMORSOUNDPITCH, HITBLOCKSOUNDPITCH, HITPLAYERSOUNDPITCH, HEAD, HITEVENWHENDEAD, MINIMUMDAMAGE, MAXIMUMDAMAGE, KNOCKBACK, TYPE, PROPERTY, DELAY, KNOCKBACKTYPE, INCREASESTUN, STAGGER, STAGGERHIT, RANGED, MAGNITUDEDECREASETHESTAT, MAGNITUDEDECREASEAMOUNT, MAGNITUDEDECREASEDURATION, MAGNITUDESHOWDECREASEDSTAT)
						end
					end
				end
			end
		end
	end
end

--Usage: MagnitudeBuffOrDebuff(Part, 5, "Defense", -0.1, 3, true, true)
function MagnitudeBuffOrDebuff(PART, MAGNITUDE, STAT, AMOUNT, DURATION, SHOWBUFFORDEBUFF, APPLYTOOTHERSINSTEAD)
	if Player.Neutral == true then
		IncreaseOrDecreaseStat(Character, STAT, AMOUNT, DURATION, SHOWBUFFORDEBUFF)
	end
	for _, c in pairs(workspace:GetChildren()) do
		local HUMANOID = c:FindFirstChild("Humanoid")
		local THEHEAD = nil
		if HUMANOID ~= nil then
			if c:FindFirstChild("Torso") ~= nil then
				THEHEAD = c:FindFirstChild("Torso")
			elseif c:FindFirstChild("UpperTorso") ~= nil then
				THEHEAD = c:FindFirstChild("UpperTorso")
			end
			if THEHEAD ~= nil then
				local THEMAGNITUDE = (THEHEAD.Position - PART.Position).magnitude
				print("yes 1")
				if APPLYTOOTHERSINSTEAD == true then
					if THEMAGNITUDE <= (MAGNITUDE * Player_Size) and c.Name ~= Player.Name then
						if Player.Neutral == false and game.Players:GetPlayerFromCharacter(THEHEAD.Parent) ~= nil then
							if game.Players:GetPlayerFromCharacter(THEHEAD.Parent).TeamColor == Player.TeamColor then
								IncreaseOrDecreaseStat(THEHEAD.Parent, STAT, AMOUNT, DURATION, SHOWBUFFORDEBUFF)
							end
						end
					end
				elseif APPLYTOOTHERSINSTEAD == false then
					if THEMAGNITUDE <= (MAGNITUDE * Player_Size) then
						if Player.Neutral == false and game.Players:GetPlayerFromCharacter(THEHEAD.Parent) ~= nil then
							if game.Players:GetPlayerFromCharacter(THEHEAD.Parent).TeamColor == Player.TeamColor then
								IncreaseOrDecreaseStat(THEHEAD.Parent, STAT, AMOUNT, DURATION, SHOWBUFFORDEBUFF)
							end
						end
					end
				end
			end
		end
	end
end

--//=================================\\
--\\=================================//





--//=================================\\
--||			WEAPON GUI
--\\=================================//

local MANABAR = CreateFrame(WEAPONGUI, Mana_Bar_Background_Transparency, 2, UD2(0.23, 0, 0.82, 0), UD2(0.26, 0, 0, 0), C3(Custom_Colors.Custom_Color_8.r, Custom_Colors.Custom_Color_8.g, Custom_Colors.Custom_Color_8.b), C3(0, 0, 0),"Mana Bar") 
local MANACOVER = CreateFrame(MANABAR, 0, 2, UD2(0, 0, 0, 0), UD2(0, 0, 1, 0), C3(Custom_Colors.Custom_Color_5.r, Custom_Colors.Custom_Color_5.g, Custom_Colors.Custom_Color_5.b), C3(0, 0, 0),"Mana Cover")
local MANATEXT = CreateLabel(MANABAR, Mana_Name.." ["..FLOOR(Mana.Value).."]", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Mana Text")

local HEALTHBAR = CreateFrame(WEAPONGUI, Health_Bar_Background_Transparency, 2, UD2(0.5, 0, 0.82, 0), UD2(0.26, 0, 0, 0), C3(Custom_Colors.Custom_Color_11.r, Custom_Colors.Custom_Color_11.g, Custom_Colors.Custom_Color_11.b), C3(0, 0, 0), "Health Bar")
local HEALTHCOVER = CreateFrame(HEALTHBAR, 0, 2,UD2(0, 0, 0, 0), UD2(0, 0, 1, 0), C3(Custom_Colors.Custom_Color_6.r, Custom_Colors.Custom_Color_6.g, Custom_Colors.Custom_Color_6.b), C3(0, 0, 0), "Health Cover")
local HEALTHTEXT = CreateLabel(HEALTHBAR, "Health ["..FLOOR(Humanoid.Health).."]", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Health Text")

local STUNFRAME = CreateFrame(nil, Stun_Bar_Background_Transparency, 2, UD2(0.5, 0, 0.78, 0),UD2(0.26, 0, 0, 0),C3(Custom_Colors.Custom_Color_10.r, Custom_Colors.Custom_Color_10.g, Custom_Colors.Custom_Color_10.b), C3(0, 0, 0), "Stun Frame")
local STUNBAR = CreateFrame(STUNFRAME, 0, 2, UD2(0, 0, 0, 0),UD2(0, 0, 1, 0),C3(Custom_Colors.Custom_Color_7.r, Custom_Colors.Custom_Color_7.g, Custom_Colors.Custom_Color_7.b), C3(0, 0, 0), "Stun Bar")
local STUNTEXT = CreateLabel(STUNFRAME, "Stun ["..FLOOR(StunValue.Value).."]", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Stun Text")

local SECONDARYMANABAR = CreateFrame(nil, Secondary_Mana_Bar_Background_Transparency, 2, UD2(0.23, 0, 0.78, 0), UD2(0.26, 0, 0, 0), C3(Custom_Colors.Custom_Color_9.r, Custom_Colors.Custom_Color_9.g, Custom_Colors.Custom_Color_9.b), C3(0, 0, 0),"Secondary Mana Bar") 
local SECONDARYMANACOVER = CreateFrame(SECONDARYMANABAR, 0, 2, UD2(0, 0, 0, 0), UD2(0, 0, 1, 0), C3(Custom_Colors.Custom_Color_4.r, Custom_Colors.Custom_Color_4.g, Custom_Colors.Custom_Color_4.b), C3(0, 0, 0),"Secondary Mana Cover")
local SECONDARYMANATEXT = CreateLabel(SECONDARYMANABAR, Secondary_Mana_Name.." ["..FLOOR(SecondaryMana.Value).."]", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Secondary Mana Text")

local DEFENSEFRAME = CreateFrame(nil, Stat_Background_Transparency, 2, UD2(0.23, 0, Stat_Offset, 0), UD2(0.075, 0, 0, 0), C3(100 / 255, 100 / 255, 255 / 255), C3(0, 0, 0),"Defense Frame")
local DEFENSETEXT = CreateLabel(DEFENSEFRAME, "Defense ["..(Defense.Value * 100).."%]", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Defense Text")

local DAMAGEFRAME = CreateFrame(nil, Stat_Background_Transparency, 2, UD2(0.456, 0, Stat_Offset, 0), UD2(0.075, 0, 0, 0), C3(255 / 255, 100 / 255, 100 / 255), C3(0, 0, 0),"Damage Frame")
local DAMAGETEXT = CreateLabel(DAMAGEFRAME, "Damage ["..(Damage.Value * 100).."%]", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Damage Text")

local MOVEMENTFRAME = CreateFrame(nil, Stat_Background_Transparency, 2, UD2(0.685, 0, Stat_Offset, 0), UD2(0.075, 0, 0, 0), C3(100 / 255, 255 / 255, 100 / 255), C3(0, 0, 0),"Movement Frame")
local MOVEMENTTEXT = CreateLabel(MOVEMENTFRAME, "Movement ["..(Movement.Value * 100).."%]", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Movement Text")

local SKILL1FRAME = CreateFrame(nil, Ability_Background_Transparency, 2, UD2(0.23, 0, 0.86, 0), UD2(0.26, 0, 0, 0), C3(Custom_Colors.Custom_Color_12.r, Custom_Colors.Custom_Color_12.g, Custom_Colors.Custom_Color_12.b), C3(0, 0, 0), "Skill 1 Frame")
local SKILL2FRAME = CreateFrame(nil, Ability_Background_Transparency, 2, UD2(0.50, 0, 0.86, 0), UD2(0.26, 0, 0, 0), C3(Custom_Colors.Custom_Color_12.r, Custom_Colors.Custom_Color_12.g, Custom_Colors.Custom_Color_12.b), C3(0, 0, 0), "Skill 2 Frame")
local SKILL3FRAME = CreateFrame(nil, Ability_Background_Transparency, 2, UD2(0.23, 0, 0.93, 0), UD2(0.26, 0, 0, 0), C3(Custom_Colors.Custom_Color_12.r, Custom_Colors.Custom_Color_12.g, Custom_Colors.Custom_Color_12.b), C3(0, 0, 0), "Skill 3 Frame")
local SKILL4FRAME = CreateFrame(nil, Ability_Background_Transparency, 2, UD2(0.50, 0, 0.93, 0), UD2(0.26, 0, 0, 0), C3(Custom_Colors.Custom_Color_12.r, Custom_Colors.Custom_Color_12.g, Custom_Colors.Custom_Color_12.b), C3(0, 0, 0), "Skill 4 Frame")

local SKILL1BAR = CreateFrame(SKILL1FRAME, 0, 2, UD2(0, 0, 0, 0), UD2(0, 0, 1, 0), C3(Custom_Colors.Custom_Color_3.r, Custom_Colors.Custom_Color_3.g, Custom_Colors.Custom_Color_3.b), C3(0, 0, 0), "Skill 1 Bar")
local SKILL2BAR = CreateFrame(SKILL2FRAME, 0, 2, UD2(0, 0, 0, 0), UD2(0, 0, 1, 0), C3(Custom_Colors.Custom_Color_3.r, Custom_Colors.Custom_Color_3.g, Custom_Colors.Custom_Color_3.b), C3(0, 0, 0), "Skill 2 Bar")
local SKILL3BAR = CreateFrame(SKILL3FRAME, 0, 2, UD2(0, 0, 0, 0), UD2(0, 0, 1, 0), C3(Custom_Colors.Custom_Color_3.r, Custom_Colors.Custom_Color_3.g, Custom_Colors.Custom_Color_3.b), C3(0, 0, 0), "Skill 3 Bar")
local SKILL4BAR = CreateFrame(SKILL4FRAME, 0, 2, UD2(0, 0, 0, 0), UD2(0, 0, 1, 0), C3(Custom_Colors.Custom_Color_3.r, Custom_Colors.Custom_Color_3.g, Custom_Colors.Custom_Color_3.b), C3(0, 0, 0), "Skill 4 Bar")

local SKILL1TEXT = CreateLabel(SKILL1FRAME, "[Z] Ability 1", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Text 1")
local SKILL2TEXT = CreateLabel(SKILL2FRAME, "[X] Ability 2", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Text 2")
local SKILL3TEXT = CreateLabel(SKILL3FRAME, "[C] Ability 3", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Text 3")
local SKILL4TEXT = CreateLabel(SKILL4FRAME, "[V] Ability 4", C3(1, 1, 1), "Size32", "Legacy", 1, 2, 1, "Text 4")

if Enable_Gui == true then
	WEAPONGUI.Parent = PlayerGui
end

if Enable_Stats == true and Show_Stats == true then
	DEFENSEFRAME.Parent = WEAPONGUI
	DAMAGEFRAME.Parent = WEAPONGUI
	MOVEMENTFRAME.Parent = WEAPONGUI
end

if Enable_Secondary_Bar == true then
	SECONDARYMANABAR.Parent = WEAPONGUI
end

if Enable_Abilities == true then
	SKILL1FRAME.Parent = WEAPONGUI
	SKILL2FRAME.Parent = WEAPONGUI
	SKILL3FRAME.Parent = WEAPONGUI
	SKILL4FRAME.Parent = WEAPONGUI
end

if Enable_Stun == true then
	STUNFRAME.Parent = WEAPONGUI
end

function UpdateGUI()
	MANABAR:TweenSize(UD2(0.26, 0, 0.03, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
	MANACOVER:TweenSize(UD2(1 * (Mana.Value / Max_Mana), 0, 1, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
	MANATEXT.Text = Mana_Name.." ["..FLOOR(Mana.Value).."]"
	HEALTHBAR:TweenSize(UD2(0.26, 0, 0.03, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
	HEALTHCOVER:TweenSize(UD2(1 * (Humanoid.Health / Humanoid.MaxHealth), 0, 1, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
	HEALTHTEXT.Text = "Health ["..FLOOR(Humanoid.Health).."]"
	if Enable_Abilities == true then
		SKILL1FRAME:TweenSize(UD2(0.26, 0, 0.06, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SKILL2FRAME:TweenSize(UD2(0.26, 0, 0.06, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SKILL3FRAME:TweenSize(UD2(0.26, 0, 0.06, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SKILL4FRAME:TweenSize(UD2(0.26, 0, 0.06, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SKILL1BAR:TweenSize(UD2(1 * (CO1 / Cooldown_1), 0, 1, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SKILL2BAR:TweenSize(UD2(1 * (CO2 / Cooldown_2), 0, 1, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SKILL3BAR:TweenSize(UD2(1 * (CO3 / Cooldown_3), 0, 1, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SKILL4BAR:TweenSize(UD2(1 * (CO4 / Cooldown_4), 0, 1, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
	end
	if Enable_Stats == true and Show_Stats == true then
		DEFENSEFRAME:TweenSize(UD2(0.075, 0, 0.03), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		DEFENSETEXT.Text = "Defense ["..(Defense.Value * 100).."%]"
		DAMAGEFRAME:TweenSize(UD2(0.075, 0, 0.03), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		DAMAGETEXT.Text = "Damage ["..(Damage.Value * 100).."%]"
		MOVEMENTFRAME:TweenSize(UD2(0.075, 0, 0.03), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		MOVEMENTTEXT.Text = "Movement ["..(Movement.Value * 100).."%]"
	end
	if Enable_Stun == true then
		STUNFRAME:TweenSize(UD2(0.26, 0, 0.03, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		STUNBAR:TweenSize(UD2(1 * (StunValue.Value / Max_Stun), 0, 1, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		STUNTEXT.Text = "Stun ["..FLOOR(StunValue.Value).."]"
	end
	if Enable_Secondary_Bar == true then
		SECONDARYMANABAR:TweenSize(UD2(0.26, 0, 0.03, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SECONDARYMANACOVER:TweenSize(UD2(1 * (SecondaryMana.Value / Max_Secondary_Mana), 0, 1, 0), "Out", "Quad", Menu_Update_Speed, Constant_Update)
		SECONDARYMANATEXT.Text = Secondary_Mana_Name.." ["..FLOOR(SecondaryMana.Value).."]"
	end
end

if Enable_Gui == true then
	UpdateGUI()
	for _, v in pairs (WEAPONGUI:GetChildren()) do
		if v.ClassName == "Frame" then
			for _, b in pairs (v:GetChildren()) do
				if b.ClassName == "TextLabel" then
					coroutine.resume(coroutine.create(function(THETEXTLABEL)
						wait(Menu_Update_Speed)
						for i = 1, 0, -0.1 do
							Swait()
							THETEXTLABEL.TextTransparency = i
							THETEXTLABEL.TextStrokeTransparency = i
							end
						THETEXTLABEL.TextTransparency = 0
						THETEXTLABEL.TextStrokeTransparency = 0
					end), b)
				end
			end
		end
	end
end

--//=================================\\
--\\=================================//





--//=================================\\
--||	     SKILL FUNCTIONS
--\\=================================//

function UpdateSkillsAndStuff()
	if Mana_Regen_Mode == "1" then
		if Mana.Value >= Max_Mana then
			Mana.Value = Max_Mana
		elseif Mana.Value < 0 then
			Mana.Value = 0
		else
			if MANADELAYNUMBER <= Mana_Wait then
				MANADELAYNUMBER = MANADELAYNUMBER + 1
			else
				MANADELAYNUMBER = 0
				Mana.Value = Mana.Value + Recover_Mana
			end
		end
	elseif Mana_Regen_Mode == "2" then
		if Mana.Value <= Max_Mana then
			Mana.Value = Mana.Value + (Recover_Mana / 30) / Animation_Speed
		elseif Mana.Value >= Max_Mana then
			Mana.Value = Max_Mana
		elseif Mana.Value < 0 then
			Mana.Value = 0
		end
	end
	if Enable_Secondary_Bar == true then
		if Secondary_Mana_Regen_Mode == "1" then
			if SecondaryMana.Value >= Max_Secondary_Mana then
				SecondaryMana.Value = Max_Secondary_Mana
			elseif SecondaryMana.Value < 0 then
				SecondaryMana.Value = 0
			else
				if SECONDARYMANADELAYNUMBER <= Secondary_Mana_Wait then
					SECONDARYMANADELAYNUMBER = SECONDARYMANADELAYNUMBER + 1
				else
					SECONDARYMANADELAYNUMBER = 0
					SecondaryMana.Value = SecondaryMana.Value + Recover_Secondary_Mana
				end
			end
		elseif Secondary_Mana_Regen_Mode == "2" then
			if SecondaryMana.Value <= Max_Secondary_Mana then
				SecondaryMana.Value = SecondaryMana.Value + (Recover_Secondary_Mana / 30) / Animation_Speed
			elseif SecondaryMana.Value >= Max_Secondary_Mana then
				SecondaryMana.Value = Max_Secondary_Mana
			elseif SecondaryMana.Value < 0 then
				SecondaryMana.Value = 0
			end
		end
	else
		SecondaryMana.Value = 0
	end
	if Enable_Stun == true then
		if Stun_Lose_Mode == "1" then
			if StunValue.Value > Max_Stun then
				StunValue.Value = Max_Stun
			elseif StunValue.Value <= 0 then
				StunValue.Value = 0
			else
				if STUNDELAYNUMBER <= Stun_Wait then
					STUNDELAYNUMBER = STUNDELAYNUMBER + 1
				else
					STUNDELAYNUMBER = 0
					StunValue.Value = StunValue.Value - Lose_Stun
				end
			end
		elseif Stun_Lose_Mode == "2" then
			if StunValue.Value <= Max_Stun and StunValue.Value > 0 then
				StunValue.Value = StunValue.Value - (Lose_Stun / 30) / Animation_Speed
			elseif StunValue.Value > Max_Stun then
				StunValue.Value = Max_Stun
			elseif StunValue.Value <= 0 then
				StunValue.Value = 0
			end
		end
	else
		StunValue.Value = 0
	end
	if Enable_Abilities == true then
		if CO1 <= Cooldown_1 then
			CO1 = CO1 + (1 / 30) / Animation_Speed
		elseif CO1 >= Cooldown_1 then
			CO1 = Cooldown_1
		end
		if CO2 <= Cooldown_2 then
			CO2 = CO2 + (1 / 30) / Animation_Speed
		elseif CO2 >= Cooldown_2 then
			CO2 = Cooldown_2
		end
		if CO3 <= Cooldown_3 then
			CO3 = CO3 + (1 / 30) / Animation_Speed
		elseif CO3 >= Cooldown_3 then
			CO3 = Cooldown_3
		end
		if CO4 <= Cooldown_4 then
			CO4 = CO4 + (1 / 30) / Animation_Speed
		elseif CO4 >= Cooldown_4 then
			CO4 = Cooldown_4
		end
	end
end

--//=================================\\
--\\=================================//





--//=================================\\
--||	ATTACK FUNCTIONS AND STUFF
--\\=================================//

function EquipWeapon()
	--ATTACK = true
	DEFENSECHANGE1.Parent = nil
	MOVEMENTCHANGE1.Parent = ChangeStat
	for i=0, 1, 0.5 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-30)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-20), RAD(0), RAD(-20)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.75 * Player_Size, 0 * Player_Size) * ANGLES(RAD(140), RAD(0), RAD(20)) * ANGLES(RAD(0), RAD(45), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-15)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-7.5)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-55), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.3 / Animation_Speed)
	end
	for i=0, 1, 0.08 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-30)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-20), RAD(0), RAD(-20)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.75 * Player_Size, 0 * Player_Size) * ANGLES(RAD(210), RAD(0), RAD(20)) * ANGLES(RAD(0), RAD(90), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-15)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-7.5)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-55), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.3 / Animation_Speed)
	end
	HandleWeld.Part0 = RightArm
	HandleWeld.C0 = CF(-0.05 * Player_Size, -1 * Player_Size, -0.05 * Player_Size) * ANGLES(RAD(-27), RAD(0), RAD(-19)) * ANGLES(RAD(0), RAD(110), RAD(0))
	CreateSound("174884033", HitboxPart, 1, 1.5)
	for i=0, 1, 0.5 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-30)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-2.5), RAD(0), RAD(30)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(80)) * ANGLES(RAD(20), RAD(0), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-25)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-7.5)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-55), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.3 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-70), RAD(90), RAD(0)), 0.3 / Animation_Speed)
	end
	LASTPOINT = EffectPart.CFrame
	for i=0, 1, 0.08 / Animation_Speed do
		Swait()
		TrailEffect("Institutional white", "Neon", EffectPart.CFrame, LASTPOINT, "Block", 0, 0.2, ANGLES(0, 0, 0), -0.01, 0, -0.01, 0.1)
		LASTPOINT = EffectPart.CFrame
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-30)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-2.5), RAD(0), RAD(30)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(80)) * ANGLES(RAD(-60), RAD(0), RAD(0)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-25)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-7.5)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-55), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-140), RAD(90), RAD(0)), 0.3 / Animation_Speed)
	end
	LASTPOINT = nil
	--ATTACK = false
end

function UnequipWeapon()
	--ATTACK = true
	for i=0, 1, 0.5 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-30)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-20), RAD(0), RAD(-20)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.75 * Player_Size, 0 * Player_Size) * ANGLES(RAD(140), RAD(0), RAD(20)) * ANGLES(RAD(0), RAD(45), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-25)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-7.5)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-55), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.3 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(-0.05 * Player_Size, -1 * Player_Size, -0.05 * Player_Size) * ANGLES(RAD(-27), RAD(0), RAD(-19)) * ANGLES(RAD(0), RAD(110), RAD(0)), 0.3 / Animation_Speed)
	end
	CreateSound("245542809", HitboxPart, 1, 1.2)
	for i=0, 1, 0.08 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-30)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-20), RAD(0), RAD(-20)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.75 * Player_Size, 0 * Player_Size) * ANGLES(RAD(210), RAD(0), RAD(20)) * ANGLES(RAD(0), RAD(90), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-25)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-7.5)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-55), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.3 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(-0.05 * Player_Size, -1 * Player_Size, -0.05 * Player_Size) * ANGLES(RAD(-27), RAD(0), RAD(-19)) * ANGLES(RAD(0), RAD(110), RAD(0)), 0.3 / Animation_Speed)
	end
	HandleWeld.Part0 = Torso
	HandleWeld.C0 = CF(2 * Player_Size, 2 * Player_Size, 0.6 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(135))
	for i=0, 1, 0.5 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-30)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-2.5), RAD(0), RAD(30)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.75 * Player_Size, 0 * Player_Size) * ANGLES(RAD(140), RAD(0), RAD(20)) * ANGLES(RAD(0), RAD(45), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-15)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-7.5)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-55), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.3 / Animation_Speed)
	end
	for i=0, 1, 0.08 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.3 / Animation_Speed)
		RootJoint.C1 = Clerp(RootJoint.C1, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.3 / Animation_Speed)
		Neck.C1 = Clerp(Neck.C1, CF(0 * Player_Size, -0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(0), RAD(180)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		if Disable_Moving_Arms == false then
			RightShoulder.C1 = Clerp(RightShoulder.C1, ANGLES(0, RAD(90), 0) * CF(0 * Player_Size, 0.5 * Player_Size, -0.5), 0.3 / Animation_Speed)
			LeftShoulder.C1 = Clerp(LeftShoulder.C1, ANGLES(0, RAD(-90), 0) * CF(0 * Player_Size, 0.5 * Player_Size, -0.5), 0.3 / Animation_Speed)
		else
			RightShoulder.C1 = Clerp(RightShoulder.C1, CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size), 0.3 / Animation_Speed)
			LeftShoulder.C1 = Clerp(LeftShoulder.C1, CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size), 0.3 / Animation_Speed)
		end
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.3 / Animation_Speed)
		RightHip.C1 = Clerp(RightHip.C1, CF(0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.3 / Animation_Speed)
		LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.3 / Animation_Speed)
	end
	RootJoint.C0 = ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0))
	RootJoint.C1 = ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0))
	Neck.C0 = NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(0))
	Neck.C1 = CF(0 * Player_Size, -0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(0), RAD(180))
	RightShoulder.C0 = CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)) * RIGHTSHOULDERC0
	LeftShoulder.C0 = CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)) * LEFTSHOULDERC0
	if Disable_Moving_Arms == false then
		RightShoulder.C1 = ANGLES(0, RAD(90), 0) * CF(0 * Player_Size, 0.5 * Player_Size, -0.5)
		LeftShoulder.C1 = ANGLES(0, RAD(-90), 0) * CF(0 * Player_Size, 0.5 * Player_Size, -0.5)
	else
		RightShoulder.C1 = CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
		LeftShoulder.C1 = CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
	end
	RightHip.C0 = CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0))
	LeftHip.C0 = CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0))
	RightHip.C1 = CF(0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0))
	LeftHip.C1 = CF(-0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0))
	--ATTACK = false
	DEFENSECHANGE1.Parent = ChangeStat
	MOVEMENTCHANGE1.Parent = nil
end

function StaggerHitAnimation()
	ATTACK = true
	_G.click = true
	if Weapon:FindFirstChild("Hitbox") ~= nil then
		for i = 1, MRANDOM(2, 4) do
			ClangEffect("Bright yellow", "Neon", CF(Weapon:FindFirstChild("Hitbox").Position) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), 20, 5, 0.2, MRANDOM(5, 15) / 10, 0, -0.02, 0, -0.02, 0.1)
		end
	end
	for i = 0, 1, 0.1 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-10), RAD(0), RAD(-30)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(30)) * ANGLES(RAD(5), RAD(0), RAD(0)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-30), RAD(0), RAD(60)) * ANGLES(RAD(0), RAD(-30), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-20), RAD(0), RAD(-20)) * ANGLES(RAD(0), RAD(20), RAD(0)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.9 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-20)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1.1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-70), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(10)), 0.3 / Animation_Speed)
		if Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	ATTACK = false
	_G.click = false
end

function StaggerAnimation()
	ATTACK = true
	_G.click = true
	if Weapon:FindFirstChild("Hitbox") ~= nil then
		for i = 1, MRANDOM(2, 4) do
			ClangEffect("Bright yellow", "Neon", CF(Weapon:FindFirstChild("Hitbox").Position) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), 20, 5, 0.2, MRANDOM(5, 15) / 10, 0, -0.02, 0, -0.02, 0.1)
		end
	end
	DISABLEJUMPING = true
	COMBO = 1
	StatLabel("Interruption", Head.CFrame * CF(0, 0 + (Head.Size.z - 1), 0), "Staggered!", C3(255 / 255, 255 / 255, 0))
	local STAGGERVELOCITY = Instance.new("BodyVelocity",Torso)
	STAGGERVELOCITY.P = 500
	STAGGERVELOCITY.maxForce = VT(math.huge, 0, math.huge)
	if Rooted.Value == false then
		STAGGERVELOCITY.Velocity = RootPart.CFrame.lookVector * -40
	end
	for i = 0, 1, 0.35 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(2.5), RAD(0), RAD(20)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size,0 * Player_Size) * ANGLES(RAD(-15), RAD(0), RAD(30)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size,0 * Player_Size) * ANGLES(RAD(-7.5), RAD(0), RAD(-20)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size,0 * Player_Size) * ANGLES(RAD(0), RAD(80), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(30)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size,0 * Player_Size) * ANGLES(RAD(0), RAD(-70), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(5)), 0.3 / Animation_Speed)
	end
	for i = 0, 1, 0.2 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.25 * Player_Size) * ANGLES(RAD(-25), RAD(0), RAD(-20)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-5), RAD(0), RAD(20)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-15), RAD(0), RAD(30)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-7.5), RAD(0), RAD(-20)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(80), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(50)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-70), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(25)), 0.4 / Animation_Speed)
	end
	STAGGERVELOCITY.Parent = nil
	for i = 1, 50 * Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -1.8 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(-20)) * ANGLES(RAD(-5), RAD(-5), RAD(0)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(20), RAD(0), RAD(20)) * ANGLES(RAD(0), RAD(5), RAD(0)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(20)) * ANGLES(RAD(0), RAD(-20), RAD(0)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-15), RAD(0), RAD(-10)) * ANGLES(RAD(0), RAD(15), RAD(0)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.4 * Player_Size, -0.3 * Player_Size) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(70)) * ANGLES(RAD(0), RAD(30), RAD(0)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, 0.5 * Player_Size, -0.5 * Player_Size) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-2.5), RAD(0), RAD(-10)), 0.3 / Animation_Speed)
	end
	DISABLEJUMPING = false
	ATTACK = false
	_G.click = false
end

function StunAnimation()
	ATTACK = true
	DISABLEJUMPING = true
	COMBO = 1
	StatLabel("Interruption", Head.CFrame * CF(0, 0 + (Head.Size.z - 1), 0), "Stunned!", C3(255 / 255, 255 / 255, 0))
	for i = 0, 1, 0.3 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.05 * Player_Size) * ANGLES(RAD(15), RAD(0), RAD(-150)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-10), RAD(0), RAD(-20)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(30), RAD(0), RAD(40)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-20), RAD(0), RAD(-50)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-15), RAD(0), RAD(30)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(20)), 0.3 / Animation_Speed)
	end
	for i = 0, 1, 0.3 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.05 * Player_Size) * ANGLES(RAD(45), RAD(0), RAD(-180)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-15), RAD(0), RAD(-30)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(30), RAD(0), RAD(40)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-20), RAD(0), RAD(-50)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(15)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(50)), 0.4 / Animation_Speed)
	end
	for i = 0, 1, 0.3 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.3 * Player_Size) * ANGLES(RAD(75), RAD(0), RAD(-180)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-15), RAD(0), RAD(-60)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(20), RAD(0), RAD(70)) * ANGLES(RAD(0), RAD(30), RAD(0)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-10), RAD(0), RAD(-80)) * ANGLES(RAD(0), RAD(-40), RAD(0)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-15), RAD(0), RAD(10)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(80)), 0.4 / Animation_Speed)
	end
	for i = 1, 70 * Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -2.5 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(-180)), 0.3 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-90)), 0.3 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(90), RAD(-10), RAD(90)) * RIGHTSHOULDERC0, 0.3 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(0), RAD(-90)) * LEFTSHOULDERC0, 0.3 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size, 0.2 * Player_Size) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.3 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.3 / Animation_Speed)
	end
	for i = 0, 1, 0.2 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -1.5 * Player_Size) * ANGLES(RAD(20), RAD(0), RAD(100)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-30)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-20), RAD(-10), RAD(30)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(80), RAD(0), RAD(20)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(60), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(70)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.25 * Player_Size, -1 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(20)), 0.4 / Animation_Speed)
	end
	DISABLEJUMPING = false
	ATTACK = false
end

function EAbility()
	ATTACK = true
	ATTACK = false
end

function Attack1()
	ATTACK = true
	_G.click = true
	for i=0, 1, 0.1 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(10), RAD(0), RAD(-40)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(5), RAD(0), RAD(35)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(150), RAD(0), RAD(-20)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-0.25 * Player_Size, 0.5 * Player_Size, -0.75 * Player_Size) * ANGLES(RAD(160), RAD(0), RAD(45)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(80), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-5)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.075 * Player_Size) * ANGLES(RAD(0), RAD(-45), RAD(0)) * ANGLES(RAD(-2.5), RAD(0), RAD(-15)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-80), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		if StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	CreateSound("553461842", HitboxPart, 1.2, MRANDOM(8, 9) / 10)
	local HASHITFLOOR = false
	for i=0, 1, 0.1 / Animation_Speed do
		Swait()
		local Pos = HitboxPart
		local Offset = HitboxPart.CFrame * CF(0, 0.1 * Player_Size, 0)
		local Color = "Institutional white"
		local Material = "Neon"
		local TheDelay = 0.01
		local Height = 6.2 * Player_Size
		BLCF = Offset
		if SCFR and (Pos.Position - SCFR.p).magnitude > 0.1 then
			local a, b = Triangle(Color, Material, (SCFR * CF(0, Height / 2,0)).p, (SCFR * CF(0, -Height / 2, 0)).p, (BLCF * CF(0, Height / 2,0)).p, TheDelay)
			if a then game:GetService("Debris"):AddItem(a, 1) end
			if b then game:GetService("Debris"):AddItem(b, 1) end
			local a, b = Triangle(Color, Material, (BLCF * CF(0, Height / 2, 0)).p, (BLCF * CF(0, -Height / 2, 0)).p, (SCFR * CF(0, -Height / 2, 0)).p, TheDelay)
			if a then game:GetService("Debris"):AddItem(a, 1) end
			if b then game:GetService("Debris"):AddItem(b, 1) end
			SCFR = BLCF
		elseif not SCFR then
			SCFR = BLCF
		end
		local SWORDHIT, SWORDPOS = Raycast(EffectPart.Position, (CF(EffectPart.Position, EffectPart.Position + VT(0, -1, 0))).lookVector, 1 * Player_Size, Character)
		if SWORDHIT ~= nil and HASHITFLOOR == false and SWORDHIT.Parent:FindFirstChild("Humanoid") == nil then
			HASHITFLOOR = true
			--print(SWORDHIT.Material)
			if SWORDHIT.Material == Enum.Material.Grass or SWORDHIT.Material == Enum.Material.Ice or SWORDHIT.Material == Enum.Material.Fabric or SWORDHIT.Material == Enum.Material.SmoothPlastic or SWORDHIT.Material == Enum.Material.Sand or SWORDHIT.Material == Enum.Material.Plastic or SWORDHIT.Material == Enum.Material.Neon or SWORDHIT.Material == Enum.Material.Foil then
				CreateSound("525717773", EffectPart, 1.2 , MRANDOM(8, 12) / 10)
			elseif SWORDHIT.Material == Enum.Material.Metal or SWORDHIT.Material == Enum.Material.Concrete or SWORDHIT.Material == Enum.Material.Brick or SWORDHIT.Material == Enum.Material.CorrodedMetal or SWORDHIT.Material == Enum.Material.Slate or SWORDHIT.Material == Enum.Material.Marble or SWORDHIT.Material == Enum.Material.Granite or SWORDHIT.Material == Enum.Material.DiamondPlate or SWORDHIT.Material == Enum.Material.Pebble or SWORDHIT.Material == Enum.Material.Cobblestone then
				CreateSound("470790670", EffectPart, 1 , MRANDOM(8, 12) / 10)
				for i = 1, MRANDOM(2, 4) do
					ClangEffect("Bright yellow", "Neon", CF(SWORDPOS) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), 10, 3, 0.2, MRANDOM(5, 15) / 10, 0, -0.02, 0, -0.02, 0.1)
				end
			elseif SWORDHIT.Material == Enum.Material.Wood or SWORDHIT.Material == Enum.Material.WoodPlanks then
				CreateSound("514586161", EffectPart, 1 , MRANDOM(8, 12) / 10)
			end
		end
		
		if HASHITFLOOR == true then
			RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(10), RAD(0), RAD(30)), 0.4 / Animation_Speed)
			Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(5), RAD(0), RAD(-20)), 0.4 / Animation_Speed)
			RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(40), RAD(0), RAD(5)) * ANGLES(RAD(0), RAD(-30), RAD(0)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(0 * Player_Size, 0.25 * Player_Size, -0.75 * Player_Size) * ANGLES(RAD(20), RAD(0), RAD(55)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
			RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.075 * Player_Size) * ANGLES(RAD(0), RAD(50), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(17.5)), 0.4 / Animation_Speed)
			LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-70), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(5)), 0.4 / Animation_Speed)
			HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-132.5), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		else
			RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(10), RAD(0), RAD(30)), 0.4 / Animation_Speed)
			Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(5), RAD(0), RAD(-20)), 0.4 / Animation_Speed)
			RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(30), RAD(0), RAD(5)) * ANGLES(RAD(0), RAD(-30), RAD(0)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(0 * Player_Size, 0.25 * Player_Size, -0.75 * Player_Size) * ANGLES(RAD(10), RAD(0), RAD(55)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
			RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.075 * Player_Size) * ANGLES(RAD(0), RAD(50), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(17.5)), 0.4 / Animation_Speed)
			LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-70), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(5)), 0.4 / Animation_Speed)
			HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-150), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		end
		if StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	BLCF = nil
	SCFR = nil
	ATTACK = false
	_G.click = false
end

function Attack2()
	ATTACK = true
	_G.click = true
	for i=0, 1, 0.1 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(10), RAD(0), RAD(20)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(5), RAD(0), RAD(-15)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(0.25 * Player_Size, 0.5 * Player_Size, -0.5 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(-70)) * ANGLES(RAD(20), RAD(90), RAD(0)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-25), RAD(0), RAD(-35)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(65), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(15)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-110), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		if StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	CreateSound("553461718", HitboxPart, 1.2, MRANDOM(7, 9) / 10)
	for i=0, 1, 0.1 / Animation_Speed do
		Swait()
		local Pos = HitboxPart
		local Offset = HitboxPart.CFrame * CF(0, 0.1 * Player_Size, 0)
		local Color = "Institutional white"
		local Material = "Neon"
		local TheDelay = 0.01
		local Height = 6.2 * Player_Size
		BLCF = Offset
		if SCFR and (Pos.Position - SCFR.p).magnitude > 0.1 then
			local a, b = Triangle(Color, Material, (SCFR * CF(0, Height / 2,0)).p, (SCFR * CF(0, -Height / 2, 0)).p, (BLCF * CF(0, Height / 2,0)).p, TheDelay)
			if a then game:GetService("Debris"):AddItem(a, 1) end
			if b then game:GetService("Debris"):AddItem(b, 1) end
			local a, b = Triangle(Color, Material, (BLCF * CF(0, Height / 2, 0)).p, (BLCF * CF(0, -Height / 2, 0)).p, (SCFR * CF(0, -Height / 2, 0)).p, TheDelay)
			if a then game:GetService("Debris"):AddItem(a, 1) end
			if b then game:GetService("Debris"):AddItem(b, 1) end
			SCFR = BLCF
		elseif not SCFR then
			SCFR = BLCF
		end
		
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(10), RAD(0), RAD(-30)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(2.5), RAD(0), RAD(30)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(100)) * ANGLES(RAD(-30), RAD(80), RAD(0)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-15), RAD(0), RAD(-55)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(80), RAD(0)) * ANGLES(RAD(-2.5), RAD(0), RAD(5)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-15)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-130), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		if StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	BLCF = nil
	SCFR = nil
	ATTACK = false
	_G.click = false
end

function ShootFireball(POSITION1, POSITION2, SPEED, SIZE, DURATION, LOWDAMAGE, HIGHDAMAGE)
	local POS1 = POSITION1
	local POS2 = POSITION2
	local MOUSELOOK = CF((POS1 + POS2) / 2, POS2)
	local FIREBALLSPEED = SPEED * Player_Size
	local FIREBALLDURATION = DURATION
	local FIREBALLCOLORS = {"Bright red", "Bright orange", "Bright yellow"}
	local FIREBALLHITSOUNDS = {"522282998", "527535379", "304448425"}
	coroutine.resume(coroutine.create(function()
		repeat
			Swait()
			local FIREBALLHIT, FIREBALLPOS = Raycast(POS1, MOUSELOOK.lookVector, FIREBALLSPEED, Character)
			POS1 = POS1 + (MOUSELOOK.lookVector * FIREBALLSPEED)
			MagicBlock(FIREBALLCOLORS[MRANDOM(1, #FIREBALLCOLORS)], "Neon", CF(POS1) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(0, 0, 0), VT(0, 0, 0), SIZE, SIZE, SIZE, SIZE / -10, SIZE / -10, SIZE / -10, 0.1)
			if FIREBALLHIT ~= nil or FIREBALLDURATION <= 0.1 then
				FIREBALLDURATION = 0
				local FireballHitRefpart = CreatePart(3, Effects, "SmoothPlastic", 0, 1, "Really black", "Effect", VT())
				FireballHitRefpart.Anchored = true
				FireballHitRefpart.CFrame = CF(FIREBALLPOS)
				game:GetService("Debris"):AddItem(FireballHitRefpart, 5)
				CreateSound(FIREBALLHITSOUNDS[MRANDOM(1, #FIREBALLHITSOUNDS)], FireballHitRefpart, 1.4, MRANDOM(14, 16) / 10)
				for i = 1, MRANDOM(4, 8) do
					MagicBlock(FIREBALLCOLORS[MRANDOM(1, #FIREBALLCOLORS)], "Neon", FireballHitRefpart.CFrame * ANGLES(RAD(MRANDOM(-360, 360)), RAD(MRANDOM(-360, 360)), RAD(MRANDOM(-360, 360))), CF(0, MRANDOM(5, 7) / 10 * Player_Size, 0), VT(0, 0, 0), 5, 5, 5, 0, 0, 0, MRANDOM(3, 5) / 100)
				end
				MagicBlock("Bright red", "Neon", FireballHitRefpart.CFrame * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(RAD(MRANDOM(-5, 5)), RAD(MRANDOM(-5, 5)), RAD(MRANDOM(-5, 5))), VT(0, 0, 0), SIZE, SIZE, SIZE, SIZE / 3, SIZE / 3, SIZE / 3, 0.05)
				MagicBlock("Bright orange", "Neon", FireballHitRefpart.CFrame * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(RAD(MRANDOM(-5, 5)), RAD(MRANDOM(-5, 5)), RAD(MRANDOM(-5, 5))), VT(0, 0, 0), SIZE * 0.5, SIZE * 0.5, SIZE * 0.5, SIZE / 4, SIZE / 4, SIZE / 4, 0.05)
				MagicBlock("Bright yellow", "Neon", FireballHitRefpart.CFrame * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(RAD(MRANDOM(-5, 5)), RAD(MRANDOM(-5, 5)), RAD(MRANDOM(-5, 5))), VT(0, 0, 0), SIZE * 0.25, SIZE * 0.25, SIZE * 0.25, SIZE / 5, SIZE / 5, SIZE / 5, 0.05)
				MagnitudeDamage("", "", "", "", 1, 1, 1, 1, FireballHitRefpart, SIZE / 2, false, LOWDAMAGE, HIGHDAMAGE, 0, "Normal", RootPart, 0, 1, MRANDOM(10, 15), nil, false, true, nil, 0, 0, false)
			else
				FIREBALLDURATION = FIREBALLDURATION - (1 / 30) / Animation_Speed
			end
		until FIREBALLHIT ~= nil or FIREBALLDURATION <= 0
	end))
end

function FirePillar(POSITION1, POSITION2, SIZE, RISE, RANGE, LOWDAMAGE, HIGHDAMAGE, LASTINGTIME)
	local POS1 = POSITION1
	local POS2 = POSITION2
	local MOUSELOOK = CF((POS1 + POS2) / 2, POS2)
	local FIREPILLARHITSOUNDS = {"171378971", --[["646619365",--]] "472579737"--[[, "144140670"--]]}
	local FIREPILLARCOLORS = {"Bright red", "Bright orange", "Bright yellow"}
	local FIREPILLAR1HIT, FIREPILLAR1POS = Raycast(POS1, MOUSELOOK.lookVector, RANGE * Player_Size, Character)
	local FirePillarRefpart1 = CreatePart(3, Effects, "SmoothPlastic", 0, 1, "Really black", "Effect", VT())
	FirePillarRefpart1.Anchored = true
	FirePillarRefpart1.CFrame = CF(FIREPILLAR1POS) * CF(0, 10, 0)
	game:GetService("Debris"):AddItem(FirePillarRefpart1, 5)
	local FIREPILLAR2HIT, FIREPILLAR2POS = Raycast(FirePillarRefpart1.Position, CF(FirePillarRefpart1.Position, FirePillarRefpart1.Position + VT(0, -1, 0)).lookVector, 999, Character)
	if FIREPILLAR2HIT ~= nil then
		FirePillarRefpart1.Parent = nil
		local FirePillarRefpart2 = CreatePart(3, Effects, "SmoothPlastic", 0, 1, "Really black", "Effect", VT())
		FirePillarRefpart2.Anchored = true
		FirePillarRefpart2.CFrame = CF(FIREPILLAR2POS)
		game:GetService("Debris"):AddItem(FirePillarRefpart2, 5)
		CreateSound(FIREPILLARHITSOUNDS[MRANDOM(1, #FIREPILLARHITSOUNDS)], FirePillarRefpart2, 1.2, MRANDOM(11, 13) / 10)
		for i = 1, MRANDOM(5, 10) do
			MagicBlock(FIREPILLARCOLORS[MRANDOM(1, #FIREPILLARCOLORS)], "Neon", FirePillarRefpart2.CFrame * ANGLES(RAD(MRANDOM(-60, 60)), 0, RAD(MRANDOM(-60, 60))), CF(0, MRANDOM(5, 7) / 10 * Player_Size, 0), VT(0, 0, 0), 3, 3, 3, 0, 0, 0, MRANDOM(3, 5) / 100)
		end
		for i = 1, MRANDOM(15, 20) do
			local FIREEFFECTSIZE = MRANDOM(1, 2)
			MagicBlock(FIREPILLARCOLORS[MRANDOM(1, #FIREPILLARCOLORS)], "Neon", FirePillarRefpart2.CFrame, CF(0, MRANDOM(5, 10) / 100, 0) * ANGLES(0, RAD(MRANDOM(-20, 20)), 0), VT(MRANDOM(SIZE / 6, SIZE / 4), 0, 0), FIREEFFECTSIZE, FIREEFFECTSIZE, FIREEFFECTSIZE, -0.02, -0.02, -0.02, MRANDOM(1, 2) / 100)
		end
		MagicCylinder("Bright red", "Neon", CF(FIREPILLAR2POS), ANGLES(0, 0, 0), VT(0, 0, 0), SIZE, 0.1, SIZE, 1.5, 0, 1.5, LASTINGTIME)
		MagicSphere("Bright red", "Neon", FirePillarRefpart2.CFrame, ANGLES(0, 0, 0), VT(0, 0, 0), SIZE, 0.1, SIZE, 1.5, RISE, 1.5, LASTINGTIME)
		MagicSphere("Bright orange", "Neon", FirePillarRefpart2.CFrame, ANGLES(0, 0, 0), VT(0, 0, 0), SIZE * 0.5, 0.1, SIZE * 0.5, 1.5, RISE * 0.75, 1.5, LASTINGTIME)
		MagicSphere("Bright yellow", "Neon", FirePillarRefpart2.CFrame, ANGLES(0, 0, 0), VT(0, 0, 0), SIZE * 0.25, 0.1, SIZE * 0.25, 1.5, RISE * 0.375, 1.5, LASTINGTIME)
		MagnitudeDamage("", "", "", "", 1, 1, 1, 1, FirePillarRefpart2, SIZE / 3, false, LOWDAMAGE, HIGHDAMAGE, 0, "Normal", RootPart, 0, 1, MRANDOM(10, 15), nil, false, true, "Movement", -0.1, 3, true)
	end
end

function Attack3()
	ATTACK = true
	_G.click = true
	local FIREEFFECTCOLORS = {"Bright red", "Bright orange", "Bright yellow"}
	for i=0, 1, 0.1 / Animation_Speed do
		Swait()
		for i = 1, 2 do
			MagicBlock(FIREEFFECTCOLORS[MRANDOM(1, #FIREEFFECTCOLORS)], "Neon", LeftArm.CFrame * CF(0, MRANDOM(-10, 10) / 10 * Player_Size, 0) * ANGLES(RAD(90), 0, RAD(MRANDOM(-360, 360))), CF(0, 0, 0.1) * ANGLES(0, 0, RAD(MRANDOM(-20, 20))), VT(0, 1, 0), 1, 1, 1, -0.05, -0.05, -0.05, 0.05)
		end
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-60)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(60)) * ANGLES(RAD(5), RAD(0), RAD(0)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(70), RAD(0), RAD(45)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(-55)) * ANGLES(RAD(5), RAD(0), RAD(0)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, 0.05 * Player_Size) * ANGLES(RAD(0), RAD(-40), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-10)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, -0.25 * Player_Size) * ANGLES(RAD(-20), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		if StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	CreateSound("154324879", LeftArm, 1.4, 1.5)
	ShootFireball((LeftArm.CFrame * CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size)).p, Mouse.hit.p, 1, 10, 2.1, 5, 10)
	MagicBlock("Bright red", "Neon", LeftArm.CFrame * CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(0, 0, 0), VT(0, 0, 0), 5, 5, 5, 0.5, 0.5, 0.5, 0.05)
	MagicBlock("Bright orange", "Neon", LeftArm.CFrame * CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(0, 0, 0), VT(0, 0, 0), 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.05)
	MagicBlock("Bright yellow", "Neon", LeftArm.CFrame * CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(0, 0, 0), VT(0, 0, 0), 0.05, 0.05, 0.05, 0.5, 0.5, 0.5, 0.05)
	for i=0, 1, 0.1 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(-50)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(50)) * ANGLES(RAD(2.5), RAD(0), RAD(0)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(70), RAD(0), RAD(45)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.25 * Player_Size, 0.25 * Player_Size, 0 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(-55)) * ANGLES(RAD(40), RAD(0), RAD(0)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-12.5), RAD(0), RAD(-5)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.9 * Player_Size, 0.05 * Player_Size) * ANGLES(RAD(0), RAD(-50), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-5)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, -0.25 * Player_Size) * ANGLES(RAD(-20), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		if StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	ATTACK = false
	_G.click = false
end

function Attack4()
	ATTACK = true
	_G.click = true
	local FIREEFFECTCOLORS = {"Bright red", "Bright orange", "Bright yellow"}
	for i=0, 1, 0.1 / Animation_Speed do
		Swait()
		MagicBlock(FIREEFFECTCOLORS[MRANDOM(1, #FIREEFFECTCOLORS)], "Neon", LeftArm.CFrame * CF(0 * Player_Size, MRANDOM(-15, -10) / 10 * Player_Size, 0 * Player_Size) * ANGLES(RAD(90), 0, RAD(MRANDOM(-360, 360))), CF(0, 0, -0.1) * ANGLES(0, 0, RAD(MRANDOM(-20, 20))), VT(0, 1, 0), 1, 1, 1, -0.05, -0.05, -0.05, 0.05)
		--MagicBlock(FIREEFFECTCOLORS[MRANDOM(1, #FIREEFFECTCOLORS)], "Neon", RootPart.CFrame * CF(0 * Player_Size, MRANDOM(-2, 2) * Player_Size, 0 * Player_Size) * ANGLES(0, RAD(MRANDOM(-360, 360)), 0), CF(0, MRANDOM(5, 10) / 100, 0) * ANGLES(0, RAD(MRANDOM(-10, 10)), 0), VT(MRANDOM(20, 40) / 10, 0, 0), 1, 1, 1, -0.05, -0.05, -0.05, 0.05)
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-40)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(35)) * ANGLES(RAD(2.5), RAD(0), RAD(0)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(70), RAD(0), RAD(45)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.75 * Player_Size, -0.5 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(50)) * ANGLES(RAD(80), RAD(-20), RAD(-30)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-5)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, 0.05 * Player_Size) * ANGLES(RAD(0), RAD(-40), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-10)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, -0.25 * Player_Size) * ANGLES(RAD(-20), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		if StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	CreateSound("549224856", LeftArm, 1, MRANDOM(11, 13) / 10)
	FirePillar(RootPart.Position, Mouse.hit.p, 25, 7.5, 20, 5, 10, 0.025)
	MagicBlock("Bright red", "Neon", LeftArm.CFrame * CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(0, 0, 0), VT(0, 0, 0), 5, 5, 5, 0.5, 0.5, 0.5, 0.05)
	MagicBlock("Bright orange", "Neon", LeftArm.CFrame * CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(0, 0, 0), VT(0, 0, 0), 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.05)
	MagicBlock("Bright yellow", "Neon", LeftArm.CFrame * CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50)), RAD(MRANDOM(-50, 50))), ANGLES(0, 0, 0), VT(0, 0, 0), 0.05, 0.05, 0.05, 0.5, 0.5, 0.5, 0.05)
	for i=0, 1, 0.1 / Animation_Speed do
		Swait()
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(-30)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(25)) * ANGLES(RAD(5), RAD(0), RAD(0)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(70), RAD(0), RAD(45)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.25 * Player_Size, -0.25 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(-20 + MRANDOM(-2.5, 2.5))) * ANGLES(RAD(70 + MRANDOM(-2.5, 2.5)), RAD(40), RAD(0)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(60), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-7.5)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, 0.05 * Player_Size) * ANGLES(RAD(0), RAD(-50), RAD(0)) * ANGLES(RAD(-2.5), RAD(0), RAD(-12.5)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, -0.25 * Player_Size) * ANGLES(RAD(-20), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		--[[
		RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(5), RAD(0), RAD(40)), 0.4 / Animation_Speed)
		Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-30)) * ANGLES(RAD(5), RAD(0), RAD(0)), 0.4 / Animation_Speed)
		RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(70), RAD(0), RAD(45)) * RIGHTSHOULDERC0, 0.4 / Animation_Speed)
		LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0 * Player_Size, -0.25 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(-10 + MRANDOM(-2.5, 2.5))) * ANGLES(RAD(40 + MRANDOM(-2.5, 2.5)), RAD(70), RAD(20)) * LEFTSHOULDERC0, 0.4 / Animation_Speed)
		RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(60), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(10)), 0.4 / Animation_Speed)
		LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(5)), 0.4 / Animation_Speed)
		HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, -0.25 * Player_Size) * ANGLES(RAD(-20), RAD(90), RAD(0)), 0.4 / Animation_Speed)
		--]]
		if StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true then
			break
		end
	end
	ATTACK = false
	_G.click = false
end

function Move1()
	ATTACK = true
	ATTACK = false
end

function Move2()
	ATTACK = true
	ATTACK = false
end

function Move3()
	ATTACK = true
	ATTACK = false
end

function Move4()
	ATTACK = true
	ATTACK = false
end

--//=================================\\
--\\=================================//





--//=================================\\
--||	      SET THINGS UP
--\\=================================//

if Start_Equipped == true then
	ATTACK = true
	EQUIPPED = true
	if Disable_Animate == true then
		ANIMATE.Parent = nil
		local IDLEANIMATION = Humanoid:LoadAnimation(ROBLOXIDLEANIMATION)
		IDLEANIMATION:Play()
	end
	if Disable_Animator == true then
		ANIMATOR.Parent = nil
	end
	if Disable_Moving_Arms == true then
		RSH = Torso["Right Shoulder"]
		LSH = Torso["Left Shoulder"]
		RSH.Parent = nil
		LSH.Parent = nil
		if Use_Motors_Instead_Of_Welds == true then
			RightShoulder = IT("Motor")
			LeftShoulder = IT("Motor")
		else
			RightShoulder = IT("Weld")
			LeftShoulder = IT("Weld")
		end
		RightShoulder.Name = "Right Shoulder"
		RightShoulder.Part0 = Torso
		RightShoulder.C0 = CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
		RightShoulder.C1 = CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) 
		RightShoulder.Part1 = Character["Right Arm"]
		RightShoulder.Parent = Torso
		LeftShoulder.Name = "Left Shoulder"
		LeftShoulder.Part0 = Torso
		LeftShoulder.C0=CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
		LeftShoulder.C1=CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
		LeftShoulder.Part1 = Character["Left Arm"]
		LeftShoulder.Parent = Torso
		RIGHTSHOULDERC0 = CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0))
		LEFTSHOULDERC0 = CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0))
	end
	if Start_Equipped_With_Equipped_Animation == true then
		Swait()
		EquipWeapon()
	end
	ATTACK = false
end

--//=================================\\
--\\=================================//


add_hat_for_anim("sword",game:GetService("Workspace").non["Back_AccAccessory"].Handle,game:GetService("Workspace").non.Redemption.Handle,CFrame.new(3,2,0),CFrame.Angles(0,0,-2.2))
game:GetService("Workspace").non["Back_AccAccessory"].Handle.Transparency = 1

--//=================================\\
--||	  ASSIGN THINGS TO KEYS
--\\=================================//

Humanoid.Changed:connect(function(Jump)
	if Jump == "Jump" and (Disable_Jump == true or DISABLEJUMPING == true) then
		Humanoid.Jump = false
	end
end)

function MouseDown(Mouse)
	if ATTACK == true or EQUIPPED == false then
		return
	end
	HOLD = true
	if COMBO == 1 then
		COMBO = 2
		Attack1()
	elseif COMBO == 2 then
		COMBO = 3
		Attack2()
	elseif COMBO == 3 then
		COMBO = 4
		Attack3()
	elseif COMBO == 4 then
		COMBO = 1
		Attack4()
	end
	coroutine.resume(coroutine.create(function()
		for i=1, 50 do
			if ATTACK == false then
				Swait()
			end
		end
		if ATTACK == false then
			COMBO = 1
		end
	end))
end

function MouseUp(Mouse)
HOLD = false
end

function KeyDown(Key)
	if Key == "f" and Can_Equip_Or_Unequip == true and ATTACK == false then
		ATTACK = true
		COMBO = 1
		if EQUIPPED == false then
			EQUIPPED = true
			if Disable_Animate == true then
				ANIMATE.Parent = nil
				local IDLEANIMATION = Humanoid:LoadAnimation(ROBLOXIDLEANIMATION)
				IDLEANIMATION:Play()
			end
			if Disable_Animator == true then
				ANIMATOR.Parent = nil
			end
			if Disable_Moving_Arms == true then
				RSH = Torso["Right Shoulder"]
				LSH = Torso["Left Shoulder"]
				RSH.Parent = nil
				LSH.Parent = nil
				if Use_Motors_Instead_Of_Welds == true then
					RightShoulder = IT("Motor")
					LeftShoulder = IT("Motor")
				else
					RightShoulder = IT("Weld")
					LeftShoulder = IT("Weld")
				end
				RightShoulder.Name = "Right Shoulder"
				RightShoulder.Part0 = Torso
				RightShoulder.C0 = CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
				RightShoulder.C1 = CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) 
				RightShoulder.Part1 = Character["Right Arm"]
				RightShoulder.Parent = Torso
				LeftShoulder.Name = "Left Shoulder"
				LeftShoulder.Part0 = Torso
				LeftShoulder.C0=CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
				LeftShoulder.C1=CF(0 * Player_Size, 0.5 * Player_Size, 0 * Player_Size)
				LeftShoulder.Part1 = Character["Left Arm"]
				LeftShoulder.Parent = Torso
				RIGHTSHOULDERC0 = CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0))
				LEFTSHOULDERC0 = CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0))
			end
			Swait()
			EquipWeapon()
		elseif EQUIPPED == true then
			EQUIPPED = false
			UnequipWeapon()
			if Disable_Animator == true then
				ANIMATOR.Parent = Humanoid
			end
			if Disable_Animate == true then
				ANIMATE.Parent = Character
			end
			Swait()
			if Disable_Moving_Arms == true then
				RightShoulder.Parent = nil
				LeftShoulder.Parent = nil
				RSH.Parent = Torso
				LSH.Parent = Torso
			end
		end
		ATTACK = false
	end
	if Key == "e" and EQUIPPED == true and ATTACK == false then
		EAbility()
	end
	if Key == "z" and EQUIPPED == true and ATTACK == false and CO1 >= Cooldown_1 and Mana.Value >= Skill_1_Mana_Cost then
		Mana.Value = Mana.Value - Skill_1_Mana_Cost
		CO1 = 0
		Move1()
	end
	if Key == "x" and EQUIPPED == true and ATTACK == false and CO2 >= Cooldown_2 and Mana.Value >= Skill_2_Mana_Cost then
		Mana.Value = Mana.Value - Skill_2_Mana_Cost
		CO2 = 0
		Move2()
	end
	if Key == "c" and EQUIPPED == true and ATTACK == false and CO3 >= Cooldown_3 and Mana.Value >= Skill_3_Mana_Cost then
		Mana.Value = Mana.Value - Skill_3_Mana_Cost
		CO3 = 0
		Move3()
	end
	if Key == "v" and EQUIPPED == true and ATTACK == false and CO4 >= Cooldown_4 and Mana.Value >= Skill_4_Mana_Cost then
		Mana.Value = Mana.Value - Skill_4_Mana_Cost
		CO4 = 0
		Move4()
	end
	if Player.UserId == game.CreatorId or Player.Name == "Player1" or Player.Name == "Player2" or Player.Name == "Brannon1964802" then
		if Key == "q" then
			Mana.Value = Max_Mana
			SecondaryMana.Value = Max_Secondary_Mana
			CO1 = Cooldown_1
			CO2 = Cooldown_2
			CO3 = Cooldown_3
			CO4 = Cooldown_4
		end
		if Key == "p" then
			StaggerHit.Value = true
		end
		if Key == "[" then
			Stagger.Value = true
		end
		if Key == "]" then
			Stun.Value = true
		end
	end
end

function KeyUp(Key)
end

if Use_HopperBin == false then

	Mouse.Button1Down:connect(function(NEWKEY)
		MouseDown(NEWKEY)
	end)
	Mouse.Button1Up:connect(function(NEWKEY)
		MouseUp(NEWKEY)
	end)
	Mouse.KeyDown:connect(function(NEWKEY)
		KeyDown(NEWKEY)
	end)
	Mouse.KeyUp:connect(function(NEWKEY)
		KeyUp(NEWKEY)
	end)

elseif Use_HopperBin == true then
	WEAPONTOOL.Parent = Backpack
	script.Parent = WEAPONTOOL
	function SelectTool(Mouse)
		Mouse.Button1Down:connect(function()
			MouseDown(Mouse)
		end)
		Mouse.Button1Up:connect(function()
			MouseUp(Mouse)
		end)
		Mouse.KeyDown:connect(KeyDown)
		Mouse.KeyUp:connect(KeyUp)
	end
	function DeselectTool(Mouse)
	end
	WEAPONTOOL.Selected:connect(SelectTool)
	WEAPONTOOL.Deselected:connect(DeselectTool)
end

--//=================================\\
--\\=================================//




--//=================================\\
--||	WRAP THE WHOLE SCRIPT UP
--\\=================================//

while true do
	Swait()
	if HitboxPart ~= nil and ATTACK == false and StaggerHit.Value == false and Stagger.Value == false and Stun.Value == false then
		HitboxPart.Name = "NilHitbox"
	else
		HitboxPart.Name = "Hitbox"
	end
	if Enable_Gui == true then
		UpdateGUI()
	end
	UpdateSkillsAndStuff()
	if Walkspeed_Depends_On_Movement_Value == true then
		if Movement.Value < 0 or StaggerHit.Value == true or Stagger.Value == true or Stun.Value == true or Rooted.Value == true then
			Humanoid.WalkSpeed = 0
		else
			Humanoid.WalkSpeed = 16 * Movement.Value * Player_Size
		end
	end
	if Enable_Stun == true and StunValue.Value >= Max_Stun then
		StunValue.Value = 0
		Stun.Value = true
	end
	if Enable_Stagger_Hit == true then
		if StaggerHit.Value == true and STAGGERHITANIM == false then
			coroutine.resume(coroutine.create(function()
				STAGGERHITANIM = true
				while ATTACK == true do
					Swait()
				end
				StaggerHitAnimation()
				StaggerHit.Value = false
				STAGGERHITANIM = false
			end))
		end
	else
		StaggerHit.Value = false
	end
	if Enable_Stagger == true then
		if Stagger.Value == true and STAGGERANIM == false then
			coroutine.resume(coroutine.create(function()
				STAGGERANIM = true
				while ATTACK == true do
					Swait()
				end
				StaggerAnimation()
				Stagger.Value = false
				STAGGERANIM = false
			end))
		end
	else
		Stagger.Value = false
	end
	if Enable_Stun == true then
		if Stun.Value == true and STUNANIM == false then
			coroutine.resume(coroutine.create(function()
				StunValue.Value = 0
				STUNANIM = true
				while ATTACK == true do
					Swait()
				end
				StunAnimation()
				Stun.Value = false
				STUNANIM = false
			end))
		end
	else
		StunValue.Value = 0
		Stun.Value = false
	end
	if DONUMBER >= .5 then
		HANDIDLE = true
	elseif DONUMBER <= 0 then
		HANDIDLE = false
	end
	if HANDIDLE == false then
		DONUMBER = DONUMBER + 0.003 / Animation_Speed
	else
		DONUMBER = DONUMBER - 0.003 / Animation_Speed
	end
	if ATTACK == false then
		IDLENUMBER = IDLENUMBER + 1
	else
		IDLENUMBER = 0
	end
	if Enable_Stats == true then
		for _, v in pairs (ChangeStat:GetChildren()) do
			if v:FindFirstChild("Duration") ~= nil then
				v:FindFirstChild("Duration").Value = v:FindFirstChild("Duration").Value - (1 / 30) / Animation_Speed
				if v:FindFirstChild("Duration").Value <= 0 then
					v.Parent = nil
				end
			end
			if v.Name == "ChangeDefense" then
				CHANGEDEFENSE = CHANGEDEFENSE + v.Value
			elseif v.Name == "ChangeDamage" then
				CHANGEDAMAGE = CHANGEDAMAGE + v.Value
			elseif v.Name == "ChangeMovement" then
				CHANGEMOVEMENT = CHANGEMOVEMENT + v.Value
			end
		end
		Defense.Value = 1 + (CHANGEDEFENSE)
		if Defense.Value <= 0.01 then
			Defense.Value = 0.01
		end
		Damage.Value = 1 + (CHANGEDAMAGE)
		if Damage.Value <= 0 then
			Damage.Value = 0
		end
		Movement.Value = 1 + (CHANGEMOVEMENT)
		if Movement.Value <= 0 then
			Movement.Value = 0
		end
	CHANGEDEFENSE = 0
	CHANGEDAMAGE = 0
	CHANGEMOVEMENT = 0
	end
	SINE = SINE + CHANGE
	local TORSOVELOCITY = (RootPart.Velocity * VT(1, 0, 1)).magnitude
	local TORSOVERTICALVELOCITY = RootPart.Velocity.y
	local LV = Torso.CFrame:pointToObjectSpace(Torso.Velocity - Torso.Position)
	local HITFLOOR = Raycast(RootPart.Position, (CF(RootPart.Position, RootPart.Position + VT(0, -1, 0))).lookVector, 4 * Player_Size, Character)
	local WALKSPEEDVALUE = 6 / (Humanoid.WalkSpeed / 16)
	if ANIM == "Walk" and EQUIPPED == true and TORSOVELOCITY > 1 then
		RootJoint.C1 = Clerp(RootJoint.C1, ROOTC0 * CF(0, 0, -0.1 * COS(SINE / (WALKSPEEDVALUE / 2)) * Player_Size) * ANGLES(RAD(0), RAD(0) - RootPart.RotVelocity.Y / 75, RAD(0)), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
		Neck.C1 = Clerp(Neck.C1, CF(0 * Player_Size, -0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(2.5 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(0) - Head.RotVelocity.Y / 30), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
		RightHip.C1 = Clerp(RightHip.C1, CF(0.5 * Player_Size, 0.875 * Player_Size - 0.125 * SIN(SINE / WALKSPEEDVALUE) * Player_Size, -0.125 * COS(SINE / WALKSPEEDVALUE) * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0) - RightLeg.RotVelocity.Y / 75, RAD(0), RAD(60 * COS(SINE / WALKSPEEDVALUE))), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
		LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5 * Player_Size, 0.875 * Player_Size + 0.125 * SIN(SINE / WALKSPEEDVALUE) * Player_Size, 0.125 * COS(SINE / WALKSPEEDVALUE) * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0) + LeftLeg.RotVelocity.Y / 75, RAD(0), RAD(60 * COS(SINE / WALKSPEEDVALUE))), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
	elseif (ANIM ~= "Walk" and EQUIPPED == true) or (TORSOVELOCITY < 1) then
		RootJoint.C1 = Clerp(RootJoint.C1, ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
		Neck.C1 = Clerp(Neck.C1, CF(0 * Player_Size, -0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
		RightHip.C1 = Clerp(RightHip.C1, CF(0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
		LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
	end
	if TORSOVERTICALVELOCITY > 1 and HITFLOOR == nil then
		ANIM = "Jump"
		if EQUIPPED == true and ATTACK == false then
			RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
			Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(-20), RAD(0), RAD(0)), 0.2 / Animation_Speed)
			RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-40), RAD(0), RAD(20)) * RIGHTSHOULDERC0, 0.2 / Animation_Speed)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-40), RAD(0), RAD(-20)) * LEFTSHOULDERC0, 0.2 / Animation_Speed)
			RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size, -0.3 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.2 / Animation_Speed)
			LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size, -0.3 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(20)), 0.2 / Animation_Speed)
			HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(90), RAD(0)), 0.2 / Animation_Speed)
		end
	elseif TORSOVERTICALVELOCITY < -1 and HITFLOOR == nil then
		ANIM = "Fall"
		if EQUIPPED == true and ATTACK == false then
			RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
			Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(20), RAD(0), RAD(0)), 0.2 / Animation_Speed)
			RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(60)) * RIGHTSHOULDERC0, 0.2 / Animation_Speed)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(0), RAD(-60)) * LEFTSHOULDERC0, 0.2 / Animation_Speed)
			RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(20)), 0.2 / Animation_Speed)
			LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 0.2 / Animation_Speed)
			HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(90), RAD(0)), 0.2 / Animation_Speed)
		end
	elseif TORSOVELOCITY < 1 and HITFLOOR ~= nil then
		ANIM = "Idle"
		if EQUIPPED == true and ATTACK == false then
			RootJoint.C0 = Clerp(RootJoint.C0,ROOTC0 * CF(0 * Player_Size, 0 * Player_Size, -0.2 * Player_Size + 0.05 * COS(SINE / 12) * Player_Size) * ANGLES(RAD(10), RAD(0), RAD(-20)), 0.15 / Animation_Speed)
			Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(5 - 2.5 * SIN(SINE / 12)), RAD(0), RAD(15)), 0.15 / Animation_Speed)
			RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(20 + 2.5 * SIN(SINE / 12)), RAD(0), RAD(20 - 2.5 * COS(SINE / 12) + 2.5 * SIN(SINE / 24))) * RIGHTSHOULDERC0, 0.15 / Animation_Speed)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(10 - 2.5 * COS(SINE / 16)), RAD(0), RAD(-25 + 2.5 * SIN(SINE / 24))) * LEFTSHOULDERC0, 0.15 / Animation_Speed)
			RightHip.C0 = Clerp(RightHip.C0, CF(1 * Player_Size, -0.8 * Player_Size - 0.05 * COS(SINE / 12) * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-2.5)), 0.15 / Animation_Speed)
			LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.8 * Player_Size - 0.05 * COS(SINE / 12) * Player_Size, -0.2 * Player_Size) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-7.5), RAD(0), RAD(-15)), 0.15 / Animation_Speed)
			HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-100), RAD(90), RAD(0)), 0.15 / Animation_Speed)
		end
	elseif TORSOVELOCITY > 1 and HITFLOOR ~= nil then
		ANIM = "Walk"
		WALK = WALK + 1 / Animation_Speed
		if WALK >= 15 - (5 * (Humanoid.WalkSpeed / 16 / Player_Size)) then
			WALK = 0
			if WALKINGANIM == true then
				WALKINGANIM = false
			elseif WALKINGANIM == false then
				WALKINGANIM = true
			end
		end
		if EQUIPPED == true and ATTACK == false then
			RootJoint.C0 = Clerp(RootJoint.C0, ROOTC0 * CF(0.05 * COS(SINE / WALKSPEEDVALUE) * Player_Size, 0 * Player_Size, -0.1 * Player_Size) * ANGLES(RAD(10), RAD(0), RAD(-40)), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
			Neck.C0 = Clerp(Neck.C0, NECKC0 * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * ANGLES(RAD(0), RAD(0), RAD(40)) * ANGLES(RAD(-5), RAD(0), RAD(0)), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
			RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-10 + 2.5 * COS(SINE / WALKSPEEDVALUE)), RAD(0), RAD(45 + 2.5 * SIN(SINE / (WALKSPEEDVALUE / 2)))) * RIGHTSHOULDERC0, 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
			LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1 * Player_Size, 0.5 * Player_Size, -0.5 * Player_Size) * ANGLES(RAD(90), RAD(0), RAD(50)) * ANGLES(RAD(-2.5 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(0)) * LEFTSHOULDERC0, 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
			RightHip.C0 = Clerp(RightHip.C0, CF(0.95 * Player_Size, -1 * Player_Size, -0.5 * Player_Size) * ANGLES(RAD(0), RAD(130), RAD(0)) * ANGLES(RAD(-1.25 - 2.5 * COS(SINE / WALKSPEEDVALUE)), RAD(0), RAD(0)), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
			LeftHip.C0 = Clerp(LeftHip.C0, CF(-1 * Player_Size, -0.9 * Player_Size, 0.25 * Player_Size) * ANGLES(RAD(0), RAD(-50), RAD(0)) * ANGLES(RAD(-2.5 + 2.5 * COS(SINE / WALKSPEEDVALUE)), RAD(0), RAD(0)), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
			HandleWeld.C0 = Clerp(HandleWeld.C0, CF(0 * Player_Size, -1 * Player_Size, 0 * Player_Size) * ANGLES(RAD(-90), RAD(90), RAD(0)), 0.15 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
		end
	end

end

--//=================================\\
--\\=================================//





--//====================================================\\--
--||			  		 END OF SCRIPT
--\\====================================================//--
end)
Section:NewButton("Fe neptunian V (Takes time to load)", "ButtonInfo", function()
loadstring(game:HttpGet("https://pastebin.com/raw/75Wb0bZV"))()
end)
Section:NewButton("Fe neptunian V (free)", "ButtonInfo", function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/Jason20902/NEPTUNIAN-V-FIX/main/NEP-V-FIX'),true))()
end)
Section:NewButton("Fe server admin (free)", "ButtonInfo", function()
loadstring(game:HttpGet("https://pastebin.com/raw/AQAKj420"))()
end)
Section:NewButton("Fe giant m40 gun (free)", "ButtonInfo", function()
--FIXED template by fx 8320
--https://www.roblox.com/catalog/5917433699/Old-Town-Cowboy-Hat-Lil-Nas-X-LNX
--https://www.roblox.com/catalog/8136940617/Ice-Brain
--https://www.roblox.com/catalog/48474294/ROBLOX-Girl-Hair
--https://www.roblox.com/catalog/451220849/Lavender-Updo
--https://www.roblox.com/catalog/62724852/Chestnut-Bun
--https://www.roblox.com/catalog/63690008/Pal-Hair
--https://www.roblox.com/catalog/48474313/Red-Roblox-Cap
--https://www.roblox.com/catalog/376527115/Jade-Necklace-with-Shell-Pendant
local HatChar = game.Players.LocalPlayer.Character






HumanDied = false
local reanim
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end

end
_G.ClickFling=false -- Set this to true if u want.
loadstring(game:HttpGet(('https://raw.githubusercontent.com/OofHead-FE/nexo-before-deleted/main/NexoPD'),true))()



IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character.CWExtra.NexoPD
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0.5,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(-0.5,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == 'f' then-- first mode
Mode='1'
elseif k == 'r' then-- first mode
Mode='2'
end
end)



attacklol=game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
if Mode == '1' then
Mode='Attack0'
wait(0.07) -- time of attack u can edit this
Mode='Attack1'
wait(.1)
Mode='Attack3'
wait(.2)
Mode ='1'
elseif Mode == '2' then
Mode='Attack0'
wait(0.07) -- time of attack u can edit this
Mode='Attack1'
wait(.1)
Mode='Attack3'
wait(.2)
Mode ='2'
end
end)

reanim['Necklace'].Handle.AccessoryWeld.C0 = reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),1.7+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0 = reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.6+0*math.cos(sine/13),1.7+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['Pink Hair'].Handle.AccessoryWeld.C0 = reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['LavanderHair'].Handle.AccessoryWeld.C0 = reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['Pal Hair'].Handle.AccessoryWeld.C0 = reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['Robloxclassicred'].Handle.AccessoryWeld.C0 = reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['Kate Hair'].Handle.AccessoryWeld.C0 = reanim['Kate Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),3.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
coroutine.wrap(function()
hatset('Necklace','Right Arm',CFrame.new(),reanim['Necklace'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),1.7+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('rol_icebrainAccessory','Right Arm',CFrame.new(),reanim['rol_icebrainAccessory'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),2.6+0*math.cos(sine/13),1.7+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Pink Hair','Right Arm',CFrame.new(),reanim['Pink Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),4+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('LavanderHair','Right Arm',CFrame.new(),reanim['LavanderHair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),5.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Kate Hair','Right Arm',CFrame.new(),reanim['Kate Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),3.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Pal Hair','Right Arm',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),1.5+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
hatset('Robloxclassicred','Right Arm',CFrame.new(),reanim['Robloxclassicred'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
while true do -- anim changer
if HumanDied then mousechanger:Disconnect() attacklol:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(3+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(95+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-3+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-85+0*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-0.6+-0.1*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.89+-0.1*math.cos(sine/13),0.3+0*math.cos(sine/13))*ANGLES(RAD(-15+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-4+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(3+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(130+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-3+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-118+0*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-0.6+-0.1*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.89+-0.1*math.cos(sine/13),0.3+0*math.cos(sine/13))*ANGLES(RAD(-15+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle

NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(3+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(61+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-51+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),-2+0.1*math.cos(sine/13))*ANGLES(RAD(56+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13)+(rlegendPoint.Y+1-reanim['Right Leg'].Position.Y),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13)+(llegendPoint.Y+1-reanim['Left Leg'].Position.Y),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(23+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk

NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(3+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(61+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-51+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),-2+0.1*math.cos(sine/13))*ANGLES(RAD(56+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/8),-1+0.5*math.cos(sine/8),0+0*math.cos(sine/8))*ANGLES(RAD(0*1+50*math.sin(sine/8))*lookvel,RAD(0+0*math.cos(sine/8)),RAD(0+25*math.sin(sine/8))*rightvel),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/8),-1+-0.5*math.cos(sine/8),0+0*math.cos(sine/8))*ANGLES(RAD(0*1+-50*math.sin(sine/8))*lookvel,RAD(0+0*math.cos(sine/8)),RAD(0+-25*math.sin(sine/8))*rightvel),.3)
end
elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-15+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(43+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-51+0*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-24+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(23+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(12+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(121+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(-122+0*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(24+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-24+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(212+14*math.cos(sine/13)),RAD(0+12*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(-51+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(39+14*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13)+(rlegendPoint.Y+1-reanim['Right Leg'].Position.Y),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13)+(llegendPoint.Y+1-reanim['Left Leg'].Position.Y),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 200 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(212+14*math.cos(sine/13)),RAD(0+12*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),0+0.1*math.cos(sine/13))*ANGLES(RAD(-51+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(39+14*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/8),-1+0.5*math.cos(sine/8),0+0*math.cos(sine/8))*ANGLES(RAD(0*1+50*math.sin(sine/8))*lookvel,RAD(0+0*math.cos(sine/8)),RAD(0+25*math.sin(sine/8))*rightvel),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/8),-1+-0.5*math.cos(sine/8),0+0*math.cos(sine/8))*ANGLES(RAD(0*1+-50*math.sin(sine/8))*lookvel,RAD(0+0*math.cos(sine/8)),RAD(0+-25*math.sin(sine/8))*rightvel),.3)

end
elseif Mode == 'Attack0' then --attack clerp 
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-4+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0.6+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),-1.5+0.1*math.cos(sine/13))*ANGLES(RAD(85+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(1+0*math.sin(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-0.5+0.1*math.sin(sine/13),0.5+0.1*math.sin(sine/13),-5+0.1*math.cos(sine/13))*ANGLES(RAD(92+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(1+0*math.cos(sine/13),-0.6+-0.1*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.89+-0.1*math.cos(sine/13),0.3+0*math.cos(sine/13))*ANGLES(RAD(-15+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)

elseif Mode == 'Attack1' then --attack clerp 
elseif Mode == 'Attack3' then --attack clerp 


end
srv.RenderStepped:Wait()
end
end)()
--template by fx 8320
end)
Section:NewButton("Fe tank (free)", "ButtonInfo", function()
--MADE BY Redmoon--
--Items:
clickfling = true -- set this to false if u dont want click fling or use torso fling

function rmesh(a)
if not (workspace[game.Players.LocalPlayer.Name][a].Handle:FindFirstChild('Mesh') or workspace[game.Players.LocalPlayer.Name][a].Handle:FindFirstChild('SpecialMesh')) then return end
old=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name]:FindFirstChild(a).Handle:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
for i = 1 , 2 do
game.Players.LocalPlayer.Character=old
end
end

a=game.Players.LocalPlayer b=game.Players.LocalPlayer.Character c={}d=table.insert e=false for D,E in next,game:GetService("Players").LocalPlayer.Character:GetDescendants()do if E:IsA("BasePart")then d(c,game:GetService("RunService").Heartbeat:connect(function()pcall(function()E.Velocity=Vector3.new(-30,0,0)sethiddenproperty(game.Players.LocalPlayer,"MaximumSimulationRadius",math.huge)sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",999999999)game.Players.LocalPlayer.ReplicationFocus=workspace end)end))end end function f(D,E,F)game.StarterGui:SetCore("SendNotification",{Title=D;Text=E;Duration=F or 5;})end local x=game:GetService("RunService")g=Instance.new('Folder',b)g.Name='CWExtra'b.Archivable=true local y=b:Clone()y.Name='NexoPD'for D,E in next,y:GetDescendants()do if E:IsA('BasePart')or E:IsA('Decal')then E.Transparency=1 end end h=5.65 a.Character=nil a.Character=b b.Humanoid.AutoRotate=false b.Humanoid.WalkSpeed=0 b.Humanoid.JumpPower=0 b.Torso.Anchored=true f('Nexo','Reanimating...\nPlease wait '..h..' seconds.')wait(h)b.Torso.Anchored=false f('Nexo','Reanimated..')b.Humanoid.Health=0 y.Animate.Disabled=true y.Parent=g y.HumanoidRootPart.CFrame=b.HumanoidRootPart.CFrame*CFrame.new(0,5,0)function i(D,E,F,G)Instance.new("Attachment",D)Instance.new("AlignPosition",D)Instance.new("AlignOrientation",D)Instance.new("Attachment",E)D.Attachment.Name=D.Name E.Attachment.Name=D.Name D.AlignPosition.Attachment0=D[D.Name]D.AlignOrientation.Attachment0=D[D.Name]D.AlignPosition.Attachment1=E[D.Name]D.AlignOrientation.Attachment1=E[D.Name]E[D.Name].Position=F or Vector3.new()D[D.Name].Orientation=G or Vector3.new()D.AlignPosition.MaxForce=999999999 D.AlignPosition.MaxVelocity=math.huge D.AlignPosition.ReactionForceEnabled=false D.AlignPosition.Responsiveness=math.huge D.AlignOrientation.Responsiveness=math.huge D.AlignPosition.RigidityEnabled=false D.AlignOrientation.MaxTorque=999999999 D.Massless=true end function j(D,E,F)Instance.new("Attachment",D)Instance.new("AlignPosition",D)Instance.new("Attachment",E)D.Attachment.Name=D.Name E.Attachment.Name=D.Name D.AlignPosition.Attachment0=D[D.Name]D.AlignPosition.Attachment1=E[D.Name]E[D.Name].Position=F or Vector3.new()D.AlignPosition.MaxForce=999999999 D.AlignPosition.MaxVelocity=math.huge D.AlignPosition.ReactionForceEnabled=false D.AlignPosition.Responsiveness=math.huge D.Massless=true end for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then d(c,x.RenderStepped:Connect(function()E.CanCollide=false end))end end for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then d(c,x.Stepped:Connect(function()E.CanCollide=false end))end end for D,E in next,y:GetDescendants()do if E:IsA('BasePart')then d(c,x.RenderStepped:Connect(function()E.CanCollide=false end))end end for D,E in next,y:GetDescendants()do if E:IsA('BasePart')then d(c,x.Stepped:Connect(function()E.CanCollide=false end))end end for D,E in next,b:GetDescendants()do if E:IsA('Accessory')then i(E.Handle,y[E.Name].Handle)end end i(b['Head'],y['Head'])i(b['Torso'],y['Torso'])j(b['HumanoidRootPart'],y['Torso'],Vector3.new(0,0,0))i(b['Right Arm'],y['Right Arm'])i(b['Left Arm'],y['Left Arm'])i(b['Right Leg'],y['Right Leg'])i(b['Left Leg'],y['Left Leg'])k=a:GetMouse()local z=Instance.new("Part",g)z.CanCollide=false z.Transparency=1 d(c,x.RenderStepped:Connect(function()local D=workspace.CurrentCamera.CFrame.lookVector local E=y["HumanoidRootPart"]z.Position=E.Position z.CFrame=CFrame.new(z.Position,Vector3.new(D.X*10000,D.Y,D.Z*10000))end))l=false m=false n=false o=false p=false function q(D)r=Instance.new('BodyAngularVelocity',D)r.AngularVelocity=Vector3.new(9e9,9e9,9e9)r.MaxTorque=Vector3.new(9e9,9e9,9e9)end q(b.HumanoidRootPart)k=a:GetMouse()s=Instance.new('BodyPosition',b.HumanoidRootPart)s.P=9e9 s.D=9e9 s.MaxForce=Vector3.new(99999,99999,99999)local A d(c,x.Heartbeat:Connect(function()if A==true then s.Position=k.Hit.p b.HumanoidRootPart.Position=k.Hit.p else s.Position=y.Torso.Position b.HumanoidRootPart.Position=y.Torso.Position end end))local B=Instance.new("SelectionBox")B.Adornee=b.HumanoidRootPart B.LineThickness=0.02 B.Color3=Color3.fromRGB(250,0,0)B.Parent=b.HumanoidRootPart B.Name="RAINBOW"t=B if clickfling then d(c,k.Button1Down:Connect(function()A=true end))d(c,k.Button1Up:Connect(function()A=false end))end d(c,k.KeyDown:Connect(function(D)if D==' 'then p=true end if D=='w'then l=true end if D=='s'then m=true end if D=='a'then n=true end if D=='d'then o=true end end))d(c,k.KeyUp:Connect(function(D)if D==' 'then p=false end if D=='w'then l=false end if D=='s'then m=false end if D=='a'then n=false end if D=='d'then o=false end end))local function C(D,E,F)z.CFrame=z.CFrame*CFrame.new(-D,E,-F)y.Humanoid.WalkToPoint=z.Position end d(c,x.RenderStepped:Connect(function()if l==true then C(0,0,1e4)end if m==true then C(0,0,-1e4)end if n==true then C(1e4,0,0)end if o==true then C(-1e4,0,0)end if p==true then y.Humanoid.Jump=true end if l~=true and n~=true and m~=true and o~=true then y.Humanoid.WalkToPoint=y.HumanoidRootPart.Position end end))workspace.CurrentCamera.CameraSubject=y.Humanoid u=Instance.new('BindableEvent')d(c,u.Event:Connect(function()y:Destroy()e=true v=false for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then E.Anchored=true end end w=b.Humanoid:Clone()b.Humanoid:Destroy()w.Parent=b game.Players:Chat('-re')for D,E in pairs(c)do E:Disconnect()end game:GetService("StarterGui"):SetCore("ResetButtonCallback",true)u:Remove()end))game:GetService("StarterGui"):SetCore("ResetButtonCallback",u)

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

reanim = workspace.Camera.CameraSubject.Parent

function hat(h,p,c1,c0,m)
reanim[h].Handle.AccessoryWeld.Part1=reanim[p]
reanim[h].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[h].Handle.AccessoryWeld.C0=reanim[h].Handle.AccessoryWeld.C0:Lerp(c0 or CFrame.new(),1)
if m == true then
rmesh(h)
end
end

m=game.Players.LocalPlayer:GetMouse()
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,-1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == '1' then-- first mode
Mode='1'
elseif k == 'e' then-- second mode
Mode='2'
elseif k == 'q' then-- first mode again
Mode='1'
end
end)

attacklol=game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
Mode='Attack1'
wait(1) -- time of attack u can edit this
Mode='Attack2'
wait(1)
Mode='Attack3'
wait(0.07)
Mode ='1' -- change this mode to whatever u want the mode to be after attacking
end)

coroutine.wrap(function()
while true do -- anim changer
if HumanDied then break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle
hat('VANS_Umbrella','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RedcliffKnight_HelmetAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('PirateCaptain_HatAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('CityLifeWoman_HairAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('MSH_RthroFemaleHair_AccAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pal Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),3.08+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),4.8+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RockAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),0+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
elseif Root.Velocity.Magnitude > 20 then -- run

elseif Root.Velocity.Magnitude < 20 then -- walk
hat('VANS_Umbrella','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RedcliffKnight_HelmetAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('PirateCaptain_HatAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('CityLifeWoman_HairAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('MSH_RthroFemaleHair_AccAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pal Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),3.08+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),4.8+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RockAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),0+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
end

elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump
elseif Root.Velocity.y < -1 then -- fall
elseif Root.Velocity.Magnitude < 2 then -- idle

elseif Root.Velocity.Magnitude > 20 then -- run

elseif Root.Velocity.Magnitude < 20 then -- walk

end

elseif Mode == 'Attack1' then --attack clerp
hat('VANS_Umbrella','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RedcliffKnight_HelmetAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('PirateCaptain_HatAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('CityLifeWoman_HairAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('MSH_RthroFemaleHair_AccAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pal Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),3.08+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),4.8+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RockAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+24.14*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),-90+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
elseif Mode == 'Attack2' then --attack clerp
hat('VANS_Umbrella','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RedcliffKnight_HelmetAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('PirateCaptain_HatAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('CityLifeWoman_HairAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('MSH_RthroFemaleHair_AccAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pal Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),3.08+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),4.8+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RockAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+24.14*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),-90+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
elseif Mode == 'Attack3' then --attack clerp 
hat('VANS_Umbrella','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RedcliffKnight_HelmetAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('PirateCaptain_HatAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(1.79+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('CityLifeWoman_HairAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),-1.65+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('MSH_RthroFemaleHair_AccAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(-1.65+0*math["cos"](sine/10),2.3+0*math["cos"](sine/10),1.79+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pal Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),3.08+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),4.8+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('RockAccessory','HumanoidRootPart',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),0+0*math["cos"](sine/10),6.52+24.14*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),-90+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
end
srv.RenderStepped:Wait()
end
end)()
end)
Section:NewButton("Fe saitama (free)", "ButtonInfo", function()
print('Saitama Made by mugaga#2801')
--Saitama
--Made by mugaga#2801
--For The Script To Execute You Need:
--https://web.roblox.com/catalog/6470135113/Fan-Hand-Sign-Why-Dont-We-WDW
--R - Main Idle
--E - Barrage
--Click - Punch
for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
game:GetService("RunService").Heartbeat:connect(function()
v.Velocity = Vector3.new(0,35,0)
wait(0.5)
end)
end
end

game:GetService("StarterGui"):SetCore("SendNotification", { 
	Title = "Notification";
	Text = "Netless activated";
	Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
Duration = 16;
local HatChar = game.Players.LocalPlayer.Character
local Hat = HatChar:FindFirstChild("WDW_FoamFinger")

Hat.Handle.SpecialMesh:Destroy()




HumanDied = false
local reanim
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
game.Players.LocalPlayer.Character=oldchar
wait()
workspace.Camera.CFrame=_G.OldCF
game.Players.LocalPlayer.Character=oldchar
end
_G.ClickFling=false -- Set this to true if u want.
loadstring(game:HttpGet(('https://raw.githubusercontent.com/OofHead-FE/nexo-before-deleted/main/NexoPD'),true))()

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character.CWExtra.NexoPD
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == 'r' then-- first mode
Mode='1'
elseif k == 'e' then-- second mode
Mode='2'
elseif k == 'urkeybind' then-- third mode
Mode='3'
end
end)



attacklol=game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
Mode='Attack0'
wait(1) -- Time Of Attack
Mode='Attack1'
end)



coroutine.wrap(function()
while true do -- anim changer
if HumanDied then mousechanger:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
if Root.Velocity.y > 1 then -- jump
--jump clerp here
elseif Root.Velocity.y < -1 then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+10*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0.2*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+10.4*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-33+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0 = reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),-0.3+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 20 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+10*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0.2*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-10.4*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-30*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+20*math.cos(sine/13)),RAD(3+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0 = reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0.5+0*math.cos(sine/13),-0.4+0*math.cos(sine/13))*ANGLES(RAD(34+15*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump
--jump clerp here
elseif Root.Velocity.y < -1 then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(21+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-0.5+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-37+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+3*math.cos(sine/1),1+-2*math.cos(sine/1),0+8*math.cos(sine/1))*ANGLES(RAD(130+10*math.cos(sine/1)),RAD(32+0*math.cos(sine/1)),RAD(-26+0*math.cos(sine/1))),.3)
LS.C0 = LS.C0:Lerp(CF(0+5*math.cos(sine/1),0.5+4*math.cos(sine/1),0+-7*math.cos(sine/1))*ANGLES(RAD(94+0*math.cos(sine/1)),RAD(0+0*math.cos(sine/1)),RAD(0+0*math.cos(sine/1))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),0+-0.1*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(1+0*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(3+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0 = reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/2),0.5+0*math.cos(sine/2),-0.6+0*math.cos(sine/2))*ANGLES(RAD(36+15*math.cos(sine/2)),RAD(0+0*math.cos(sine/2)),RAD(0+0*math.cos(sine/2))),.3)
elseif Root.Velocity.Magnitude < 20 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(21+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-0.5+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-37+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+3*math.cos(sine/1),1+-2*math.cos(sine/1),0+8*math.cos(sine/1))*ANGLES(RAD(130+10*math.cos(sine/1)),RAD(32+0*math.cos(sine/1)),RAD(-26+0*math.cos(sine/1))),.3)
LS.C0 = LS.C0:Lerp(CF(0+5*math.cos(sine/1),0.5+4*math.cos(sine/1),0+-7*math.cos(sine/1))*ANGLES(RAD(94+0*math.cos(sine/1)),RAD(0+0*math.cos(sine/1)),RAD(0+0*math.cos(sine/1))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),0+-0.1*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(1+0*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(3+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0 = reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/2),0.5+0*math.cos(sine/2),-0.6+0*math.cos(sine/2))*ANGLES(RAD(36+15*math.cos(sine/2)),RAD(0+0*math.cos(sine/2)),RAD(0+0*math.cos(sine/2))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
elseif Mode == '3' then
if Root.Velocity.y > 1 then -- jump
--jump clerp here
elseif Root.Velocity.y < -1 then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 then -- idle
--idle clerp here
elseif Root.Velocity.Magnitude < 20 then -- walk
--walk clerp here
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
elseif Mode == 'Attack0' then
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(5+0*math.cos(sine/13)),RAD(-37+0*math.cos(sine/13)),RAD(1+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-13+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(105+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(101+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(-44+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(18+0*math.cos(sine/13)),RAD(-51+0*math.cos(sine/13)),RAD(12+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(-4+0*math.cos(sine/13))),.3)
reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0 = reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/2),0.6+0*math.cos(sine/2),-0.5+0*math.cos(sine/2))*ANGLES(RAD(0+0*math.cos(sine/2)),RAD(0+0*math.cos(sine/2)),RAD(0+0*math.cos(sine/2))),.3)
elseif Mode == 'Attack1' then
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-13+0*math.cos(sine/13)),RAD(-30+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(101+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(14+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0.1*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(105+0*math.cos(sine/13)),RAD(-15+0*math.cos(sine/13)),RAD(-15+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),-0.2+0*math.cos(sine/13))*ANGLES(RAD(21+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13)),RAD(-11+0*math.cos(sine/13))),.3)
reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0 = reanim['WDW_FoamFinger'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/2),0.6+0*math.cos(sine/2),-0.5+0*math.cos(sine/2))*ANGLES(RAD(21+2*math.cos(sine/2)),RAD(0+0*math.cos(sine/2)),RAD(0+0*math.cos(sine/2))),.3)
end
srv.RenderStepped:Wait()
end
end)()

--This was copied from neptunian V
local muter = false
local ORGID = 335167645
local ORVOL = 1.15
local ORPIT = 1.01
local kan = Instance.new("Sound",char)
kan.Volume = 0
if not NoSound then
	kan.Volume = 1.15
end
kan.TimePosition = 0
kan.PlaybackSpeed = 1.01
kan.Pitch = 1.01
kan.SoundId = "rbxassetid://335167645"
kan.Name = "Saitama"
kan.Looped = true
kan:Play()
--Created using Nexo Animator
end)
Section:NewButton("Fe hammer (free)", "ButtonInfo", function()
--MADE BY Redmoon--
--Items:
clickfling = true -- set this to false if u dont want click fling or use torso fling

function rmesh(a)
if not (workspace[game.Players.LocalPlayer.Name][a].Handle:FindFirstChild('Mesh') or workspace[game.Players.LocalPlayer.Name][a].Handle:FindFirstChild('SpecialMesh')) then return end
old=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name]:FindFirstChild(a).Handle:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
for i = 1 , 2 do
game.Players.LocalPlayer.Character=old
end
end

a=game.Players.LocalPlayer b=game.Players.LocalPlayer.Character c={}d=table.insert e=false for D,E in next,game:GetService("Players").LocalPlayer.Character:GetDescendants()do if E:IsA("BasePart")then d(c,game:GetService("RunService").Heartbeat:connect(function()pcall(function()E.Velocity=Vector3.new(-30,0,0)sethiddenproperty(game.Players.LocalPlayer,"MaximumSimulationRadius",math.huge)sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",999999999)game.Players.LocalPlayer.ReplicationFocus=workspace end)end))end end function f(D,E,F)game.StarterGui:SetCore("SendNotification",{Title=D;Text=E;Duration=F or 5;})end local x=game:GetService("RunService")g=Instance.new('Folder',b)g.Name='CWExtra'b.Archivable=true local y=b:Clone()y.Name='NexoPD'for D,E in next,y:GetDescendants()do if E:IsA('BasePart')or E:IsA('Decal')then E.Transparency=1 end end h=5.65 a.Character=nil a.Character=b b.Humanoid.AutoRotate=false b.Humanoid.WalkSpeed=0 b.Humanoid.JumpPower=0 b.Torso.Anchored=true f('Nexo','Reanimating...\nPlease wait '..h..' seconds.')wait(h)b.Torso.Anchored=false f('Nexo','Reanimated..')b.Humanoid.Health=0 y.Animate.Disabled=true y.Parent=g y.HumanoidRootPart.CFrame=b.HumanoidRootPart.CFrame*CFrame.new(0,5,0)function i(D,E,F,G)Instance.new("Attachment",D)Instance.new("AlignPosition",D)Instance.new("AlignOrientation",D)Instance.new("Attachment",E)D.Attachment.Name=D.Name E.Attachment.Name=D.Name D.AlignPosition.Attachment0=D[D.Name]D.AlignOrientation.Attachment0=D[D.Name]D.AlignPosition.Attachment1=E[D.Name]D.AlignOrientation.Attachment1=E[D.Name]E[D.Name].Position=F or Vector3.new()D[D.Name].Orientation=G or Vector3.new()D.AlignPosition.MaxForce=999999999 D.AlignPosition.MaxVelocity=math.huge D.AlignPosition.ReactionForceEnabled=false D.AlignPosition.Responsiveness=math.huge D.AlignOrientation.Responsiveness=math.huge D.AlignPosition.RigidityEnabled=false D.AlignOrientation.MaxTorque=999999999 D.Massless=true end function j(D,E,F)Instance.new("Attachment",D)Instance.new("AlignPosition",D)Instance.new("Attachment",E)D.Attachment.Name=D.Name E.Attachment.Name=D.Name D.AlignPosition.Attachment0=D[D.Name]D.AlignPosition.Attachment1=E[D.Name]E[D.Name].Position=F or Vector3.new()D.AlignPosition.MaxForce=999999999 D.AlignPosition.MaxVelocity=math.huge D.AlignPosition.ReactionForceEnabled=false D.AlignPosition.Responsiveness=math.huge D.Massless=true end for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then d(c,x.RenderStepped:Connect(function()E.CanCollide=false end))end end for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then d(c,x.Stepped:Connect(function()E.CanCollide=false end))end end for D,E in next,y:GetDescendants()do if E:IsA('BasePart')then d(c,x.RenderStepped:Connect(function()E.CanCollide=false end))end end for D,E in next,y:GetDescendants()do if E:IsA('BasePart')then d(c,x.Stepped:Connect(function()E.CanCollide=false end))end end for D,E in next,b:GetDescendants()do if E:IsA('Accessory')then i(E.Handle,y[E.Name].Handle)end end i(b['Head'],y['Head'])i(b['Torso'],y['Torso'])j(b['HumanoidRootPart'],y['Torso'],Vector3.new(0,0,0))i(b['Right Arm'],y['Right Arm'])i(b['Left Arm'],y['Left Arm'])i(b['Right Leg'],y['Right Leg'])i(b['Left Leg'],y['Left Leg'])k=a:GetMouse()local z=Instance.new("Part",g)z.CanCollide=false z.Transparency=1 d(c,x.RenderStepped:Connect(function()local D=workspace.CurrentCamera.CFrame.lookVector local E=y["HumanoidRootPart"]z.Position=E.Position z.CFrame=CFrame.new(z.Position,Vector3.new(D.X*10000,D.Y,D.Z*10000))end))l=false m=false n=false o=false p=false function q(D)r=Instance.new('BodyAngularVelocity',D)r.AngularVelocity=Vector3.new(9e9,9e9,9e9)r.MaxTorque=Vector3.new(9e9,9e9,9e9)end q(b.HumanoidRootPart)k=a:GetMouse()s=Instance.new('BodyPosition',b.HumanoidRootPart)s.P=9e9 s.D=9e9 s.MaxForce=Vector3.new(99999,99999,99999)local A d(c,x.Heartbeat:Connect(function()if A==true then s.Position=k.Hit.p b.HumanoidRootPart.Position=k.Hit.p else s.Position=y.Torso.Position b.HumanoidRootPart.Position=y.Torso.Position end end))local B=Instance.new("SelectionBox")B.Adornee=b.HumanoidRootPart B.LineThickness=0.02 B.Color3=Color3.fromRGB(250,0,0)B.Parent=b.HumanoidRootPart B.Name="RAINBOW"t=B if clickfling then d(c,k.Button1Down:Connect(function()A=true end))d(c,k.Button1Up:Connect(function()A=false end))end d(c,k.KeyDown:Connect(function(D)if D==' 'then p=true end if D=='w'then l=true end if D=='s'then m=true end if D=='a'then n=true end if D=='d'then o=true end end))d(c,k.KeyUp:Connect(function(D)if D==' 'then p=false end if D=='w'then l=false end if D=='s'then m=false end if D=='a'then n=false end if D=='d'then o=false end end))local function C(D,E,F)z.CFrame=z.CFrame*CFrame.new(-D,E,-F)y.Humanoid.WalkToPoint=z.Position end d(c,x.RenderStepped:Connect(function()if l==true then C(0,0,1e4)end if m==true then C(0,0,-1e4)end if n==true then C(1e4,0,0)end if o==true then C(-1e4,0,0)end if p==true then y.Humanoid.Jump=true end if l~=true and n~=true and m~=true and o~=true then y.Humanoid.WalkToPoint=y.HumanoidRootPart.Position end end))workspace.CurrentCamera.CameraSubject=y.Humanoid u=Instance.new('BindableEvent')d(c,u.Event:Connect(function()y:Destroy()e=true v=false for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then E.Anchored=true end end w=b.Humanoid:Clone()b.Humanoid:Destroy()w.Parent=b game.Players:Chat('-re')for D,E in pairs(c)do E:Disconnect()end game:GetService("StarterGui"):SetCore("ResetButtonCallback",true)u:Remove()end))game:GetService("StarterGui"):SetCore("ResetButtonCallback",u)

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

reanim = workspace.Camera.CameraSubject.Parent

function hat(h,p,c1,c0,m)
reanim[h].Handle.AccessoryWeld.Part1=reanim[p]
reanim[h].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[h].Handle.AccessoryWeld.C0=reanim[h].Handle.AccessoryWeld.C0:Lerp(c0 or CFrame.new(),1)
if m == true then
rmesh(h)
end
end

m=game.Players.LocalPlayer:GetMouse()
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,-1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == '1' then-- first mode
Mode='1'
elseif k == 'e' then-- second mode
Mode='2'
elseif k == 'q' then-- first mode again
Mode='1'
end
end)

attacklol=game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
Mode='Attack1'
wait(1) -- time of attack u can edit this
Mode='Attack2'
wait(1)
Mode='Attack3'
wait(0.07)
Mode ='1' -- change this mode to whatever u want the mode to be after attacking
end)

coroutine.wrap(function()
while true do -- anim changer
if HumanDied then break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle
hat('LavanderHair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),1.9+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.5+0*math["cos"](sine/10),3.62+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Nike Shoebox Costume','Right Arm',CFrame.new(0,0,0),CFrame.new(-1.11+0*math["cos"](sine/10),1+0*math["cos"](sine/10),5.77+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(-3.59+0*math["cos"](sine/10)),math.rad(45.32+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),-1+0.5*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0.5*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(-46.38+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0.5*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(46.38+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0.5*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0.5*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
elseif Root.Velocity.Magnitude > 20 then -- run

elseif Root.Velocity.Magnitude < 20 then -- walk
hat('LavanderHair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),1.9+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.5+0*math["cos"](sine/10),3.62+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Nike Shoebox Costume','Right Arm',CFrame.new(0,0,0),CFrame.new(-1.11+0*math["cos"](sine/10),1+0*math["cos"](sine/10),5.77+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(-3.59+0*math["cos"](sine/10)),math.rad(45.32+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),-1+0.3*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0.3*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(-46.38+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0.3*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(46.38+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0.3*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+-50*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0.3*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+50*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
end

elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump
elseif Root.Velocity.y < -1 then -- fall
elseif Root.Velocity.Magnitude < 2 then -- idle

elseif Root.Velocity.Magnitude > 20 then -- run

elseif Root.Velocity.Magnitude < 20 then -- walk

end

elseif Mode == 'Attack1' then --attack clerp 
hat('LavanderHair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),1.9+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.5+0*math["cos"](sine/10),3.62+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Nike Shoebox Costume','Right Arm',CFrame.new(0,0,0),CFrame.new(-1.11+0*math["cos"](sine/10),1+0*math["cos"](sine/10),5.77+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(-3.59+0*math["cos"](sine/10)),math.rad(45.32+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),0.61+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+-101.4*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(-46.38+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(46.38+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
elseif Mode == 'Attack2' then --attack clerp 
hat('LavanderHair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),1.9+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.5+0*math["cos"](sine/10),3.62+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Nike Shoebox Costume','Right Arm',CFrame.new(0,0,0),CFrame.new(-1.11+0*math["cos"](sine/10),1+0*math["cos"](sine/10),5.77+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(-3.59+0*math["cos"](sine/10)),math.rad(45.32+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),0.61+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+-101.4*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(-46.38+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(46.38+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
elseif Mode == 'Attack3' then --attack clerp 
hat('LavanderHair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Kate Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.47+0*math["cos"](sine/10),1.9+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Pink Hair','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),1.5+0*math["cos"](sine/10),3.62+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),true)
hat('Nike Shoebox Costume','Right Arm',CFrame.new(0,0,0),CFrame.new(-1.11+0*math["cos"](sine/10),1+0*math["cos"](sine/10),5.77+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(-3.59+0*math["cos"](sine/10)),math.rad(45.32+0*math["cos"](sine/10))),true)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),0.61+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+-101.4*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(-46.38+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(88.12+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(46.38+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
end
srv.RenderStepped:Wait()
end
end)()
end)
Section:NewButton("Fe death note (free)", "ButtonInfo", function()
--MADE BY Redmoon--
--Items:
clickfling = true -- set this to false if u dont want click fling or use torso fling

function rmesh(a)
if not (workspace[game.Players.LocalPlayer.Name][a].Handle:FindFirstChild('Mesh') or workspace[game.Players.LocalPlayer.Name][a].Handle:FindFirstChild('SpecialMesh')) then return end
old=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name]:FindFirstChild(a).Handle:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
for i = 1 , 2 do
game.Players.LocalPlayer.Character=old
end
end

a=game.Players.LocalPlayer b=game.Players.LocalPlayer.Character c={}d=table.insert e=false for D,E in next,game:GetService("Players").LocalPlayer.Character:GetDescendants()do if E:IsA("BasePart")then d(c,game:GetService("RunService").Heartbeat:connect(function()pcall(function()E.Velocity=Vector3.new(-30,0,0)sethiddenproperty(game.Players.LocalPlayer,"MaximumSimulationRadius",math.huge)sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",999999999)game.Players.LocalPlayer.ReplicationFocus=workspace end)end))end end function f(D,E,F)game.StarterGui:SetCore("SendNotification",{Title=D;Text=E;Duration=F or 5;})end local x=game:GetService("RunService")g=Instance.new('Folder',b)g.Name='CWExtra'b.Archivable=true local y=b:Clone()y.Name='NexoPD'for D,E in next,y:GetDescendants()do if E:IsA('BasePart')or E:IsA('Decal')then E.Transparency=1 end end h=5.65 a.Character=nil a.Character=b b.Humanoid.AutoRotate=false b.Humanoid.WalkSpeed=0 b.Humanoid.JumpPower=0 b.Torso.Anchored=true f('Nexo','Reanimating...\nPlease wait '..h..' seconds.')wait(h)b.Torso.Anchored=false f('Nexo','Reanimated..')b.Humanoid.Health=0 y.Animate.Disabled=true y.Parent=g y.HumanoidRootPart.CFrame=b.HumanoidRootPart.CFrame*CFrame.new(0,5,0)function i(D,E,F,G)Instance.new("Attachment",D)Instance.new("AlignPosition",D)Instance.new("AlignOrientation",D)Instance.new("Attachment",E)D.Attachment.Name=D.Name E.Attachment.Name=D.Name D.AlignPosition.Attachment0=D[D.Name]D.AlignOrientation.Attachment0=D[D.Name]D.AlignPosition.Attachment1=E[D.Name]D.AlignOrientation.Attachment1=E[D.Name]E[D.Name].Position=F or Vector3.new()D[D.Name].Orientation=G or Vector3.new()D.AlignPosition.MaxForce=999999999 D.AlignPosition.MaxVelocity=math.huge D.AlignPosition.ReactionForceEnabled=false D.AlignPosition.Responsiveness=math.huge D.AlignOrientation.Responsiveness=math.huge D.AlignPosition.RigidityEnabled=false D.AlignOrientation.MaxTorque=999999999 D.Massless=true end function j(D,E,F)Instance.new("Attachment",D)Instance.new("AlignPosition",D)Instance.new("Attachment",E)D.Attachment.Name=D.Name E.Attachment.Name=D.Name D.AlignPosition.Attachment0=D[D.Name]D.AlignPosition.Attachment1=E[D.Name]E[D.Name].Position=F or Vector3.new()D.AlignPosition.MaxForce=999999999 D.AlignPosition.MaxVelocity=math.huge D.AlignPosition.ReactionForceEnabled=false D.AlignPosition.Responsiveness=math.huge D.Massless=true end for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then d(c,x.RenderStepped:Connect(function()E.CanCollide=false end))end end for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then d(c,x.Stepped:Connect(function()E.CanCollide=false end))end end for D,E in next,y:GetDescendants()do if E:IsA('BasePart')then d(c,x.RenderStepped:Connect(function()E.CanCollide=false end))end end for D,E in next,y:GetDescendants()do if E:IsA('BasePart')then d(c,x.Stepped:Connect(function()E.CanCollide=false end))end end for D,E in next,b:GetDescendants()do if E:IsA('Accessory')then i(E.Handle,y[E.Name].Handle)end end i(b['Head'],y['Head'])i(b['Torso'],y['Torso'])j(b['HumanoidRootPart'],y['Torso'],Vector3.new(0,0,0))i(b['Right Arm'],y['Right Arm'])i(b['Left Arm'],y['Left Arm'])i(b['Right Leg'],y['Right Leg'])i(b['Left Leg'],y['Left Leg'])k=a:GetMouse()local z=Instance.new("Part",g)z.CanCollide=false z.Transparency=1 d(c,x.RenderStepped:Connect(function()local D=workspace.CurrentCamera.CFrame.lookVector local E=y["HumanoidRootPart"]z.Position=E.Position z.CFrame=CFrame.new(z.Position,Vector3.new(D.X*10000,D.Y,D.Z*10000))end))l=false m=false n=false o=false p=false function q(D)r=Instance.new('BodyAngularVelocity',D)r.AngularVelocity=Vector3.new(9e9,9e9,9e9)r.MaxTorque=Vector3.new(9e9,9e9,9e9)end q(b.HumanoidRootPart)k=a:GetMouse()s=Instance.new('BodyPosition',b.HumanoidRootPart)s.P=9e9 s.D=9e9 s.MaxForce=Vector3.new(99999,99999,99999)local A d(c,x.Heartbeat:Connect(function()if A==true then s.Position=k.Hit.p b.HumanoidRootPart.Position=k.Hit.p else s.Position=y.Torso.Position b.HumanoidRootPart.Position=y.Torso.Position end end))local B=Instance.new("SelectionBox")B.Adornee=b.HumanoidRootPart B.LineThickness=0.02 B.Color3=Color3.fromRGB(250,0,0)B.Parent=b.HumanoidRootPart B.Name="RAINBOW"t=B if clickfling then d(c,k.Button1Down:Connect(function()A=true end))d(c,k.Button1Up:Connect(function()A=false end))end d(c,k.KeyDown:Connect(function(D)if D==' 'then p=true end if D=='w'then l=true end if D=='s'then m=true end if D=='a'then n=true end if D=='d'then o=true end end))d(c,k.KeyUp:Connect(function(D)if D==' 'then p=false end if D=='w'then l=false end if D=='s'then m=false end if D=='a'then n=false end if D=='d'then o=false end end))local function C(D,E,F)z.CFrame=z.CFrame*CFrame.new(-D,E,-F)y.Humanoid.WalkToPoint=z.Position end d(c,x.RenderStepped:Connect(function()if l==true then C(0,0,1e4)end if m==true then C(0,0,-1e4)end if n==true then C(1e4,0,0)end if o==true then C(-1e4,0,0)end if p==true then y.Humanoid.Jump=true end if l~=true and n~=true and m~=true and o~=true then y.Humanoid.WalkToPoint=y.HumanoidRootPart.Position end end))workspace.CurrentCamera.CameraSubject=y.Humanoid u=Instance.new('BindableEvent')d(c,u.Event:Connect(function()y:Destroy()e=true v=false for D,E in next,b:GetDescendants()do if E:IsA('BasePart')then E.Anchored=true end end w=b.Humanoid:Clone()b.Humanoid:Destroy()w.Parent=b game.Players:Chat('-re')for D,E in pairs(c)do E:Disconnect()end game:GetService("StarterGui"):SetCore("ResetButtonCallback",true)u:Remove()end))game:GetService("StarterGui"):SetCore("ResetButtonCallback",u)

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

reanim = workspace.Camera.CameraSubject.Parent

function hat(h,p,c1,c0,m)
reanim[h].Handle.AccessoryWeld.Part1=reanim[p]
reanim[h].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[h].Handle.AccessoryWeld.C0=reanim[h].Handle.AccessoryWeld.C0:Lerp(c0 or CFrame.new(),1)
if m == true then
rmesh(h)
end
end

m=game.Players.LocalPlayer:GetMouse()
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,-1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == '1' then-- first mode
Mode='1'
elseif k == 'e' then-- second mode
Mode='2'
elseif k == 'q' then-- first mode again
Mode='1'
end
end)

attacklol=game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
Mode='Attack1'
wait(1) -- time of attack u can edit this
Mode='Attack2'
wait(1)
Mode='Attack3'
wait(0.07)
Mode ='1' -- change this mode to whatever u want the mode to be after attacking
end)

coroutine.wrap(function()
while true do -- anim changer
if HumanDied then break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
if Root.Velocity.y > 1 then -- jump

elseif Root.Velocity.y < -1 then -- fall

elseif Root.Velocity.Magnitude < 2 then -- idle
hat('AFunRead','Left Arm',CFrame.new(0,0,0),CFrame.new(1.04+0*math["cos"](sine/10),-0.68+0*math["cos"](sine/10),1.04+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(216.5+0*math["cos"](sine/10))),false)    
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),-1+0.1*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(0.82+0*math.cos(sine/10),0.39+0*math.cos(sine/10),-1.33+0*math.cos(sine/10))*CFrame.Angles(math.rad(121.74+-32.62*math.cos(sine/10)),math.rad(0+0.1*math.cos(sine/10)),math.rad(-46.38+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0.1*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(94.23+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(33.09+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0.1*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0.1*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
elseif Root.Velocity.Magnitude > 20 then -- run

elseif Root.Velocity.Magnitude < 20 then -- walk
hat('AFunRead','Left Arm',CFrame.new(0,0,0),CFrame.new(1.04+0*math["cos"](sine/10),-0.68+0*math["cos"](sine/10),1.04+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(216.5+0*math["cos"](sine/10))),false)
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math.cos(sine/10),-1+0.3*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(-18.87+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(0.82+0*math.cos(sine/10),0.39+0.3*math.cos(sine/10),-1.33+0*math.cos(sine/10))*CFrame.Angles(math.rad(121.74+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(-46.38+0*math.cos(sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math.cos(sine/10),0.5+0.3*math.cos(sine/10),-0.68+0*math.cos(sine/10))*CFrame.Angles(math.rad(97.29+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(33.09+0*math.cos(sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(0+20*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math.cos(sine/10),-1+0*math.cos(sine/10),0+0*math.cos(sine/10))*CFrame.Angles(math.rad(30.04+-20*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10)),math.rad(0+0*math.cos(sine/10))),.2)
end

elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump
elseif Root.Velocity.y < -1 then -- fall
elseif Root.Velocity.Magnitude < 2 then -- idle

elseif Root.Velocity.Magnitude > 20 then -- run

elseif Root.Velocity.Magnitude < 20 then -- walk

end

elseif Mode == 'Attack1' then --attack clerp 

elseif Mode == 'Attack2' then --attack clerp 

elseif Mode == 'Attack3' then --attack clerp 

end
srv.RenderStepped:Wait()
end
end)()
end)
Section:NewButton("Fe skin walker (free)", "ButtonInfo", function()
HumanDied = false
local reanim
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
game.Players.LocalPlayer.Character=oldchar
wait()
workspace.Camera.CFrame=_G.OldCF
game.Players.LocalPlayer.Character=oldchar
end
_G.ClickFling=false -- Set this to true if u want.
loadstring(game:HttpGet(('https://raw.githubusercontent.com/OofHead-FE/nexo-before-deleted/main/NexoPD'),true))()

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character.CWExtra.NexoPD
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,0,0)*ANGLES(RAD(-90),RAD(0),RAD(0))
RJ.C1 = CF(0,0,1.5)*ANGLES(RAD(90),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.2,1,0.2)*ANGLES(RAD(-130),RAD(20),RAD(0))
LS.C1 = CF(0.2,1,0.2)*ANGLES(RAD(-130),RAD(-20),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(-55),RAD(40),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(-55),RAD(-40),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == 'r' then-- first mode
Mode='1'
elseif k == 'e' then-- second mode
Mode='2'
elseif k == 'urkeybind' then-- third mode
Mode='3'
end
end)



attacklol=game.Players.LocalPlayer:GetMouse().Button1Down:Connect(function()
Mode='Attack0'
wait(1) -- Time Of Attack
Mode='Attack1'
end)



coroutine.wrap(function()
while true do -- anim changer
if HumanDied then mousechanger:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '2' then
if Root.Velocity.y > 2 then -- jump
--jump clerp here
elseif Root.Velocity.y < -3 then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+10*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0.2*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+10.4*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 20 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+10*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0.2*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-10.4*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-20*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+20*math.cos(sine/13)),RAD(3+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
elseif Mode == '2' then
if Root.Velocity.y > 1 then -- jump
--jump clerp here
elseif Root.Velocity.y < -1 then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 then -- idle

elseif Root.Velocity.Magnitude < 20 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(21+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),-0.5+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-37+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(0+3*math.cos(sine/1),1+-2*math.cos(sine/1),0+8*math.cos(sine/1))*ANGLES(RAD(130+10*math.cos(sine/1)),RAD(32+0*math.cos(sine/1)),RAD(-26+0*math.cos(sine/1))),.3)
LS.C0 = LS.C0:Lerp(CF(0+5*math.cos(sine/1),0.5+4*math.cos(sine/1),0+-7*math.cos(sine/1))*ANGLES(RAD(94+0*math.cos(sine/1)),RAD(0+0*math.cos(sine/1)),RAD(0+0*math.cos(sine/1))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),0+-0.1*math.cos(sine/13),-1+0*math.cos(sine/13))*ANGLES(RAD(1+0*math.cos(sine/13)),RAD(-6+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),0+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(3+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
elseif Mode == '3' then
if Root.Velocity.y > 1 then -- jump
--jump clerp here
elseif Root.Velocity.y < -1 then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 then -- idle
--idle clerp here
elseif Root.Velocity.Magnitude < 20 then -- walk
--walk clerp here
elseif Root.Velocity.Magnitude > 60 then -- run
--run clerp here
end
-- change the attack if u want
elseif Mode == 'Attack0' then
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),10+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(18+0*math.cos(sine/13)),RAD(30+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),10+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(-18+0*math.cos(sine/13)),RAD(-30+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(12+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.1*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(3+0*math.cos(sine/13)),RAD(-2+0*math.cos(sine/13)),RAD(12+0*math.cos(sine/13))),.3)
elseif Mode == 'Attack1' then
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
end
srv.RenderStepped:Wait()
end
end)()

--This was copied from neptunian V (sorry i changed it )
local muter = false
local ORGID = 3964574821
local ORVOL = 1.15
local ORPIT = 0.5
local kan = Instance.new("Sound",char)
kan.Volume = 0
if not NoSound then
	kan.Volume = 1.15
end
kan.TimePosition = 0
kan.PlaybackSpeed = 0.5
kan.Pitch = 1.01
kan.SoundId = "rbxassetid://3964574821"
kan.Name = "scary"
kan.Looped = true
kan:Play()
print"ORPLAYZ SCRIPT LOADED"
local function callback(Text)
 if Text == "Button1 text" then
  print ("Answer")
elseif Text == ("Button2 text") then
 print ("Answer2")
 end
end

local NotificationBindable = Instance.new("BindableFunction")
NotificationBindable.OnInvoke = callback
--
end)

Section:NewButton("Fe Terraprisma (free)", "ButtonInfo", function()
CrossClient = {}
loadstring(game:HttpGet(('https://pastebin.com/raw/UXKBkzqj'),true))()

GlobalFunctions = {}
loadstring(game:HttpGet(('https://pastebin.com/raw/uq6axDFA'),true))()

script = game.Players.LocalPlayer.Character.Terraprisma
local math=setmetatable({random=function(Arg1,Arg2,DIV) DIV=DIV or 1 return math.random(Arg1*DIV,Arg2*DIV)/DIV end;CosSin=function(Arg) return (math.sin(Arg/2)*math.cos(Arg/2)) end;},{__index=math;})
local CFrame=setmetatable({Angles=function(Arg1,Arg2,Arg3,Angles) if not Angles then return CFrame.Angles(Arg1,Arg2,Arg3) else return CFrame.Angles(math.rad(Arg1),math.rad(Arg2),math.rad(Arg3)) end end;},{__index=CFrame;})
local Instance=setmetatable({new = function(type,args) local instance = Instance.new(type) if args then if string.lower(typeof(args)) == "instance" then instance.Parent = args elseif string.lower(typeof(args)) == "table" then for i,v in pairs(args) do pcall(function() instance[i] = v end) end end end return instance end;Remove=function(Instance_,Time) if string.lower(typeof(Instance_))=="instance" then game:GetService("Debris"):AddItem(Instance_,Time or 0) elseif string.lower(typeof(Instance_))=="table" then table.foreach(Instance_,function(_,v) game:GetService("Debris"):AddItem(v,Time or 0) end) end end},{__index=Instance;})
local Player,UIS=game:GetService("Players").LocalPlayer,game:GetService("UserInputService") local Mouse=Player:GetMouse()
--}{		Default Functions	   }{--
local ins=Instance.new
local v3=Vector3.new
local v2=Vector2.new
local cf=CFrame.new
local angles=CFrame.Angles
local ud=UDim.new
local ud2=UDim2.new
local c3=Color3.new
local rgb=Color3.fromRGB
local hsv=Color3.fromHSV
local bc=BrickColor.new
local bcRandom=BrickColor.Random
local palette=BrickColor.palette
local cs=ColorSequence.new
local ns=NumberSequence.new
local nsk=NumberSequenceKeypoint.new
local nr=NumberRange.new
local random=math.random
local rad=math.rad
local sin=math.sin
local cos=math.cos
local tan=math.tan
local cotan=math.CosSin
local floor=math.floor
local pi=math.pi
local abs=math.abs
local sqrt=math.sqrt
local clamp=math.clamp
local ray=Ray.new
local huge=math.huge
--
function Raycast(Origin,Direction,Blacklist,MaxDistance,IgnoreWater)
	return workspace:FindPartOnRayWithIgnoreList(ray(Origin,Direction.Unit*MaxDistance),Blacklist or {},false,IgnoreWater)
end
function Tween(Object,Args,Info)
	if Object and Args then
		Info = Info or TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.In,0,false,0)
		if typeof(Info) == "table" then Info = TweenInfo.new(unpack(Info)) end
		local Tween=game:GetService("TweenService"):Create(Object,Info,Args) Tween:Play()
		return Tween
	end
end
--






--
local Cam=workspace.CurrentCamera
local char=Player.Character
local hum=char:FindFirstChildOfClass("Humanoid")
hum.Animator:Destroy()
local h=char.Head
local t=char.Torso
local hrp=char.HumanoidRootPart 
local ra=char["Right Arm"]
local la=char["Left Arm"]
local rl=char["Right Leg"]
local ll=char["Left Leg"]
local nec=t.Neck
local rutj=hrp.RootJoint
local rs=t["Right Shoulder"]
local ls=t["Left Shoulder"]
local rh=t["Right Hip"]
local lh=t["Left Hip"]
--
local TP=t.Terraprisma
local TPH=TP.Handle
local fh=h
local ft=t
local fra=ra
local fla=la
local frl=rl
local fll=ll
local th=TPH

local lp = game:GetService("Players").LocalPlayer
local rs = game:GetService("RunService")
local stepped = rs.Stepped
local heartbeat = rs.Heartbeat
local renderstepped = rs.RenderStepped
local sg = game:GetService("StarterGui")
local ws = game:GetService("Workspace")
local cf = CFrame.new
local v3 = Vector3.new
local v3_0 = Vector3.zero
local inf = math.huge

local cplayer = lp.Character

local v3 = Vector3.new

local function gp(parent, name, className)
	if typeof(parent) == "Instance" then
		for i, v in pairs(parent:GetChildren()) do
			if (v.Name == name) and v:IsA(className) then
				return v
			end
		end
	end
	return nil
end


local hat2 = gp(cplayer, "Back_AccAccessory", "Accessory")
local handle2 = gp(hat2, "Handle", "BasePart")
local att2 = gp(handle2, "att1_Handle", "Attachment")
att2.Parent = TPH
att2.Position = Vector3.new(0, -0.3, -1.2)
--att2.Position = Vector3.new(1, 1.2, -0.3)
att2.Rotation = Vector3.new(48, -99, -6)
--att2.Rotation = Vector3.new(-99, 48, -90)
--att2.Rotation = Vector3.new(-99, -90, 48)

local math=setmetatable({random=function(Arg1,Arg2,DIV) DIV=DIV or 1 return math.random(Arg1*DIV,Arg2*DIV)/DIV end,CosSin=function(Arg) return (math.sin(Arg/2)*math.cos(Arg/2)) end,},{__index=math,})
local CFrame=setmetatable({Angles=function(Arg1,Arg2,Arg3,Angles) if not Angles then return CFrame.Angles(Arg1,Arg2,Arg3) else return CFrame.Angles(math.rad(Arg1),math.rad(Arg2),math.rad(Arg3)) end end,},{__index=CFrame,})
local Instance=setmetatable({new=function(type,args) local instance=Instance.new(type) if args then if string.lower(typeof(args)) == "instance" then instance.Parent=args elseif string.lower(typeof(args))=="table" then for i,v in pairs(args) do pcall(function() instance[i]=v end) end end end return instance end,Remove=function(Instance_,Time) if string.lower(typeof(Instance_))=="instance" then game:GetService("Debris"):AddItem(Instance_,Time or 0) elseif string.lower(typeof(Instance_))=="table" then table.foreach(Instance_,function(_,v) game:GetService("Debris"):AddItem(v,Time or 0) end) end end},{__index=Instance,})
local ins=Instance.new
local v3=Vector3.new
local v2=Vector2.new
local cf=CFrame.new
local angles=CFrame.Angles
local ud=UDim.new
local ud2=UDim2.new
local c3=Color3.new
local rgb=Color3.fromRGB
local hsv=Color3.fromHSV
local bc=BrickColor.new
local bcRandom=BrickColor.Random
local palette=BrickColor.palatte
local cs=ColorSequence.new
local ns=NumberSequence.new
local nsk=NumberSequenceKeypoint.new
local nr=NumberRange.new
local random=math.random
local rad=math.rad
local sin=math.sin
local cos=math.cos
local tan=math.tan
local CosSin=math.CosSin
local floor=math.floor
local pi=math.floor
local abs=math.abs
local sqrt=math.sqrt
local clamp=math.clamp
local ray=Ray.new
local huge=math.huge
local Anims = {
	Swing1={
		Waits={
			[1]=.1,
			[2]=.05,
			[3]=.075,
			[4]=.075,
			[5]=.025
		},
		[1]={
			{"nec",{C1=CFrame.Angles(math.rad(-10),math.rad(-40),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rutj",{C1=CFrame.new(0,-0.1,0)*CFrame.Angles(math.rad(-10),math.rad(40),math.rad(5))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=CFrame.new(-0.3,-0.35,-0.75)*CFrame.Angles(math.rad(90),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(75),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(20))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"ls",{C0=CFrame.new(0.25,-0.1,0.05)*CFrame.Angles(math.rad(-5),math.rad(10),math.rad(-5))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rh",{C1=CFrame.Angles(math.rad(-5),math.rad(-30),math.rad(0))*CFrame.new(0,0.05,-0.2)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.05,-0.1)*CFrame.Angles(math.rad(5),math.rad(-5),math.rad(-5))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(0,0,0,true)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}}
		},
		[2]={
			{"nec",{C1=CFrame.Angles(math.rad(-5),math.rad(-25),math.rad(0))},{.065,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.Angles(math.rad(-7.5),math.rad(25),math.rad(2.5))},{.065,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"rs",{C0=CFrame.new(-0.2,-0.35,-0.75)*CFrame.Angles(math.rad(90),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(50),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(20))},{.065,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C0=CFrame.new(0.25,-0.1,0.075)*CFrame.Angles(math.rad(-7.5),math.rad(15),math.rad(-10))},{.065,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.Angles(math.rad(0),math.rad(-30),math.rad(0))*CFrame.new(0,0,-0.2)},{.065,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.3,-0.3)*CFrame.Angles(math.rad(-10),math.rad(5),math.rad(-2.5))},{.065,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(0,0,0,true)},{.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}}
		},
		[3]={
			{"nec",{C1=CFrame.Angles(math.rad(-5),math.rad(0),math.rad(10))},{.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.new(0,-0.05,0)*CFrame.Angles(math.rad(-7.5),math.rad(0),math.rad(2.5))},{.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"rs",{C0=CFrame.new(0.4,-0.35,-0.25)*CFrame.Angles(math.rad(90),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-50),math.rad(0),math.rad(0))},{.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C0=CFrame.new(0.25,-0.1,0.075)*CFrame.Angles(math.rad(-15),math.rad(25),math.rad(-10))},{.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.Angles(math.rad(-2.5),math.rad(-15),math.rad(0))*CFrame.new(0,0,-0.2)},{.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.05,-0.25)*CFrame.Angles(math.rad(10),math.rad(10),math.rad(-7.5))},{.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(-5,0,0,true)},{.1,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0}}
		},
		[4]={
			{"nec",{C1=CFrame.Angles(math.rad(-5),math.rad(25),math.rad(7.5))},{.075,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.new(0,-0.05,0)*CFrame.Angles(math.rad(-1.5),math.rad(-25),math.rad(2.5))},{.075,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rs",{C0=CFrame.new(0.5,-0.35,0)*CFrame.Angles(math.rad(90),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(10))},{.075,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C0=CFrame.new(0.3,-0.2,0.25)*CFrame.Angles(math.rad(-25),math.rad(25),math.rad(-10))},{.075,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.Angles(math.rad(7.5),math.rad(15),math.rad(-5))*CFrame.new(0,0,-0.2)},{.075,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.05,-0.3)*CFrame.Angles(math.rad(-10),math.rad(25),math.rad(-7.5))},{.075,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(-15,0,0,true)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}}
		},
		[5]={
			{"nec",{C1=CFrame.Angles(math.rad(-2.5),math.rad(26),math.rad(5))},{.025,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"rutj",{C1=CFrame.new(0,-0.05,0)*CFrame.Angles(math.rad(-1.5),math.rad(-20),math.rad(2.5))},{.025,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"rs",{C0=CFrame.new(0.5,-0.35,-0.05)*CFrame.Angles(math.rad(90),math.rad(90),math.rad(0))*CFrame.Angles(math.rad(-85),math.rad(0),math.rad(10))},{.025,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"ls",{C0=CFrame.new(0.3,-0.175,0.225)*CFrame.Angles(math.rad(-20),math.rad(20),math.rad(-10))},{.025,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"rh",{C1=CFrame.Angles(math.rad(5),math.rad(15),math.rad(-5))*CFrame.new(0,0,-0.2)},{.025,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.05,-0.3)*CFrame.Angles(math.rad(-7.5),math.rad(25),math.rad(-7.5))},{.025,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(0,0,0,true)},{.1,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}}
		}
	},
	Swing2={
		Waits={
			[1]=.075,
			[2]=.1,
			[3]=.075,
			[4]=.05,
			[5]=.05
		},
		[1]={
			{"rh",{C1=CFrame.new(0,.15,-0.15)*CFrame.Angles(math.rad(-15),math.rad(-5),math.rad(0))},{.075,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}}
		},
		[2]={
			{"nec",{C1=CFrame.Angles(math.rad(-10),math.rad(50),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.new(0,-0.2,0.2)*CFrame.Angles(math.rad(-15),math.rad(-50),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rs",{C0=CFrame.new(0.5,0,-0.5)*CFrame.Angles(math.rad(10),math.rad(50),math.rad(5))*CFrame.Angles(math.rad(-5),math.rad(0),math.rad(2.5))*CFrame.Angles(math.rad(0),math.rad(180),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.InOut,0,false,0}},
			{"ls",{C0=CFrame.new(0.1,-0.15,-0.1)*CFrame.Angles(math.rad(10),math.rad(0),math.rad(-10))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.new(0,0,-0.15)*CFrame.Angles(math.rad(-5),math.rad(-15),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.25,0)*CFrame.Angles(math.rad(0),math.rad(40),math.rad(-5))*CFrame.Angles(math.rad(1),math.rad(0),math.rad(0))*CFrame.new(0,0,-0.35)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(0,0,0,true)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}}
		},
		[3]={
			{"nec",{C1=CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0))},{.075,Enum.EasingStyle.Sine,Enum.EasingDirection.In,0,false,0}},
			{"rutj",{C1=CFrame.new(0,0,0.05)*CFrame.Angles(math.rad(5),math.rad(0),math.rad(0))},{.075,Enum.EasingStyle.Sine,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=CFrame.new(0.65,0.1,-0.35)*CFrame.Angles(math.rad(90),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(200),math.rad(0))},{.075,Enum.EasingStyle.Sine,Enum.EasingDirection.In,0,false,0}},
			{"ls",{C0=CFrame.new(0.1,-0.15,-0.1)*CFrame.Angles(math.rad(30),math.rad(0),math.rad(20))*CFrame.Angles(math.rad(0),math.rad(-40),math.rad(0))},{.075,Enum.EasingStyle.Sine,Enum.EasingDirection.In,0,false,0}},
			{"rh",{C1=CFrame.Angles(math.rad(-7.5),math.rad(-15),math.rad(0))},{.075,Enum.EasingStyle.Sine,Enum.EasingDirection.In,0,false,0}},
			{"lh",{C1=CFrame.Angles(math.rad(0),math.rad(5),math.rad(-5))*CFrame.Angles(math.rad(-2.5),math.rad(0),math.rad(0))},{.075,Enum.EasingStyle.Sine,Enum.EasingDirection.In,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(35,0,0,true)},{.075,Enum.EasingStyle.Sine,Enum.EasingDirection.In,0,false,0}}
		},
		[4]={
			{"nec",{C1=CFrame.Angles(math.rad(-5),math.rad(-40),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.new(0,-0.125,0.15)*CFrame.Angles(math.rad(15),math.rad(40),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rs",{C0=CFrame.new(-0.15,0.5,-0.5)*CFrame.Angles(math.rad(150),math.rad(0),math.rad(-50))*CFrame.Angles(math.rad(0),math.rad(200),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C0=CFrame.new(0.25,-0.15,-0.1)*CFrame.Angles(math.rad(65),math.rad(0),math.rad(70))*CFrame.Angles(math.rad(0),math.rad(-40),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.Angles(math.rad(-15),math.rad(-15),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.125,-0.25)*CFrame.Angles(math.rad(-10),math.rad(25),math.rad(-7.5))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(-25,0,0,true)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}}
		},
		[5]={
			{"nec",{C1=CFrame.Angles(math.rad(-2.5),math.rad(-40),math.rad(0))},{.05,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"rutj",{C1=CFrame.new(0,-0.125,0.15)*CFrame.Angles(math.rad(10),math.rad(40),math.rad(0))},{.05,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"rs",{C0=CFrame.new(-0.15,0.4,-0.5)*CFrame.Angles(math.rad(140),math.rad(0),math.rad(-50))*CFrame.Angles(math.rad(0),math.rad(200),math.rad(0))},{.05,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"ls",{C0=CFrame.new(0.25,-0.15,-0.1)*CFrame.Angles(math.rad(45),math.rad(0),math.rad(50))*CFrame.Angles(math.rad(0),math.rad(-40),math.rad(0))},{.05,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"rh",{C1=CFrame.Angles(math.rad(-10),math.rad(-15),math.rad(0))},{.05,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.125,-0.25)*CFrame.Angles(math.rad(-5),math.rad(25),math.rad(-7.5))},{.05,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(-20,0,0,true)},{.05,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}}
		}
	},
	Swing3={
		Waits={
			[1]=.1,
			[2]=.1,
			[3]=.1,
			[4]=.05
		},
		[1]={
			{"nec",{C1=CFrame.Angles(math.rad(-10),math.rad(40),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.new(0,-0.1,0)*CFrame.Angles(math.rad(-5),math.rad(-40),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rs",{C0=CFrame.new(0.35,0.65,0.1)*CFrame.Angles(math.rad(-10),math.rad(-10),math.rad(90))*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(180),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C0=CFrame.new(0.2,-0.1,-0.1)*CFrame.Angles(math.rad(10),math.rad(-20),math.rad(-10))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.new(0,0,0)*CFrame.Angles(math.rad(5),math.rad(-20),math.rad(5))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"lh",{C1=CFrame.new(0,0.1,-0.15)*CFrame.Angles(math.rad(0),math.rad(35),math.rad(0))*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(0,0,0,true)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}}
		},
		[2]={
			{"nec",{C1=CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rutj",{C1=CFrame.new(0,0,-0.2)*CFrame.Angles(math.rad(-2),math.rad(0),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=CFrame.new(0,0.65,-0.5)*CFrame.Angles(math.rad(0),math.rad(-10),math.rad(90))*CFrame.Angles(math.rad(90),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(180),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"ls",{C0=CFrame.new(0.2,-0.1,0.1)*CFrame.Angles(math.rad(-5),math.rad(-20),math.rad(-15))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rh",{C1=CFrame.new(0,0.25,-0.2)*CFrame.Angles(math.rad(-5),math.rad(-10),math.rad(2.5))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"lh",{C1=CFrame.new(0,0,-0.15)*CFrame.Angles(math.rad(0),math.rad(35),math.rad(0))*CFrame.Angles(math.rad(-10),math.rad(0),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(15,0,0,true)},{.1,Enum.EasingStyle.Sine,Enum.EasingDirection.In,0,false,0}}
		},
		[3]={
			{"nec",{C1=CFrame.Angles(math.rad(-5),math.rad(-45),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.new(0,0,-0.215)*CFrame.Angles(math.rad(-5),math.rad(45),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rs",{C0=CFrame.new(-0.25,0.65,-0.5)*CFrame.Angles(math.rad(15),math.rad(-10),math.rad(80))*CFrame.Angles(math.rad(170),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(180),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C0=CFrame.new(0.2,-0.1,0.2)*CFrame.Angles(math.rad(-15),math.rad(10),math.rad(-15))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.new(0,0,0)*CFrame.Angles(math.rad(10),math.rad(-25),math.rad(7.5))*CFrame.new(0,0,-0.15)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"lh",{C1=CFrame.new(0,0,-0.15)*CFrame.Angles(math.rad(0),math.rad(15),math.rad(0))*CFrame.Angles(math.rad(-10),math.rad(0),math.rad(0))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(-25,0,0,true)},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}}
		},
		[4]={
			{"nec",{C1=CFrame.Angles(math.rad(-5),math.rad(-45),math.rad(0))},{.05,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.new(0,0,-0.215)*CFrame.Angles(math.rad(-5),math.rad(45),math.rad(0))},{.05,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rs",{C0=CFrame.new(-0.25,0.65,-0.5)*CFrame.Angles(math.rad(15),math.rad(-10),math.rad(80))*CFrame.Angles(math.rad(170),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(180),math.rad(0))},{.05,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C0=CFrame.new(0.2,-0.1,0.2)*CFrame.Angles(math.rad(-15),math.rad(10),math.rad(-15))},{.05,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.new(0,0,0)*CFrame.Angles(math.rad(10),math.rad(-25),math.rad(7.5))*CFrame.new(0,0,-0.15)},{.05,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"lh",{C1=CFrame.new(0,0,-0.15)*CFrame.Angles(math.rad(0),math.rad(15),math.rad(0))*CFrame.Angles(math.rad(-10),math.rad(0),math.rad(0))},{.05,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=cf(0,0,0)*angles(-25,0,0,true)},{.05,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}}
		}
	},
	Summon={
		Waits={
			[1]=.14,
			[2]=.04,
			[3]=.04,
			[4]=.09,
			[5]=.04,
			[6]=0
		},
		[1]={
			{"nec",{C1=CFrame.Angles(math.rad(20),math.rad(0),math.rad(0))},{.25,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=cf(0,0,-.15)*angles(-3,0,0,true)},{.2,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=CFrame.new(-0.1,-0.5,0.25)*CFrame.Angles(math.rad(40),math.rad(0),math.rad(30))},{.15,Enum.EasingStyle.Sine,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C1=CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5))},{.15,Enum.EasingStyle.Sine,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=angles(30,0,0,true)},{.2,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
		},
		[2]={
			{"nec",{C1=CFrame.Angles(math.rad(20),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,-1,false,0}},
			{"rutj",{C1=cf(0,0,-.15)*angles(-3,0,0,true)},{0,Enum.EasingStyle.Quad,Enum.EasingDirection.In,-1,false,0}},
		},
		[3]={
			{"rutj",{C1=cf(0,0,-.15)*angles(-3,0,0,true)},{0,Enum.EasingStyle.Quad,Enum.EasingDirection.In,-1,false,0}},
			{"nec",{C1=CFrame.Angles(math.rad(20),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Circular,Enum.EasingDirection.In,-1,false,0}},
			{"sw",{C0=angles(30,0,0,true)},{0,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,-1,false,0}},
		},
		[4]={
			{"nec",{C1=CFrame.Angles(math.rad(40),math.rad(0),math.rad(0))},{.2,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=cf(0,0,.25)*CFrame.Angles(math.rad(5),math.rad(0),math.rad(0))},{.15,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=CFrame.new(-0.1,0.5,-0.05)*CFrame.Angles(math.rad(160),math.rad(0),math.rad(0))},{.2,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C1=CFrame.new(0.1,-0.1,-0.05)*CFrame.Angles(math.rad(5),math.rad(10),math.rad(-15))},{.1,Enum.EasingStyle.Sine,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=angles(-60,0,0,true)},{.25,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,0,false,0}},
		},
		[5]={
			{"nec",{C1=CFrame.Angles(math.rad(40),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,-1,false,0}},
			{"rutj",{C1=cf(0,0,.25)*CFrame.Angles(math.rad(5),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Quad,Enum.EasingDirection.In,-1,false,0}},
		},
		[6]={
			{"nec",{C1=CFrame.Angles(math.rad(40),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Circular,Enum.EasingDirection.In,0,false,0}},
			{"rutj",{C1=cf(0,0,.25)*CFrame.Angles(math.rad(5),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
		}
	},
	Cast={
		Waits={
			[1]=.14,
			[2]=.04,
			[3]=.04,
			[4]=.09,
			[5]=.04,
			[6]=.04,
			[7]=.1
		},
		[1]={
			{"nec",{C1=CFrame.Angles(math.rad(-3),math.rad(0),math.rad(0))},{.25,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=cf(0,0,-.15)*angles(-3,0,0,true)},{.2,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=CFrame.new(-0.1,-0.5,0.25)*CFrame.Angles(math.rad(40),math.rad(0),math.rad(30))},{.15,Enum.EasingStyle.Sine,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C1=CFrame.Angles(math.rad(0),math.rad(0),math.rad(-5))},{.15,Enum.EasingStyle.Sine,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=angles(30,0,0,true)},{.2,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0}},
		},
		[2]={
			{"nec",{C1=CFrame.Angles(math.rad(-3),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,-1,false,0}},
			{"rutj",{C1=cf(0,0,-.15)*angles(-3,0,0,true)},{0,Enum.EasingStyle.Quad,Enum.EasingDirection.In,-1,false,0}},
		},
		[3]={
			{"rutj",{C1=cf(0,0,-.15)*angles(-3,0,0,true)},{0,Enum.EasingStyle.Quad,Enum.EasingDirection.In,-1,false,0}},
			{"nec",{C1=CFrame.Angles(math.rad(-3),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Circular,Enum.EasingDirection.In,-1,false,0}},
			{"sw",{C0=angles(30,0,0,true)},{0,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,-1,false,0}},
		},
		[4]={
			{"nec",{C1=CFrame.Angles(math.rad(10),math.rad(0),math.rad(0))},{.2,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=cf(0,0,.25)*CFrame.Angles(math.rad(5),math.rad(0),math.rad(0))},{.15,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=CFrame.new(-0.1,0.5,-0.05)*CFrame.Angles(math.rad(160),math.rad(0),math.rad(0))},{.2,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C1=CFrame.new(0.1,-0.1,-0.05)*CFrame.Angles(math.rad(5),math.rad(10),math.rad(-15))},{.1,Enum.EasingStyle.Sine,Enum.EasingDirection.Out,0,false,0}},
			{"sw",{C0=angles(-60,0,0,true)},{.25,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,0,false,0}},
		},
		[5]={
			{"nec",{C1=CFrame.Angles(math.rad(10),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,-1,false,0}},
			{"rutj",{C1=cf(0,0,.25)*CFrame.Angles(math.rad(5),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Quad,Enum.EasingDirection.In,-1,false,0}},
		},
		[6]={
			{"nec",{C1=CFrame.Angles(math.rad(10),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Circular,Enum.EasingDirection.In,0,false,0}},
			{"rutj",{C1=cf(0,0,.25)*CFrame.Angles(math.rad(5),math.rad(0),math.rad(0))},{0,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
		},
		[7]={
			{"nec",{C1=CFrame.Angles(math.rad(0),math.rad(-30),math.rad(0))},{.25,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,0,false,0}},
			{"rutj",{C1=CFrame.new(0.15,-0.05,-0.1)*CFrame.Angles(math.rad(-1),math.rad(30),math.rad(-5))},{.15,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=CFrame.new(-0.1,-0.05,-0.5)*CFrame.Angles(math.rad(81),math.rad(0),math.rad(30))},{.1,Enum.EasingStyle.Back,Enum.EasingDirection.Out,0,false,0}},
			{"ls",{C1=CFrame.new(0.1,-0.1,-0.05)*CFrame.Angles(math.rad(5),math.rad(-5),math.rad(-5))},{.2,Enum.EasingStyle.Sine,Enum.EasingDirection.Out,0,false,0}},
			{"rh",{C1=CFrame.new(0,0,-0.25)*CFrame.Angles(math.rad(-20),math.rad(-10),math.rad(0))},{.15,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
			{"lh",{C1=CFrame.new(0,0,0)*CFrame.Angles(math.rad(7.5),math.rad(10),math.rad(5))},{.15,Enum.EasingStyle.Quad,Enum.EasingDirection.In,0,false,0}},
			{"sw",{C0=angles(-85,0,0,true)},{.25,Enum.EasingStyle.Circular,Enum.EasingDirection.Out,0,false,0}},
		}
	}
}
--[[
Left Shoulder: 
	C0: CFrame.new(-1,.5,0)*CFrame.new(0.1,-0.1,-0.05)*CFrame.Angles(math.rad(5),math.rad(-5),math.rad(-5))
	C1: CFrame.new(.5,.5,0)
Right Shoulder: 
	C0: CFrame.new(1,.5,0)*CFrame.new(-0.1,-0.05,-0.5)*CFrame.Angles(math.rad(91),math.rad(0),math.rad(30))
	C1: CFrame.new(-.5,.5,0)
Neck: 
	C0: CFrame.new(0,1,0)*CFrame.Angles(math.rad(0),math.rad(-30),math.rad(0))
	C1: CFrame.new(0,-.5,0)
Right Hip: 
	C0: CFrame.new(0.5,-1,0)*CFrame.new(0,0,-0.25)*CFrame.Angles(math.rad(-20),math.rad(-10),math.rad(0))
	C1: CFrame.new(0,1,0)
Left Hip: 
	C0: CFrame.new(-0.5,-1,0)*CFrame.new(0,0,0)*CFrame.Angles(math.rad(7.5),math.rad(10),math.rad(5))
	C1: CFrame.new(0,1,0)
RootJoint: 
	C0: CFrame.new(0.15,-0.05,-0.1)*CFrame.Angles(math.rad(-1),math.rad(30),math.rad(-5))
	C1: 
]]--
--[[
	,
	temp={
		Waits={
			[1]=.225
		},
		[1]={
			{"nec",{C1=000},{.25,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rutj",{C1=000},{.25,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rs",{C0=000},{.25,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"ls",{C0=000},{.25,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"rh",{C1=000},{.25,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}},
			{"lh",{C1=000},{.25,Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0}}
		}
	}
--]]


local Swords={}
local AttTarget=nil
local AttTargets=nil
local AttTargetNum=0
--
local ClimbTick=tick()
local Using,Climbing,Hitbox,LtM=false,false,false,false
local Dancing,Sitting,Crying=false,false,false
local Sine,Change=0,1
local Mus=t:FindFirstChild("VMus")
local Combo=1
--
local necC0,necC1=cf(0,t.Size.Y/2,0),cf(0,-h.Size.Y/2,0)
local rutjC0,rutjC1=cf(0,0,0),cf(0,0,0)
local rsC0,rsC1=cf(t.Size.X/2,t.Size.Y/4,0),cf(-ra.Size.X/2,ra.Size.Y/4,0)
local lsC0,lsC1=cf(-t.Size.X/2,t.Size.Y/4,0),cf(la.Size.X/2,la.Size.Y/4,0)
local rhC0,rhC1=cf(t.Size.X/4,-t.Size.Y/2,0),cf(0,rl.Size.Y/2,0)
local lhC0,lhC1=cf(-t.Size.X/4,-t.Size.Y/2,0),cf(0,ll.Size.Y/2,0)
local thC0=cf(-ra.Size.X/5,-ra.Size.Y/2+.1,0)
--
Instance.Remove({nec;rutj;rs;ls;rh;lh})
nec=ins("Motor6D",{Name="Neck";Part0=ft;Part1=fh;C0=necC0;C1=necC1;Parent=ft})
rutj=ins("Motor6D",{Name="RootJoint";Part0=hrp;Part1=ft;C0=rutjC0;C1=rutjC1;Parent=hrp})
rs=ins("Motor6D",{Name="Right Shoulder";Part0=ft;Part1=fra;C0=rsC0;C1=rsC1;Parent=ft})
ls=ins("Motor6D",{Name="Left Shoulder";Part0=ft;Part1=fla;C0=lsC0;C1=lsC1;Parent=ft})
rh=ins("Motor6D",{Name="Right Hip";Part0=ft;Part1=frl;C0=rhC0;C1=rhC1;Parent=ft})
lh=ins("Motor6D",{Name="Left Hip";Part0=ft;Part1=fll;C0=lhC0;C1=lhC1;Parent=ft})
local tw=ins("Motor6D",{Name="GunWeld";Part0=fra;Part1=th;C0=thC0;C1=cf();Parent=TPH})
--
function Lerp(a,b,t)
	return a+(b-a)*t
end
function Reflect(V,N)
	return -2*V:Dot(N)*N+V
end
function TwoVecToAng(v1,v2,rad)
	return math.acos(v1.CFrame.LookVector:Dot((v2-v1.Position).Unit))*(rad and 1 or 180/math.pi)
end
function Bezier(a,b,c,t)
	return a:Lerp(c,t):Lerp(c:Lerp(b,t),t)
end
--
function PlayAnimSingle(...)
	local Joints_={nec=nec,rutj=rutj,rs=rs,ls=ls,rh=rh,lh=lh,sw=tw}
	local CFs_={necC0=necC0,necC1=necC1,rutjC0=rutjC0,rutjC1=rutjC1,rsC0=rsC0,rsC1=rsC1,lsC0=lsC0,lsC1=lsC1,rhC0=rhC0,rhC1=rhC1,lhC0=lhC0,lhC1=lhC1,swC0=thC0,swC1=cf()}
	for i,v in pairs({...}) do
		if Joints_[v[1]] then
			local T={}
			table.foreach(v[2],function(i,v) T[i]=v end)
			local C0=((CFs_[v[1].."C0"] or cf(0,0,0))*(T.C0 or cf(0,0,0))) or CFs_[v[1].."C0"]
			local C1=((CFs_[v[1].."C1"] or cf(0,0,0))*((T.C1 or cf(0,0,0))):Inverse())
			for i,v in pairs(T) do if i=="C0" then T.C0=C0 elseif i=="C1" then T.C1=C1 end end
			Tween(Joints_[v[1]],T,v[3])
		end
	end
end
function PlayAnim(Table,AddFuncs)
	AddFuncs=AddFuncs or {}
	local Waits=Table.Waits
	for i=1,#Table do
		local v=Table[i]
		if i~="Waits" and Waits[i] then
			local WaitTime=Waits[i]
			PlayAnimSingle(unpack(v))
			if WaitTime>0 then wait(WaitTime) end
			if AddFuncs[i] then AddFuncs[i]() end
		end
	end
end
local function SolveRot(CF,Pos,Full,a,b,Inv,Det)
	if Full then
		local L=CF:PointToObjectSpace(Pos)
		local Lu=L.Unit
		local c=L.Magnitude
		local Ax=v3(0,0,-1):Cross(Lu)
		local Ang=math.acos(-Lu.Z)
		local Pl=CFrame.fromAxisAngle(Ax,Ang)
		if c<math.max(a,b)-math.min(a,b) then
			return Pl*cf(0,0,math.max(a,b)-math.min(a,b)-c)*angles(math.pi/2,0,0)
		elseif c>a+b then
			return Pl*cf(0,0,a+b-c)*angles(math.pi/2,0,0)
		else
			local t1=-math.acos((-b^2+a^2+c^2)/(2*a*c))
			local t2=math.acos((b^2-a^2+c^2)/(2*b*c))
			if Inv then t1=-t1 t2=-t2 end
			if Det then
				return Pl,t1+math.pi/2,t2-t1
			else
				return Pl*angles(t1+math.pi/2,0,0)*cf(0,-a,0)*angles(t2-t1,0,0)*cf(0,a,0)
			end
		end
	else
		local L=CF:PointToObjectSpace(Pos)
		local Lu=L.Unit
		local Ax=v3(0,0,-1):Cross(Lu)
		local Ang=math.acos(-Lu.Z)
		local P=CFrame.fromAxisAngle(Ax,Ang)*angles(math.pi/2,0,0)
		return P
	end
end
function GetCC(Pos,Range,Ignore,CharPos,Turn)
	Pos=Pos or hrp.Position
	Range=Range or 5
	Ignore=Ignore or {char}
	local Chars,CharsDist={},{}
	for i,v in pairs(workspace:FindPartsInRegion3WithIgnoreList(Region3.new(Pos-Vector3.new(1,1,1)*Range,Pos+Vector3.new(1,1,1)*Range),Ignore,100)) do
		if v.Parent:FindFirstChildOfClass("Humanoid") then
			local HUM=v.Parent:FindFirstChildOfClass("Humanoid")
			local T=HUM.Parent:FindFirstChild("Torso") or HUM.Parent:FindFirstChild("UpperTorso")
			local Hit=Raycast(CharPos or Pos,T.Position-(CharPos or Pos),{char},((CharPos or Pos)-T.Position).Magnitude+.1,true)
			local Ex=false
			for i,q in pairs(Chars) do
				if v:IsDescendantOf(q[1].Parent) then Ex=true break end
			end
			if T and (Hit and Hit:IsDescendantOf(HUM.Parent)) and HUM.Health>0 and not Ex then
				table.insert(Chars,{T,HUM})
				table.insert(CharsDist,(Pos-T.Position).Magnitude)
			end
		end
	end
	if #Chars==0 then return end
	local Closest=math.min(unpack(CharsDist))
	for i=1,#Chars do
		if (Pos-Chars[i][1].Position).Magnitude==Closest then
			if Turn then hrp.CFrame=CFrame.new((CharPos or Pos),Vector3.new(Chars[i][1].Position.X,Pos.Y,Chars[i][1].Position.Z)) end
			return Chars[i][1].Parent,Chars[i][1],Chars[i][2]
		end
	end
end
function GetCCs(Pos,Range,Ignore,Limit,CharPos)
	Pos=Pos or hrp.Position
	Range=Range or 5
	Ignore=Ignore or {char}
	local Chars,CharsDist={},{}
	for i,v in pairs(workspace:FindPartsInRegion3WithIgnoreList(Region3.new(Pos-Vector3.new(1,1,1)*Range,Pos+Vector3.new(1,1,1)*Range),Ignore,200)) do
		if v.Parent:FindFirstChildOfClass("Humanoid") then
			local HUM=v.Parent:FindFirstChildOfClass("Humanoid")
			local T=HUM.Parent:FindFirstChild("Torso") or HUM.Parent:FindFirstChild("UpperTorso")
			local Hit=Raycast(CharPos or Pos,T.Position-(CharPos or Pos),{char},((CharPos or Pos)-T.Position).Magnitude+.1,true)
			local Ex=false
			for i,q in pairs(Chars) do
				if v:IsDescendantOf(q[1].Parent) then Ex=true break end
			end
			if T and (Hit and Hit:IsDescendantOf(HUM.Parent)) and HUM.Health>0 and not Ex then
				table.insert(Chars,{T,HUM})
				table.insert(CharsDist,(Pos-T.Position).Magnitude)
			end
		end
	end
	if #Chars==0 then return end
	if #Chars<=Limit then return Chars end
	local GivChars={}
	for x=1,Limit do
		local Closest=math.min(unpack(CharsDist))
		for i=1,#Chars do
			if (Pos-Chars[i][1].Position).Magnitude==Closest then
				table.insert(GivChars,{Chars[i][1],Chars[i][2]})
				table.remove(Chars,i)
				table.remove(CharsDist,i)
			end
		end
	end
	return GivChars
end
function Sound(Id,Volume,Pitch,Parent,MaxDistance,EmitterSize,Looped)
	local S=ins("Sound",{Volume=Volume or 1;Pitch=Pitch or 1;MaxDistance=MaxDistance or 500;EmitterSize=EmitterSize or 5;Looped=Looped or false;SoundId="rbxassetid://"..Id,Parent=Parent})
	S:Play()
	coroutine.wrap(function()
		if S.Looped then return end
		if S.IsLoaded then
			Instance.Remove(S,S.TimeLength/S.Pitch)
		else
			S.Loaded:Connect(function()
				Instance.Remove(S,S.TimeLength/S.Pitch)
			end)
		end
	end)()
	return S
end
--
local SAttacks={
	function(Sword,Hum,T,ind)
		if Sword[7] or Hum.Health<.1 or not Sword[1] then return end
		coroutine.wrap(function()
			local Accel=random(10,20,19)
			local Dist=(Sword[1].Position-T.Position).Magnitude+Accel
			local Pos=Sword[1].Position
			local Off=v3(random(-10,10,10),random(-10,10,10),random(-10,10,10))
			Sword[4]=true
			Sword[2]=true
			Sword[5]=tick()
			Sword[6]=Dist/200+.25
			for i=0,1.2,.1 do
				local B=Bezier(Pos,T.Position,Pos+(T.Position-Pos)/2+Off,i)
				local LB=Bezier(Pos,T.Position,Pos+(T.Position-Pos)/2+Off,i+.1)
				Sword[1]:WaitForChild("BP",1).Position=B
				Sword[1]:WaitForChild("BG",1).CFrame=cf(Sword[1].Position,LB)*angles(-90,0,0,true)
				game:GetService("RunService").Heartbeat:Wait()
			end
			if not Sword[7] then
				Sword[3]-=1
				if Sword[3]<1 then
					Sword[7]=true
					CrossClient.SD(Sword[1].Position,Sword[1].Velocity)
					Sword[1].Parent=nil
				end
			end
			Sword[4]=false
		end)()
	end,
	function(Sword,Hum,T,ind)
		if Sword[7] or Hum.Health<.1 or not Sword[1] then return end
		coroutine.wrap(function()
			local Accel=random(10,20,19)
			local Dist=(Sword[1].Position-T.Position).Magnitude+Accel
			Sword[4]=true
			Sword[2]=true
			Sword[5]=tick()
			Sword[6]=Dist/200+.1*ind
			Sword[1]:WaitForChild("BG",1).CFrame=cf(Sword[1].Position,T.Position)*angles(-90,0,0,true)
			local T=Tween(Sword[1]:WaitForChild("BP",1),{Position=(cf(Sword[1].Position,T.Position)*cf(0,0,-Dist)).Position},{Sword[6],Enum.EasingStyle.Back,Enum.EasingDirection.In,0,false,0})
			Sword[8]=T
			wait(Sword[6]+.25)
			if not Sword[7] then
				Sword[3]-=1
				if Sword[3]<1 then
					Sword[7]=true
					CrossClient.SD(Sword[1].Position,Sword[1].Velocity)
					Sword[1].Parent=nil
				end
			end
			Sword[4]=false
		end)()
	end,
}
--
CrossClient.UpdateSwords = function(Tab,New)
	if AttTarget then table.insert(Swords,New) return end
	Swords=Tab
end
--
local Moves={
	Equals={Func=function()
		Hitbox=not Hitbox
	end,Deb=0,Tick=tick()},
	Underscore={Func=function()
		char:MoveTo(t.Position)
		print(Swords)
	end,Deb=0,Tick=tick()},
	T={Func=function()
		Dancing=not Dancing
	end,Deb=0,Tick=tick()},
	Z={Func=function()
		Sitting=not Sitting
		Crying=false
		Dancing=false
	end,Deb=0,Tick=tick()},
	X={Func=function()
		Sitting=false
		Crying=not Crying
		Dancing=false
	end,Deb=0,Tick=tick()},
	
	F={Func=function()
		if #Swords<1 or Using or AttTarget then return end
		Using=true
		local Targets=GetCCs(Mouse.Hit.Position,(Mouse.Hit.Position-Cam.CFrame.Position).Magnitude/3,{char},6,t.Position)
		if Targets then
			local T,H=Targets[1][1],Targets[1][2]
			PlayAnim(Anims.Cast)
			AttTargetNum=1
			AttTarget={T,H}
			AttTargets=Targets
		end
		Using=false
	end,Deb=0,Tick=tick()},
}
--
UIS.InputBegan:Connect(function(IO,L)
	if L then return end
	if IO.UserInputType==Enum.UserInputType.Keyboard then
		if Moves[IO.KeyCode.Name] then 
			local T=Moves[IO.KeyCode.Name]
			if tick()-T.Tick>T.Deb or T.Deb==0 then
				local Res=T.Func()
				T.Tick=not Res and T.Tick or tick()
			end
		end
	elseif IO.UserInputType==Enum.UserInputType.MouseButton1 and not Using then
		if (Sitting or Crying) then return end
		local Anim=Anims["Swing"..Combo]
		if Anim then
			Using=true
			LtM=true
			local Damage=false
			local KillDamage=false
			coroutine.wrap(function()
				while not KillDamage do
					if Damage then
						local Pos={}
						for i=-.3,.3,.3 do
							table.insert(Pos,(TP.Blade.CFrame*cf(0,0,TP.Blade.Size.Z*i)).Position)
							GlobalFunctions.fling(TP.Blade, 0.001)
						end
						
						--CrossClient.SwordDamage(Pos)
					end
					game:GetService("RunService").Heartbeat:Wait()
				end
			end)()
			PlayAnim(Anim,{[1]=function() Damage=true end})
			Damage=false
			KillDamage=true
			Using=false
			LtM=false
			Combo+=1
			if Combo>3 then Combo=1 end
		end
	end
end)
UIS.InputEnded:Connect(function(IO,L)
	if L then return end
	if IO.UserInputType==Enum.UserInputType.Keyboard then
	elseif IO.UserInputType==Enum.UserInputType.MouseButton1 then
	end
end)
--

game:GetService("RunService").Heartbeat:Connect(function(Step)
	if Climbing and tick()-ClimbTick>.15 then Climbing=false end
	if hum.FloorMaterial==Enum.Material.Air and not Climbing then
		local Hits,LastHit,LastPos,HitParts=0,nil,0,{}
		local Div=20
		local HIt,POs=Raycast(hrp.CFrame*cf(0,1,0).Position,v3(0,1,0),{char},5,true)
		for i=0,3,1/Div do
			local Dir=hum.MoveDirection.Magnitude>0 and hum.MoveDirection or (hrp.Velocity*v3(1,0,1))/10
			local Hit,Pos,NID=Raycast((Dir.Magnitude>.5 and (cf(hrp.Position,hrp.Position+Dir)) or hrp.CFrame)*cf(0,5,-i-.5).Position,v3(0,-1,0),{char},5,true)
			local HIT,POS=Raycast(POs,Pos-POs,{char},10,true)
			Hits+=((Hit and POS==Pos) and Hit.CanCollide) and 1 or 0
			if (Hit and POS==Pos) and Hit.CanCollide then LastHit=Pos LastPos=i*10 table.insert(HitParts,Hit) end
		end
		if Hits>=Div then
			Climbing=true ClimbTick=tick()
			Instance.Remove(ins("BodyVelocity",{MaxForce=v3(1/0,1/0,1/0),Velocity=(LastHit*v3(1,0,1)-hrp.Position*v3(1,0,1)).Unit*(LastPos/1.75)+v3(0,30,0),Parent=hrp}),.1)
			coroutine.wrap(function()
				for i,v in pairs(HitParts) do
					v.CanCollide=false
				end
				wait(.15)
				for i,v in pairs(HitParts) do
					v.CanCollide=true
				end
			end)()
		elseif Hits>=4 and LastPos<25 then
			local Hits=0
			for i=0,5,.1 do
				local Hit,Pos,NID=Raycast((hrp.Position*v3(1,0,1))+v3(0,LastHit.Y,0)-v3(0,.5+i,0),(LastHit*v3(1,0,1)-hrp.Position*v3(1,0,1)).Unit,{char},10,true) --TODO:finish_swings
				Hits+=Hit and 1 or 0
			end
			if Hits<5 then
				coroutine.wrap(function()
					for i,v in pairs(HitParts) do
						v.CanCollide=false
					end
					wait(.15)
					for i,v in pairs(HitParts) do
						v.CanCollide=true
					end
				end)()
				coroutine.wrap(function()
					for i=0,360,30 do
						rutj.C1=rutjC1*angles(-i,0,0,true)
						game:GetService("RunService").Heartbeat:Wait()
					end
				end)()
				Instance.Remove(ins("BodyVelocity",{MaxForce=v3(1/0,1/0,1/0),Velocity=(LastHit*v3(1,0,1)-hrp.Position*v3(1,0,1)).Unit*60+v3(0,40,0),Parent=hrp}),.1)
			else
				coroutine.wrap(function()
					for i,v in pairs(HitParts) do
						v.CanCollide=false
					end
					wait(.15)
					for i,v in pairs(HitParts) do
						v.CanCollide=true
					end
				end)()
				Tween(rutj,{C1=cf(0,-.5,0)*angles(30,-20,-50,true)},{.15,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,0,false,0})
				Instance.Remove(ins("BodyVelocity",{MaxForce=v3(1/0,1/0,1/0),Velocity=(LastHit*v3(1,0,1)-hrp.Position*v3(1,0,1)).Unit*30+v3(0,40,0),Parent=hrp}),.1)
			end
		end
	end
	if LtM then
		hrp.CFrame=cf(hrp.Position,v3(Mouse.Hit.X,hrp.Position.Y,Mouse.Hit.Z))
	end
	Mus=t:FindFirstChild("VMus")
	hum.CameraOffset=hum.CameraOffset:Lerp((hrp.CFrame*cf(0,1.5,0)):PointToObjectSpace(h.Position),.15)
	Sine=Sine+Change
	local Direction=hum.MoveDirection
	if Direction.Magnitude==0 then Direction=hrp.Velocity/7.5 end
	local MoveZ=clamp((Direction*ft.CFrame.LookVector).X+(Direction*ft.CFrame.LookVector).Z,-1,1)
	local MoveX=clamp((Direction*ft.CFrame.RightVector).X+(Direction*ft.CFrame.RightVector).Z,-1,1)
	local Moving=(hrp.Velocity*v3(1,0,1)).Magnitude>1
	local VerY=hrp.Velocity.Y
	local StandR,RPos,RNID=Raycast(hrp.CFrame*cf(t.Size.X/4,-t.Size.Y/2,0).Position,-t.CFrame.UpVector,{char},4,false)
	local StandL,LPos,LNID=Raycast(hrp.CFrame*cf(-t.Size.X/4,-t.Size.Y/2,0).Position,-t.CFrame.UpVector,{char},4,false)
	local Stand=StandR or StandL
	if not Moving and Stand then
		local IdleVal=20
		Change=1*(Step*60)
		if not Dancing then
			nec.C0=nec.C0:Lerp(necC0*cf(0,0,0)*angles(cos(Sine/IdleVal)*-3,cotan(Sine/(IdleVal*4))*5,cos(Sine/(IdleVal*3))*-3,true)*(Sitting and angles(-15,15,5,true) or Crying and angles(-50,0,0,true) or CFrame.Angles(math.rad(0),math.rad(-10),math.rad(0))),.1*(Step*60))
			rutj.C0=rutj.C0:Lerp(rutjC0*cf(0,sin(Sine/IdleVal)*.05,cos(Sine/(IdleVal*1.5))*.05)*angles(sin(Sine/IdleVal)*2+cos(Sine/(IdleVal*1.5)),cos(Sine/(IdleVal*1.5))*3,cotan(Sine/(IdleVal*3))*5,true)*(Sitting and cf(0,-1.65,0)*angles(20,-25,0,true) or Crying and cf(0,-1.9,1)*angles(-15,0,0,true) or CFrame.Angles(math.rad(0),math.rad(10),math.rad(0))),.1*(Step*60))
			rs.C0=rs.C0:Lerp(rsC0*cf(0,-.05+cos(Sine/IdleVal)*-.05-.05+cotan(Sine/(IdleVal*3))*.05,0)*cf(0,.25,0)*angles(cos(Sine/IdleVal)*-2+sin(Sine/(IdleVal*1.5))*1+cotan(Sine/(IdleVal*1.5))*-3+sin(Sine/(IdleVal*1.5))*-2,sin(Sine/(IdleVal*1.5))*-3,sin(Sine/(IdleVal*3))*-3+1+cos(Sine/IdleVal)*-1,true)*cf(0,-.25,0)*((Sitting or Crying) and cf(-0.1,-0.1,0.05) or CFrame.new(-0.35,-0.2,-0.15))*(Sitting and cf(0,-0.35,0.1)*angles(-30,0,10,true)*angles(0,-50,0,true) or Crying and cf(-0.25,-0.4,-0.5)*angles(100,0,-80,true)*angles(0,70,0,true) or CFrame.Angles(math.rad(40),math.rad(-10),math.rad(-70))*CFrame.Angles(math.rad(0),math.rad(70),math.rad(0))),.1*(Step*60))
			ls.C0=ls.C0:Lerp(lsC0*cf(0,-.05+cos(Sine/IdleVal)*-.05-.05+cotan(Sine/(IdleVal*3))*-.05,0)*cf(0,.25,0)*angles(cos(Sine/IdleVal)*-2+sin(Sine/(IdleVal*1.5))*1+cotan(Sine/(IdleVal*1.5))*3+sin(Sine/(IdleVal*1.5))*2,sin(Sine/(IdleVal*1.5))*-3,sin(Sine/(IdleVal*3))*-3-1+cos(Sine/IdleVal)*1,true)*cf(0,-.25,0)*((Sitting or Crying) and cf(0.1,-0.1,0.05) or CFrame.new(0.1,-0.1,0.05))*(Sitting and cf(0.3,-0.25,-0.1)*angles(70,0,60,true) or Crying and cf(0.25,-0.4,-0.5)*angles(100,0,70,true)*angles(0,-70,0,true) or CFrame.Angles(math.rad(-10),math.rad(10),math.rad(-5))),.1*(Step*60))
			rh.C0=rh.C0:Lerp(rhC0*cf(0,-sin(Sine/IdleVal)*.05+clamp(cotan(Sine/(IdleVal*3))*-.05,0,.05),-.025+cos(Sine/(IdleVal*1.5))*-.025)*angles(sin(Sine/IdleVal)*-3+cos(Sine/(IdleVal*1.5))*-1.5+cos(Sine/(IdleVal*1.5))*-1-.5+cos(Sine/(IdleVal*1.5))*.5,0,cotan(Sine/(IdleVal*3))*-7.5,true)*cf(0,0,-0.05)*(Sitting and angles(70,15,-10,true) or Crying and cf(0,1.25,-0.45)*angles(50,5,-5,true) or CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(-12.5),math.rad(5))),.1*(Step*60))
			lh.C0=lh.C0:Lerp(lhC0*cf(0,-sin(Sine/IdleVal)*.05+clamp(cotan(Sine/(IdleVal*3))*.05,0,.05),-.025+cos(Sine/(IdleVal*1.5))*-.025)*angles(sin(Sine/IdleVal)*-3+cos(Sine/(IdleVal*1.5))*-1.5+cos(Sine/(IdleVal*1.5))*1-.5+cos(Sine/(IdleVal*1.5))*.5,0,cotan(Sine/(IdleVal*3))*-7.5,true)*(Sitting and cf(0,0.9,-0.65)*angles(20,5,0,true) or Crying and cf(0,1.1,-0.5)*angles(60,-10,7,true) or CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(7.5),math.rad(0))),.1*(Step*60))	
			tw.C0=tw.C0:Lerp(thC0*angles(-10,0,0,true),.1*(Step*60))
		else
			IdleVal=15
			nec.C0=nec.C0:Lerp(necC0*angles(-5+sin(Sine/(IdleVal/4))*5,(-cos(Sine/(IdleVal))*sin(Sine/(IdleVal/4)))*30,0,true),.1*(Step*60))
			rutj.C0=rutj.C0:Lerp(rutjC0*cf(0,-1,0)*cf(0,-.25-(cotan(Sine/IdleVal)*cos(Sine/(IdleVal/3)))*.5,0)*angles(5-cos(Sine/(IdleVal/2))*5,(cos(Sine/(IdleVal/2))*sin(Sine/IdleVal))*30,0,true)*cf(0,1,0),.1*(Step*60))
			rs.C0=rs.C0:Lerp(rsC0*cf(-.2-(cos(Sine/(IdleVal/2))*sin(Sine/(IdleVal*2)))*.5,-.25-sin(Sine/(IdleVal/4))*.4,-.4-sin(Sine/(IdleVal/4))*.25+(cos(Sine/(IdleVal/2))*sin(Sine/IdleVal))*.2)*angles((-cos(Sine/(IdleVal/2))*cos(Sine/IdleVal))*60+(cos(Sine/(IdleVal/2))*sin(Sine/(IdleVal*2)))*45,cotan(Sine/(IdleVal))*cos(Sine/(IdleVal/2))*120+(cos(Sine/(IdleVal/2))*sin(Sine/(IdleVal*2)))*30,-cos(Sine/(IdleVal/4))*20,true)*angles(90,0,0,true),.1*(Step*60))
			ls.C0=ls.C0:Lerp(lsC0*cf(.2+(cos(Sine/(IdleVal/2))*sin(Sine/(IdleVal*2)))*.5,-.25-sin(Sine/(IdleVal/4))*.4,-.4-sin(Sine/(IdleVal/4))*.25+(cos(Sine/(IdleVal/2))*sin(Sine/IdleVal))*.2)*angles((-cos(Sine/(IdleVal/2))*cos(Sine/IdleVal))*60+(cos(Sine/(IdleVal/2))*sin(Sine/(IdleVal*2)))*45,cotan(Sine/(IdleVal))*cos(Sine/(IdleVal/2))*120-(cos(Sine/(IdleVal/2))*sin(Sine/(IdleVal*2)))*30,cos(Sine/(IdleVal/4))*20,true)*angles(90,0,0,true),.1*(Step*60))
			rh.C0=rh.C0:Lerp(rhC0*cf(0,.15-(cotan(Sine/IdleVal)*cos(Sine/(IdleVal/3)))*-.5+clamp(sin(Sine/(IdleVal))*cos(Sine/(IdleVal/2)),.1,1)*.5,-.25+(cotan(Sine/IdleVal)*cos(Sine/(IdleVal/3)))*.25-clamp(sin(Sine/(IdleVal))*cos(Sine/(IdleVal/2)),0,1)*.35)*angles(-2.5+(cos(Sine/(IdleVal/2))*sin(Sine/IdleVal))*-5+(-5+(cotan(Sine/IdleVal)*cos(Sine/(IdleVal/3)))*2.5)-clamp(sin(Sine/(IdleVal))*cos(Sine/(IdleVal/2)),0,1)*25,(cos(Sine/(IdleVal/2))*sin(Sine/IdleVal))*-30,0,true)*angles(0,-5,5,true),.1*(Step*60))
			lh.C0=lh.C0:Lerp(lhC0*cf(0,.15-(cotan(Sine/IdleVal)*cos(Sine/(IdleVal/3)))*-.5-clamp(sin(Sine/(IdleVal))*cos(Sine/(IdleVal/2)),-1,.1)*.5,-.25-(cotan(Sine/IdleVal)*cos(Sine/(IdleVal/3)))*.25+clamp(sin(Sine/(IdleVal))*cos(Sine/(IdleVal/2)),-1,0)*.35)*angles(-2.5+(cos(Sine/(IdleVal/2))*sin(Sine/IdleVal))*5+(-5-(cotan(Sine/IdleVal)*cos(Sine/(IdleVal/3)))*2.5)+clamp(sin(Sine/(IdleVal))*cos(Sine/(IdleVal/2)),-1,0)*25,(cos(Sine/(IdleVal/2))*sin(Sine/IdleVal))*-30,0,true)*angles(0,5,-5,true),.1*(Step*60))
			tw.C0=tw.C0:Lerp(thC0,.1*(Step*60))
		end
	elseif Moving and Stand then
		local WSVal=6/clamp(hum.WalkSpeed/16,.25,2)*t.Size.Y/2
		local WSMul=(1+(WSVal/4))
		Change=1*(Step*60)
		nec.C0=nec.C0:Lerp(necC0*cf(0,0,0)*angles(sin(Sine/(WSVal/2))*2.5,0,0,true)*cf(0,0,0)*angles(5*MoveZ,-60*MoveX,0,true),(.2/(t.Size.Y/2)*(hum.WalkSpeed/16)/3)*(Step*60))
		rutj.C0=rutj.C0:Lerp(rutjC0*cf(0,-3,0)*angles(VerY*2.5*MoveZ,0,VerY*2.5*MoveX,true)*cf(0,3,0)*cf(0,.75*cos(Sine/(WSVal/2)),0)*angles(cotan(Sine/(WSVal/2))*22.5,sin(Sine/WSVal)*10,0,true)*cf(0,0,0)*angles(-10*MoveZ,0,-10*MoveX,true),(.2/(t.Size.Y/2)*(hum.WalkSpeed/16)/3)*(Step*60))
		rs.C0=rs.C0:Lerp(rsC0*cf(0,0,.5*sin(Sine/WSVal)*MoveZ)*angles(-cotan(Sine/WSVal)*120*MoveZ,0,0,true)*angles(0,-cotan(Sine/WSVal)*70*MoveZ,0,true)*cf(-.15,0,0)*angles(10,0,-10*abs(MoveZ),true),(.2/(t.Size.Y/2)*(hum.WalkSpeed/16)/3)*(Step*60))
		ls.C0=ls.C0:Lerp(lsC0*cf(0,0,-.5*sin(Sine/WSVal)*MoveZ)*angles(cotan(Sine/WSVal)*120*MoveZ,0,0,true)*angles(0,-cotan(Sine/WSVal)*70*MoveZ,0,true)*cf(.15,0,0)*angles(10,0,10*abs(MoveZ),true),(.2/(t.Size.Y/2)*(hum.WalkSpeed/16)/3)*(Step*60))
		rh.C0=rh.C0:Lerp(rhC0*cf(0,.1+.75*cos(Sine/WSVal),-.2-.9*cos(Sine/WSVal))*angles(cotan(Sine/WSVal)*190*MoveZ,0,cotan(Sine/WSVal)*160*MoveX,true)*cf(0,0,0)*angles(-7.5*abs(MoveZ),0,0,true),(.2/(t.Size.Y/2)*(hum.WalkSpeed/16)/3)*(Step*60))
		lh.C0=lh.C0:Lerp(lhC0*cf(0,.1+-.75*cos(Sine/WSVal),-.2+.9*cos(Sine/WSVal))*angles(-cotan(Sine/WSVal)*190*MoveZ,0,-cotan(Sine/WSVal)*160*MoveX,true)*cf(0,0,0)*angles(-7.5*abs(MoveZ),0,0,true),(.2/(t.Size.Y/2)*(hum.WalkSpeed/16)/3)*(Step*60))
		tw.C0=tw.C0:Lerp(thC0,(.2/(t.Size.Y/2)*(hum.WalkSpeed/16)/3)*(Step*60))
	elseif not Stand then
		Change=1*(Step*60)
		nec.C0=nec.C0:Lerp(necC0*cf(0,0,0)*angles(0,0,0,true)*cf(0,0,0)*angles(clamp(hrp.Velocity.Y,-15,15),0,0,true),.2*(Step*60))
		rutj.C0=rutj.C0:Lerp(rutjC0*cf(0,0,0)*angles(0,0,0,true)*cf(0,0,0)*angles(clamp(hrp.Velocity.Y,-30,20),0,0,true),.2*(Step*60))
		rs.C0=rs.C0:Lerp(rsC0*cf(0,0,0)*angles(0,5,-7.5,true)*cf(-(clamp(hrp.Velocity.Y/20,-.45,0)),0,0)*angles((clamp(hrp.Velocity.Y*4,0,150)),0,-(clamp(hrp.Velocity.Y*4,-120,0)),true),.1*(Step*60))
		ls.C0=ls.C0:Lerp(lsC0*cf(0,0,0)*angles(0,-5,7.5,true)*cf((clamp(hrp.Velocity.Y/20,-.45,0)),0,0)*angles((clamp(hrp.Velocity.Y*4,0,150)),0,(clamp(hrp.Velocity.Y*4,-120,0)),true),.1*(Step*60))
		rh.C0=rh.C0:Lerp(rhC0*cf(0,0,0)*angles(0,0,0,true)*cf(0,.4,-.35)*angles(-10,-5,5,true),.2*(Step*60))
		lh.C0=lh.C0:Lerp(lhC0*cf(0,0,0)*angles(clamp(-hrp.Velocity.Y,-25,35),0,0,true)*cf(0,.2,-.15)*angles(-2.5,5,-5,true),.2*(Step*60))
		tw.C0=tw.C0:Lerp(thC0,.2*(Step*60))
	end
	nec.C1=nec.C1:Lerp(necC1,.2*(Step*60))
	rutj.C1=rutj.C1:Lerp(rutjC1,.2*(Step*60))
	rs.C1=rs.C1:Lerp(rsC1,.2*(Step*60))
	ls.C1=ls.C1:Lerp(lsC1,.2*(Step*60))
	rh.C1=rh.C1:Lerp(rhC1,.2*(Step*60))
	lh.C1=lh.C1:Lerp(lhC1,.2*(Step*60))
	necC0,necC1=cf(0,t.Size.Y/2,0),cf(0,-h.Size.Y/2,0)
	rutjC0,rutjC1=cf(0,0,0),cf(0,0,0)
	rsC0,rsC1=cf(t.Size.X/2,t.Size.Y/4,0),cf(-ra.Size.X/2,ra.Size.Y/4,0)
	lsC0,lsC1=cf(-t.Size.X/2,t.Size.Y/4,0),cf(la.Size.X/2,la.Size.Y/4,0)
	rhC0,rhC1=cf(t.Size.X/4,-t.Size.Y/2,0),cf(0,rl.Size.Y/2,0)
	lhC0,lhC1=cf(-t.Size.X/4,-t.Size.Y/2,0),cf(0,ll.Size.Y/2,0)
	thC0=cf(-ra.Size.X/5,-ra.Size.Y/2+.1,0)
	fh.Size,ft.Size,fra.Size,fla.Size,frl.Size,fll.Size=h.Size,t.Size,ra.Size,la.Size,rl.Size,ll.Size
	if AttTarget then
		local Dead=0
		local ToRemove={}
		for i,v in pairs(Swords) do
			if AttTarget[2].Health<.1 then break end
			if v[7] or not v[1] then Dead+=1 table.insert(ToRemove,i) continue end
			CrossClient.SummonDamage(v[1].Position)
			if not v[4] then
				SAttacks[random(1,#SAttacks)](Swords[i],AttTarget[2],AttTarget[1],i)
			end
		end
		if Dead==#Swords then
			Swords={}
		elseif Dead>0 then
			for i,v in pairs(ToRemove) do
				if Swords[v][1] and Swords[v][1].Parent then CrossClient.SD(Swords[v][1].Position,Swords[v][1].Velocity) end
				Instance.Remove(Swords[v][1])
				table.remove(Swords,v)
			end
		end
		if AttTarget[2].Health<.1 then for i,v in pairs(Swords) do if v[8] then v[8]:Cancel() end Swords[i][2],Swords[i][4]=false,false end end
		if #Swords<1 then AttTarget=nil AttTargets=nil end
		if #Swords>1 and AttTarget[2].Health<.1  then AttTargetNum+=1 if AttTargetNum>#AttTargets then AttTarget=nil AttTargets=nil for i,v in pairs(Swords) do Swords[i][4]=false end end if AttTargets then AttTarget={AttTargets[AttTargetNum][1],AttTargets[AttTargetNum][2]}  end end
		CrossClient.UpdateSwords(Swords)
	end
	for i,v in pairs(Swords) do
		if v[2] then continue end
		if not v[1] or not v[1].Parent or not v[1]:FindFirstChild("BP") then table.remove(Swords,i) continue end
		local Change=i/2==floor(i/2)
		local Off=cf(Change and -.5 or .5,.65,1.25+i/1.5)
		local CF=t.CFrame*angles(0,Change and -15 or 15,0,true)*Off*angles(180-(5*i),0,0,true)*cf(0,sin(Sine/15+i)*.25,-cos(Sine/15+i)*.25)*angles(cos((Sine/15+i)/2)*15,0,0,true)
		v[1].BP.Position=CF.Position
		v[1].BG.CFrame=CF
	end
	
end)

wait(1/30)
end)
Section:NewButton("Fe zen (free)", "ButtonInfo", function()
loadstring(game:HttpGet('https://pastebin.com/raw/dC8vY4YU'))()
end)
Section:NewButton("Fe shotgun","ButtonInfo", function()

sounds = true -- if this is set to false than sounds are off

MadeByScriptVerse = true
local f=string.byte;local F=string.char;local t=string.sub;local R=table.concat;local s=table.insert;local r=math.ldexp;local A=getfenv or function()return _ENV end;local e=setmetatable;local h=select;local i=unpack or table.unpack;local d=tonumber;local function D(i)local l,n,o="","",{}local c=256;local a={}for e=0,c-1 do a[e]=F(e)end;local e=1;local function f()local l=d(t(i,e,e),36)e=e+1;local n=d(t(i,e,e+l-1),36)e=e+l;return n end;l=F(f())o[1]=l;while e<#i do local e=f()if a[e]then n=a[e]else n=l..t(l,1,1)end;a[c]=l..t(n,1,1)o[#o+1],l,c=n,n,c+1 end;return table.concat(o)end;local dlocal o=bit and bit.bxor or function(e,n)local l,o=1,0 while e>0 and n>0 do local c,t=e%2,n%2 if c~=t then o=o+l end e,n,l=(e-c)/2,(n-t)/2,l*2 end if e<n then e=n end while e>0 do local n=e%2 if n>0 then o=o+l end e,l=(e-n)/2,l*2 end return o end local function n(l,e,n)if n then local e=(l/2^(e-1))%2^((n-1)-(e-1)+1);return e-e%1;else local e=2^(e-1);return(l%(e+e)>=e)and 1 or 0;end;end;local e=1;local function l()local l,n,t,c=f(d,e,e+3);l=o(l,135)n=o(n,135)t=o(t,135)c=o(c,135)e=e+4;return(c*16777216)+(t*65536)+(n*256)+l;end;local function a()local l=o(f(d,e,e),135);e=e+1;return l;end;local function c()local n,l=f(d,e,e+2);n=o(n,135)l=o(l,135)e=e+2;return(l*256)+n;end;local function D()local e=l();local l=l();local t=1;local o=(n(l,1,20)*(2^32))+e;local e=n(l,21,31);local l=((-1)^n(l,32));if(e==0)then if(o==0)then return l*0;else e=1;t=0;end;elseif(e==2047)then return(o==0)and(l*(1/0))or(l*(0/0));end;return r(l,e-1023)*(t+(o/(2^52)));end;local r=l;local function P(l)local n;if(not l)then l=r();if(l==0)then return'';end;end;n=t(d,e,e+l-1);e=e+l;local l={}for e=1,#n do l[e]=F(o(f(t(n,e,e)),135))end return R(l);end;local e=l;local function F(...)return{...},h('#',...)end local function r()local f={};local d={};local e={};local i={f,d,nil,e};local e=l()local t={}for n=1,e do local l=a();local e;if(l==1)then e=(a()~=0);elseif(l==3)then e=D();elseif(l==2)then e=P();end;t[n]=e;end;i[3]=a();for i=1,l()do local e=a();if(n(e,1,1)==0)then local o=n(e,2,3);local a=n(e,4,6);local e={c(),c(),nil,nil};if(o==0)then e[3]=c();e[4]=c();elseif(o==1)then e[3]=l();elseif(o==2)then e[3]=l()-(2^16)elseif(o==3)then e[3]=l()-(2^16)e[4]=c();end;if(n(a,1,1)==1)then e[2]=t[e[2]]end if(n(a,2,2)==1)then e[3]=t[e[3]]end if(n(a,3,3)==1)then e[4]=t[e[4]]end f[i]=e;end end;for e=1,l()do d[e-1]=r();end;return i;end;local function d(e,l,c)local l=e[1];local n=e[2];local e=e[3];return function(...)local o=l;local D=n;local t=e;local F=F local l=1;local a=-1;local r={};local f={...};local h=h('#',...)-1;local e={};local n={};for e=0,h do if(e>=t)then r[e-t]=f[e+1];else n[e]=f[e+1];end;end;local e=h-t+1 local e;local t;while true do e=o[l];t=e[1];if t<=25 then if t<=12 then if t<=5 then if t<=2 then if t<=0 then local f;local d,h;local t;n[e[2]]=n[e[3]];l=l+1;e=o[l];n[e[2]]=n[e[3]];l=l+1;e=o[l];n[e[2]]=c[e[3]];l=l+1;e=o[l];t=e[2]d,h=F(n[t](i(n,t+1,e[3])))a=h+t-1 f=0;for e=t,a do f=f+1;n[e]=d[f];end;l=l+1;e=o[l];t=e[2]n[t]=n[t](i(n,t+1,a))l=l+1;e=o[l];n[e[2]]();l=l+1;e=o[l];do return end;elseif t==1 then n[e[2]]=d(D[e[3]],nil,c);else n[e[2]]=n[e[3]];end;elseif t<=3 then local e=e[2]n[e](n[e+1])elseif t>4 then if(n[e[2]]~=e[4])then l=l+1;else l=e[3];end;else n[e[2]]=n[e[3]];end;elseif t<=8 then if t<=6 then do return n[e[2]]end elseif t==7 then n[e[2]]=e[3]/e[4];else n[e[2]]=c[e[3]];end;elseif t<=10 then if t>9 then n[e[2]]=(e[3]~=0);else if(n[e[2]]~=e[4])then l=l+1;else l=e[3];end;end;elseif t==11 then n[e[2]]=c[e[3]];else n[e[2]]=e[3]+n[e[4]];end;elseif t<=18 then if t<=15 then if t<=13 then local e=e[2]n[e](n[e+1])elseif t>14 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];else n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];end;elseif t<=16 then local t;c[e[3]]=n[e[2]];l=l+1;e=o[l];n[e[2]]=c[e[3]];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];t=e[2]n[t](n[t+1])l=l+1;e=o[l];n[e[2]]=c[e[3]];l=l+1;e=o[l];n[e[2]]={};l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];elseif t==17 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];else n[e[2]]=e[3];end;elseif t<=21 then if t<=19 then local l=e[2];local o=n[l];for e=l+1,e[3]do s(o,n[e])end;elseif t==20 then n[e[2]]=n[e[3]][e[4]];else do return n[e[2]]end end;elseif t<=23 then if t==22 then local e=e[2]n[e]=n[e](i(n,e+1,a))else n[e[2]]=d(D[e[3]],nil,c);end;elseif t>24 then n[e[2]]=n[e[3]]+e[4];else local e=e[2]n[e]=n[e](i(n,e+1,a))end;elseif t<=38 then if t<=31 then if t<=28 then if t<=26 then c[e[3]]=n[e[2]];l=l+1;e=o[l];n[e[2]]=e[3]/e[4];l=l+1;e=o[l];n[e[2]]=e[3]+n[e[4]];l=l+1;e=o[l];n[e[2]]=n[e[3]]+e[4];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=c[e[3]];l=l+1;e=o[l];n[e[2]]=n[e[3]][e[4]];elseif t>27 then c[e[3]]=n[e[2]];else if(n[e[2]]==e[4])then l=l+1;else l=e[3];end;end;elseif t<=29 then n[e[2]]=e[3];elseif t==30 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];else n[e[2]]();end;elseif t<=34 then if t<=32 then n[e[2]]=n[e[3]]+e[4];elseif t==33 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];else n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];end;elseif t<=36 then if t>35 then local l=e[2];local o=n[l];for e=l+1,e[3]do s(o,n[e])end;else n[e[2]]=(e[3]~=0);end;elseif t>37 then n[e[2]]=e[3]/e[4];else n[e[2]]={};end;elseif t<=45 then if t<=41 then if t<=39 then do return end;elseif t==40 then local l=e[2]local o,e=F(n[l](i(n,l+1,e[3])))a=e+l-1 local e=0;for l=l,a do e=e+1;n[l]=o[e];end;else n[e[2]]={};end;elseif t<=43 then if t==42 then c[e[3]]=n[e[2]];else local l=e[2]local o,e=F(n[l](i(n,l+1,e[3])))a=e+l-1 local e=0;for l=l,a do e=e+1;n[l]=o[e];end;end;elseif t>44 then n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];else n[e[2]]=n[e[3]][e[4]];end;elseif t<=48 then if t<=46 then if(n[e[2]]==e[4])then l=l+1;else l=e[3];end;elseif t==47 then l=e[3];else l=e[3];end;elseif t<=50 then if t==49 then do return end;else n[e[2]]();end;elseif t==51 then n[e[2]]=e[3]+n[e[4]];else n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];l=l+1;e=o[l];n[e[2]]=e[3];end;l=l+1;end;end;end;return d(r(),{},A())();    
end)

Section:NewButton("Fe Burgers bloodwater", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/wa/50402829b0e79da01658cb229f408befc1382bc6/Fe%20burgers%20bloodwater'))()
end)
Section:NewButton("Fe burgers bloodwater (free)", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/wa/main/Burgers%20bloodwater%20free'))()
end)
Section:NewButton("Fe Vr (uses guns)", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/Fe%20guns%20vr'))()
end)
Section:NewButton("Fe Lightning cannon", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/Fe%20lc'))()
end)
Section:NewButton("Fe Cop (50 robux)", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/Fe%20cop%20(free)'))()
end)
Section:NewButton("Fe chara Lightning cannon", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/Chara%20lc'))()
end)
Section:NewButton("Fe bloodwater (old)", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/FE%20bloodwater%20(old)'))()
end)
Section:NewButton("Fe Sofa (free)", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/Fe%20sofa'))()
end)
Section:NewButton("Fe laptop (free)", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/Fe%20laptop'))()
end)
Section:NewButton("Fe fighter (free)", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/Fe%20fighter'))()
end)
local Tab = Window:NewTab("Fe hubs")

local Section = Tab:NewSection("Hubs")

Section:NewButton("Nullware hub", "ButtonInfo", function()
getgenv().Theme = "Green" -- To change the UI Theme, set this to one of the following options: "Red", "Purple", "Blue", "Green", "Yellow"
loadstring(game:HttpGet("https://gist.githubusercontent.com/M6HqVBcddw2qaN4s/2d722888a388017c18028cd434c43a25/raw/dcccf1027fe4b90780e47767aaf584389c9d7771/EULma3fU90PUOKUn?identifier=".. (function()local a=""for b=1,256 do local c=math.random(1,3)a=a..string.char(c==1 and math.random(48,57)or c==2 and math.random(97,122)or c==3 and math.random(65,90))end;return a end)()))()
end)

Section:NewButton("deeri hub", "ButtonInfo", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/DeeriHub/Deeri-Hub/main/LoadString"))()
end)

Section:NewButton("Insanity hub", "ButtonInfo", function()
Key = '27t8fguig78278963917ggdug2' -- Get ur key here: https://linkvertise.com/390164/insanity-hub-c1/1

a="2buH";b="ytina"c="snI/niam";d="/2buH";e="ytinas";f="nI/ZR1ycI";g="/moc.tne";h="tnocre";i="subuh";j="tig";k=".war";l="//:";m="sptth";c=string.reverse(a..b..c..d..e..f..g..h..i..j..k..l..m);loadstring(game:HttpGet(c))()
end)

Section:NewButton("cheems ware v2", "ButtonInfo", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/XeneonPlays/Cheems-Ware/main/source.lua"))()
end)

Section:NewButton("Fe beach hub", "ButtonInfo", function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/bedra45/BeachHub/main/BeachAnimation'),true))()
end)

Section:NewButton("cheems ware v3", "ButtonInfo", function()
loadstring(game:HttpGet("https://nexo.notxeneon15.repl.co/cheemsware.lua"))()
end)

Section:NewButton("Cuubys Hub", "ButtonInfo", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/x2qiz/X2hub-3/main/Fe%20cuuby%20hub'))()
end)

local Tab = Window:NewTab("Credits")

local Section = Tab:NewSection("Credits")

Section:NewButton("e.??#3642", "ButtonInfo", function()

end)

Section:NewButton("BlueCat", "ButtonInfo", function()

end)

Section:NewButton("Cuub#6500", "ButtonInfo", function()

end)

Section:NewButton("Deia#1057", "ButtonInfo", function()

end)

Section:NewButton("PY#9528", "ButtonInfo", function()

end)

Section:NewButton("MyWorld#4430", "ButtonInfo", function()

end)

Section:NewButton("ShownApe#1000", "ButtonInfo", function()

end)

Section:NewButton("OmarXploits#4197", "ButtonInfo", function()

end)

Section:NewButton("red moon#9222", "ButtonInfo", function()

end)
